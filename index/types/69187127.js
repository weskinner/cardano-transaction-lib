// This file was generated by purescript-docs-search
window.DocsSearchTypeIndex["69187127"] = [{"values":[{"sourceSpan":{"start":[30,1],"name":".spago/web-file/v3.0.0/src/Web/File/Blob.purs","end":[30,42]},"score":2,"packageInfo":{"values":["web-file"],"tag":"Package"},"name":"fromString","moduleName":"Web.File.Blob","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","MediaType"],"MediaType"]}]},{"tag":"TypeConstructor","contents":[["Web","File","Blob"],"Blob"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a String with the given Mediatype\nFor example:\n```\nmyBlob = fromString (unsafeStringify { name: \"Carl\", age: 25 }) (MediaType \"application/json\")\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[161,1],"name":"src/Types/PubKeyHash.purs","end":[161,72]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"stakePubKeyHashRewardAddress","moduleName":"Types.PubKeyHash","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","PubKeyHash"],"StakePubKeyHash"]}]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"Address"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[109,1],"name":"src/Types/PubKeyHash.purs","end":[109,62]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"pubKeyHashRewardAddress","moduleName":"Types.PubKeyHash","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","PubKeyHash"],"PubKeyHash"]}]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"Address"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[113,1],"name":"src/Types/PubKeyHash.purs","end":[113,66]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"pubKeyHashEnterpriseAddress","moduleName":"Types.PubKeyHash","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","PubKeyHash"],"PubKeyHash"]}]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"Address"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[148,1],"name":"src/Types/PubKeyHash.purs","end":[148,72]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"payPubKeyHashRewardAddress","moduleName":"Types.PubKeyHash","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","PubKeyHash"],"PaymentPubKeyHash"]}]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"Address"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[157,1],"name":"src/Types/PubKeyHash.purs","end":[157,76]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"payPubKeyHashEnterpriseAddress","moduleName":"Types.PubKeyHash","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","PubKeyHash"],"PaymentPubKeyHash"]}]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"Address"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[108,1],"name":"src/Types/Natural.purs","end":[108,39]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"minus","moduleName":"Types.Natural","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","Natural"],"Natural"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","Natural"],"Natural"]}]},{"tag":"TypeConstructor","contents":[["Types","Natural"],"Natural"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Subtracts one natural number from another via `BigInt`. If the number\nbecomes negative, we return zero.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[130,1],"name":"src/TxOutput.purs","end":[131,68]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"scriptOutputToTransactionOutput","moduleName":"TxOutput","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","UnbalancedTransaction"],"ScriptOutput"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Transaction"],"TransactionOutput"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Converts `ScriptOutput` to an internal transaction output.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[101,1],"name":"src/TxOutput.purs","end":[102,57]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"scriptOutputToOgmiosTxOut","moduleName":"TxOutput","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","UnbalancedTransaction"],"ScriptOutput"]}]},{"tag":"TypeConstructor","contents":[["QueryM","Ogmios"],"OgmiosTxOut"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Converts an `ScriptOutput` to Ogmios Transaction output.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[693,1],"name":".spago/optparse/v4.1.0/src/Text/PrettyPrint/Leijen.purs","end":[693,29]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"flatAlt","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A document that is normally rendered as the first argument, but\nwhen flattened, is rendered as the second document.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[671,1],"name":".spago/optparse/v4.1.0/src/Text/PrettyPrint/Leijen.purs","end":[671,26]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"nest","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The document @(nest i x)@ renders document @x@ with the current\nindentation level increased by i (See also 'hang', 'align' and\n'indent').\n\n> nest 2 (text \"hello\" <$> text \"world\") <$> text \"!\"\n\noutputs as:\n\n@\nhello\n  world\n!\n@\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[655,1],"name":".spago/optparse/v4.1.0/src/Text/PrettyPrint/Leijen.purs","end":[655,28]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"beside","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[513,1],"name":".spago/optparse/v4.1.0/src/Text/PrettyPrint/Leijen.purs","end":[513,26]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"hang","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The hang combinator implements hanging indentation. The document\n@(hang i x)@ renders document @x@ with a nesting level set to the\ncurrent column plus @i@. The following example uses hanging\nindentation for some text:\n\n> test  = hang 4 (fillSep (map text\n>         (words \"the hang combinator indents these words !\")))\n\nWhich lays out on a page with a width of 20 characters as:\n\n@\nthe hang combinator\n    indents these\n    words !\n@\n\nThe @hang@ combinator is implemented as:\n\n> hang i x  = align (nest i x)\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[491,1],"name":".spago/optparse/v4.1.0/src/Text/PrettyPrint/Leijen.purs","end":[491,28]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"indent","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The document @(indent i x)@ indents document @x@ with @i@ spaces.\n\n> test  = indent 4 (fillSep (map text\n>         (words \"the indent combinator indents these words !\")))\n\nWhich lays out with a page width of 20 as:\n\n@\n    the indent\n    combinator\n    indents these\n    words !\n@\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[466,1],"name":".spago/optparse/v4.1.0/src/Text/PrettyPrint/Leijen.purs","end":[466,26]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"fill","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The document @(fill i x)@ renders document @x@. It than appends\n@space@s until the width is equal to @i@. If the width of @x@ is\nalready larger, nothing is appended. This combinator is quite\nuseful in practice to output a list of bindings. The following\nexample demonstrates this.\n\n> types  = [(\"empty\",\"Doc\")\n>          ,(\"nest\",\"Int -> Doc -> Doc\")\n>          ,(\"linebreak\",\"Doc\")]\n>\n> ptype (name,tp)\n>        = fill 6 (text name) <+> text \"::\" <+> text tp\n>\n> test   = text \"let\" <+> align (vcat (map ptype types))\n\nWhich is layed out as:\n\n@\nlet empty  :: Doc\n    nest   :: Int -> Doc -> Doc\n    linebreak :: Doc\n@\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[439,1],"name":".spago/optparse/v4.1.0/src/Text/PrettyPrint/Leijen.purs","end":[439,31]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"fillBreak","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The document @(fillBreak i x)@ first renders document @x@. It\nthan appends @space@s until the width is equal to @i@. If the\nwidth of @x@ is already larger than @i@, the nesting level is\nincreased by @i@ and a @line@ is appended. When we redefine @ptype@\nin the previous example to use @fillBreak@, we get a useful\nvariation of the previous output:\n\n> ptype (name,tp)\n>        = fillBreak 6 (text name) <+> text \"::\" <+> text tp\n\nThe output will now be:\n\n@\nlet empty  :: Doc\n    nest   :: Int -> Doc -> Doc\n    linebreak\n           :: Doc\n@\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[228,1],"name":".spago/optparse/v4.1.0/src/Text/PrettyPrint/Leijen.purs","end":[228,41]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"appendWithLinebreak","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The document @(x \\<$$\\> y)@ concatenates document @x@ and @y@ with\na @linebreak@ in between. (infixr 5)\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[222,1],"name":".spago/optparse/v4.1.0/src/Text/PrettyPrint/Leijen.purs","end":[222,36]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"appendWithLine","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The document @(x \\<$\\> y)@ concatenates document @x@ and @y@ with a\n'line' in between. (infixr 5)\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[216,1],"name":".spago/optparse/v4.1.0/src/Text/PrettyPrint/Leijen.purs","end":[216,41]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"appendWithSoftbreak","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The document @(x \\<\\/\\/\\> y)@ concatenates document @x@ and @y@ with\na 'softbreak' in between. This effectively puts @x@ and @y@ either\nright next to each other or underneath each other. (infixr 5)\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[209,1],"name":".spago/optparse/v4.1.0/src/Text/PrettyPrint/Leijen.purs","end":[209,40]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"appendWithSoftline","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The document @(x \\<\\/\\> y)@ concatenates document @x@ and @y@ with a\n'softline' in between. This effectively puts @x@ and @y@ either\nnext to each other (with a @space@ in between) or underneath each\nother. (infixr 5)\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[201,1],"name":".spago/optparse/v4.1.0/src/Text/PrettyPrint/Leijen.purs","end":[201,37]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"appendWithSpace","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The document @(x \\<+\\> y)@ concatenates document @x@ and @y@ with a\n@space@ in between.  (infixr 6)\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[253,1],"name":".spago/test-unit/v16.0.0/src/Test/Unit.purs","end":[253,34]},"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"it","moduleName":"Test.Unit","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`it` is an alias for `test` for BDD enthusiasts.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[241,1],"name":".spago/test-unit/v16.0.0/src/Test/Unit.purs","end":[241,45]},"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"describe","moduleName":"Test.Unit","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`describe` is an alias for `suite` for BDD enthusiasts.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[113,1],"name":".spago/test-unit/v16.0.0/src/Test/Unit.purs","end":[113,46]},"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"suiteSkip","moduleName":"Test.Unit","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Skip this suite.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[109,1],"name":".spago/test-unit/v16.0.0/src/Test/Unit.purs","end":[109,46]},"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"suiteOnly","moduleName":"Test.Unit","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Run only this suite.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[105,1],"name":".spago/test-unit/v16.0.0/src/Test/Unit.purs","end":[105,42]},"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"suite","moduleName":"Test.Unit","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Define a test suite, which can contain a number of nested suites\nas well as tests.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[125,1],"name":".spago/test-unit/v16.0.0/src/Test/Unit.purs","end":[125,40]},"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"testSkip","moduleName":"Test.Unit","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Skip a test.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[121,1],"name":".spago/test-unit/v16.0.0/src/Test/Unit.purs","end":[121,40]},"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"testOnly","moduleName":"Test.Unit","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Run only this test.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[117,1],"name":".spago/test-unit/v16.0.0/src/Test/Unit.purs","end":[117,36]},"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"test","moduleName":"Test.Unit","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Define a labelled test.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/test-unit/v16.0.0/src/Test/Unit.purs","end":[63,31]},"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"timeout","moduleName":"Test.Unit","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Set a test to fail after a given number of milliseconds.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[32,1],"name":".spago/test-unit/v16.0.0/src/Test/Unit/Assert.purs","end":[32,40]},"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"expectFailure","moduleName":"Test.Unit.Assert","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Expect a test to fail. Given a reason and a test, fail with the given\nreason if the test succeeds, and succeed if it fails.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/test-unit/v16.0.0/src/Test/Unit/Assert.purs","end":[26,41]},"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"assertFalse","moduleName":"Test.Unit.Assert","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The reverse of `assert`: given a failure reason and a boolean, either\nsucceed if the boolean is false, or fail if the boolean is true.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[20,1],"name":".spago/test-unit/v16.0.0/src/Test/Unit/Assert.purs","end":[20,36]},"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"assert","moduleName":"Test.Unit.Assert","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Given a failure reason and a boolean, either succeed if the boolean is\ntrue, or fail if the boolean is false.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[14,1],"name":".spago/spec/v5.0.1/src/Test/Spec/Style.purs","end":[14,36]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"styled","moduleName":"Test.Spec.Style","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Spec","Style"],"Style"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/spec/v5.0.1/src/Test/Spec/Speed.purs","end":[18,49]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"speedOf","moduleName":"Test.Spec.Speed","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]},{"tag":"TypeConstructor","contents":[["Test","Spec","Speed"],"Speed"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[233,1],"name":".spago/quickcheck/v7.1.0/src/Test/QuickCheck.purs","end":[233,40]},"score":17,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"withHelp","moduleName":"Test.QuickCheck","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"This operator attaches an error message to a failed test.\n\nFor example:\n\n```purescript\ntest x = myProperty x <?> (\"myProperty did not hold for \" <> show x)\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[75,1],"name":".spago/quickcheck-combinators/v0.1.3/src/Test/QuickCheck/Combinators.purs","end":[75,35]},"score":0,"packageInfo":{"values":["quickcheck-combinators"],"tag":"Package"},"name":"not'","moduleName":"Test.QuickCheck.Combinators","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Supply a failure message if successful\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/quickcheck-combinators/v0.1.3/src/Test/QuickCheck/Combinators.purs","end":[63,38]},"score":0,"packageInfo":{"values":["quickcheck-combinators"],"tag":"Package"},"name":"implies","moduleName":"Test.QuickCheck.Combinators","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Uses the second failure message as the result failure message\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/quickcheck-combinators/v0.1.3/src/Test/QuickCheck/Combinators.purs","end":[44,34]},"score":0,"packageInfo":{"values":["quickcheck-combinators"],"tag":"Package"},"name":"xor","moduleName":"Test.QuickCheck.Combinators","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Combine two results with \"Exclusive Or\" logic, and with `\", xor \"` as the failure message separator, and \"XOR\" as the failure message if they are both `Success`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/quickcheck-combinators/v0.1.3/src/Test/QuickCheck/Combinators.purs","end":[31,35]},"score":0,"packageInfo":{"values":["quickcheck-combinators"],"tag":"Package"},"name":"disj","moduleName":"Test.QuickCheck.Combinators","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Combine two results with \"Or\" logic, and with `\", or \"` as the failure message separator\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/quickcheck-combinators/v0.1.3/src/Test/QuickCheck/Combinators.purs","end":[16,35]},"score":0,"packageInfo":{"values":["quickcheck-combinators"],"tag":"Package"},"name":"conj","moduleName":"Test.QuickCheck.Combinators","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Combine two results with \"And\" logic, and with `\", and \"` as the failure message separator\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[226,1],"name":"src/Serialization/WitnessSet.purs","end":[226,57]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"newExUnits","moduleName":"Serialization.WitnessSet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","BigNum"],"BigNum"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","BigNum"],"BigNum"]}]},{"tag":"TypeConstructor","contents":[["Serialization","Types"],"ExUnits"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[169,1],"name":"src/Serialization/Hash.purs","end":[172,18]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"scriptHashToBech32Unsafe","moduleName":"Serialization.Hash","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Hash"],"ScriptHash"]}]},{"tag":"TypeConstructor","contents":[["Types","Aliases"],"Bech32String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert scriptHash to Bech32 representation with given prefix.\nWill crash if prefix is invalid (length, mixed-case, etc)\nMore on prefixes: https://cips.cardano.org/cips/cip5\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[95,1],"name":"src/Serialization/Hash.purs","end":[98,18]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ed25519KeyHashToBech32Unsafe","moduleName":"Serialization.Hash","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Hash"],"Ed25519KeyHash"]}]},{"tag":"TypeConstructor","contents":[["Types","Aliases"],"Bech32String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert ed25519KeyHash to Bech32 representation with given prefix.\nWill crash if prefix is invalid (length, mixed-case, etc)\nMore on prefixes: https://cips.cardano.org/cips/cip5\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[524,1],"name":"src/Serialization/Address.purs","end":[525,50]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"scriptHashEnterpriseAddress","moduleName":"Serialization.Address","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Hash"],"ScriptHash"]}]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"EnterpriseAddress"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[517,1],"name":"src/Serialization/Address.purs","end":[518,54]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"paymentKeyHashEnterpriseAddress","moduleName":"Serialization.Address","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Hash"],"Ed25519KeyHash"]}]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"EnterpriseAddress"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[504,1],"name":"src/Serialization/Address.purs","end":[505,58]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"icarusFromKey","moduleName":"Serialization.Address","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Types"],"Bip32PublicKey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"ByronProtocolMagic"]}]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"ByronAddress"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[420,1],"name":"src/Serialization/Address.purs","end":[420,56]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"scriptAddress","moduleName":"Serialization.Address","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Hash"],"ScriptHash"]}]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"BaseAddress"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[77,1],"name":"src/Scripts.purs","end":[77,72]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"validatorHashEnterpriseAddress","moduleName":"Scripts","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","Scripts"],"ValidatorHash"]}]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"Address"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Converts a Plutus-style `ValidatorHash` to an `Address` as an\n`EnterpriseAddress`. This is likely what you will use since Plutus\ncurrently uses `scriptHashAddress` on non-staking addresses which is\ninvoked in `validatorAddress`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[69,1],"name":"src/Scripts.purs","end":[69,66]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"validatorHashBaseAddress","moduleName":"Scripts","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","Scripts"],"ValidatorHash"]}]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"Address"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Converts a Plutus-style `ValidatorHash` to a `Address` as a `BaseAddress`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[77,1],"name":".spago/lcg/v3.0.0/src/Random/LCG.purs","end":[77,34]},"score":2,"packageInfo":{"values":["lcg"],"tag":"Package"},"name":"lcgPerturb","moduleName":"Random.LCG","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Random","LCG"],"Seed"]}]},{"tag":"TypeConstructor","contents":[["Random","LCG"],"Seed"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Perturb a seed value\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[62,1],"name":"src/QueryM/ServerConfig.purs","end":[62,45]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"mkServerUrl","moduleName":"QueryM.ServerConfig","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["QueryM","ServerConfig"],"ServerConfig"]}]},{"tag":"TypeConstructor","contents":[["JsWebSocket"],"Url"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[176,1],"name":"src/Plutus/Types/Value.purs","end":[176,34]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"scale","moduleName":"Plutus.Types.Value","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Plutus","Types","Value"],"Value"]}]},{"tag":"TypeConstructor","contents":[["Plutus","Types","Value"],"Value"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns a new `Value` with all amounts multiplied by `s`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[248,1],"name":"src/Plutus/Types/Value.purs","end":[248,32]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"lt","moduleName":"Plutus.Types.Value","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Plutus","Types","Value"],"Value"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Plutus","Types","Value"],"Value"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Checks whether one `Value` is strictly less than another.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[243,1],"name":"src/Plutus/Types/Value.purs","end":[243,33]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"leq","moduleName":"Plutus.Types.Value","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Plutus","Types","Value"],"Value"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Plutus","Types","Value"],"Value"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Checks whether one `Value` is less than or equal to another.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[238,1],"name":"src/Plutus/Types/Value.purs","end":[238,32]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"gt","moduleName":"Plutus.Types.Value","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Plutus","Types","Value"],"Value"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Plutus","Types","Value"],"Value"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Checks whether one `Value` is strictly greater than another.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[233,1],"name":"src/Plutus/Types/Value.purs","end":[233,33]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"geq","moduleName":"Plutus.Types.Value","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Plutus","Types","Value"],"Value"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Plutus","Types","Value"],"Value"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Checks whether one `Value` is greater than or equal to another.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[127,1],"name":"src/Plutus/Conversion.purs","end":[127,62]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"fromPlutusUtxoM","moduleName":"Plutus.Conversion","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Plutus","Types","Transaction"],"UtxoM"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Transaction"],"UtxoM"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[102,1],"name":"src/Plutus/Conversion.purs","end":[105,38]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"fromPlutusTxUnspentOutput","moduleName":"Plutus.Conversion","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Plutus","Types","TransactionUnspentOutput"],"TransactionUnspentOutput"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionUnspentOutput"],"TransactionUnspentOutput"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[78,1],"name":"src/Plutus/Conversion.purs","end":[79,72]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"fromPlutusTxOutput","moduleName":"Plutus.Conversion","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Plutus","Types","Transaction"],"TransactionOutput"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Transaction"],"TransactionOutput"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[62,1],"name":"src/Plutus/Conversion/Address.purs","end":[63,52]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"fromPlutusAddress","moduleName":"Plutus.Conversion.Address","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Plutus","Types","Address"],"Address"]}]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"Address"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Builds a CSL-level address from a Plutus address.\nCIP-0019: https://cips.cardano.org/cips/cip19/\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Internal/Utils.purs","end":[44,50]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"startsWith","moduleName":"Options.Applicative.Internal.Utils","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Pattern"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[37,1],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Help/Types.purs","end":[37,42]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"renderHelp","moduleName":"Options.Applicative.Help.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a help text to 'String'.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[38,1],"name":".spago/node-url/v5.0.0/src/Node/URL.purs","end":[38,53]},"score":1,"packageInfo":{"values":["node-url"],"tag":"Package"},"name":"resolve","moduleName":"Node.URL","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Resolve a URL relative to some base URL.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/node-path/v4.0.0/src/Node/Path.purs","end":[31,70]},"score":2,"packageInfo":{"values":["node-path"],"tag":"Package"},"name":"basenameWithoutExt","moduleName":"Node.Path","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Return the last portion of a path, also dropping a specific file extension\nif it matches the end of the name.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/node-path/v4.0.0/src/Node/Path.purs","end":[21,60]},"score":2,"packageInfo":{"values":["node-path"],"tag":"Package"},"name":"relative","moduleName":"Node.Path","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Solve the relative path from `from` to `to`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[43,1],"name":".spago/node-buffer/v7.0.1/src/Node/Encoding.purs","end":[43,40]},"score":7,"packageInfo":{"values":["node-buffer"],"tag":"Package"},"name":"byteLength","moduleName":"Node.Encoding","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Encoding"],"Encoding"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[80,1],"name":".spago/node-buffer/v7.0.1/src/Node/Buffer/Immutable.purs","end":[80,50]},"score":7,"packageInfo":{"values":["node-buffer"],"tag":"Package"},"name":"toString","moduleName":"Node.Buffer.Immutable","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Encoding"],"Encoding"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer","Immutable"],"ImmutableBuffer"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Reads the buffer as a string with the specified encoding.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[61,1],"name":".spago/node-buffer/v7.0.1/src/Node/Buffer/Immutable.purs","end":[61,52]},"score":7,"packageInfo":{"values":["node-buffer"],"tag":"Package"},"name":"fromString","moduleName":"Node.Buffer.Immutable","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Encoding"],"Encoding"]}]},{"tag":"TypeConstructor","contents":[["Node","Buffer","Immutable"],"ImmutableBuffer"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a new buffer from a string with the specified encoding, sized to match the string.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[71,1],"name":".spago/math/v3.0.0/src/Math.purs","end":[71,55]},"score":12,"packageInfo":{"values":["math"],"tag":"Package"},"name":"remainder","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Computes the remainder after division, wrapping Javascript's `%` operator.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[52,1],"name":".spago/math/v3.0.0/src/Math.purs","end":[52,49]},"score":12,"packageInfo":{"values":["math"],"tag":"Package"},"name":"pow","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Return  the first argument exponentiated to the power of the second argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[49,1],"name":".spago/math/v3.0.0/src/Math.purs","end":[49,49]},"score":12,"packageInfo":{"values":["math"],"tag":"Package"},"name":"min","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the smallest of two numbers.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[46,1],"name":".spago/math/v3.0.0/src/Math.purs","end":[46,49]},"score":12,"packageInfo":{"values":["math"],"tag":"Package"},"name":"max","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the largest of two numbers.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[40,1],"name":".spago/math/v3.0.0/src/Math.purs","end":[40,41]},"score":12,"packageInfo":{"values":["math"],"tag":"Package"},"name":"imul","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the result of the C-like 32-bit multiplication of the two arguments.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[25,1],"name":".spago/math/v3.0.0/src/Math.purs","end":[25,52]},"score":12,"packageInfo":{"values":["math"],"tag":"Package"},"name":"atan2","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Math"],"Radians"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Four-quadrant tangent inverse. Given the arguments `y` and `x`, returns\nthe inverse tangent of `y / x`, where the signs of both arguments are used\nto determine the sign of the result.\nIf the first argument is negative, the result will be negative.\nThe result is the angle between the positive x axis and  a point `(x, y)`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[141,1],"name":"src/Deserialization/UnspentOutput.purs","end":[142,71]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"mkTransactionUnspentOutput","moduleName":"Deserialization.UnspentOutput","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Types"],"TransactionInput"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Types"],"TransactionOutput"]}]},{"tag":"TypeConstructor","contents":[["Serialization","Types"],"TransactionUnspentOutput"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[298,1],"name":".spago/uint/v6.0.3/src/Data/UInt.purs","end":[298,44]},"score":0,"packageInfo":{"values":["uint"],"tag":"Package"},"name":"zshr","moduleName":"Data.UInt","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Bitwise zero-fill shift right.\n\n    > shr (fromInt 4) (fromInt 1)\n    2u\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[292,1],"name":".spago/uint/v6.0.3/src/Data/UInt.purs","end":[292,43]},"score":0,"packageInfo":{"values":["uint"],"tag":"Package"},"name":"shr","moduleName":"Data.UInt","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Bitwise shift right while preserving sign.\n\n    > shr (fromInt 4) (fromInt 1)\n    2u\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[286,1],"name":".spago/uint/v6.0.3/src/Data/UInt.purs","end":[286,43]},"score":0,"packageInfo":{"values":["uint"],"tag":"Package"},"name":"shl","moduleName":"Data.UInt","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Bitwise shift left.\n\n    > shl (fromInt 4) (fromInt 1)\n    8u\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[278,1],"name":".spago/uint/v6.0.3/src/Data/UInt.purs","end":[278,43]},"score":0,"packageInfo":{"values":["uint"],"tag":"Package"},"name":"xor","moduleName":"Data.UInt","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Bitwise XOR.\n\n    > xor (fromInt 6) (fromInt 4)\n    0u\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[270,1],"name":".spago/uint/v6.0.3/src/Data/UInt.purs","end":[270,42]},"score":0,"packageInfo":{"values":["uint"],"tag":"Package"},"name":"or","moduleName":"Data.UInt","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Bitwise OR.\n\n    > or (fromInt 4) (fromInt 2)\n    6u\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[262,1],"name":".spago/uint/v6.0.3/src/Data/UInt.purs","end":[262,43]},"score":0,"packageInfo":{"values":["uint"],"tag":"Package"},"name":"and","moduleName":"Data.UInt","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Bitwise AND.\n\n    > and (fromInt 6) (fromInt 4)\n    4u\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[256,1],"name":".spago/uint/v6.0.3/src/Data/UInt.purs","end":[256,43]},"score":0,"packageInfo":{"values":["uint"],"tag":"Package"},"name":"pow","moduleName":"Data.UInt","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Raises the first argument to the power of the second argument (the exponent).\n\n    > pow (fromInt 2) (fromInt 3)\n    8u\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[65,1],"name":".spago/datetime/v5.0.2/src/Data/Time.purs","end":[65,46]},"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"setMillisecond","moduleName":"Data.Time","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time","Component"],"Millisecond"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Time"]}]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Time"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Alters the millisecond component of a time value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[57,1],"name":".spago/datetime/v5.0.2/src/Data/Time.purs","end":[57,36]},"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"setSecond","moduleName":"Data.Time","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time","Component"],"Second"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Time"]}]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Time"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Alters the second component of a time value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[49,1],"name":".spago/datetime/v5.0.2/src/Data/Time.purs","end":[49,36]},"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"setMinute","moduleName":"Data.Time","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time","Component"],"Minute"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Time"]}]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Time"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Alters the minute component of a time value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/datetime/v5.0.2/src/Data/Time.purs","end":[41,32]},"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"setHour","moduleName":"Data.Time","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time","Component"],"Hour"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Time"]}]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Time"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Alters the hour component of a time value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/text-encoding/v1.0.0/src/Data/TextEncoding.purs","end":[12,43]},"score":0,"packageInfo":{"values":["text-encoding"],"tag":"Package"},"name":"encode","moduleName":"Data.TextEncoding","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","TextEncoding"],"Encoding"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"Uint8Array"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Encodes a `String` to a `Uint8Array` with the given `Encoding`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[14,1],"name":".spago/encoding/v0.0.7/src/Data/TextEncoder.purs","end":[14,43]},"score":0,"packageInfo":{"values":["encoding"],"tag":"Package"},"name":"encode","moduleName":"Data.TextEncoder","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","TextEncoder"],"Encoding"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"Uint8Array"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Encodes a `String` to a `Uint8Array` with the given `Encoding`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[10,1],"name":".spago/strings/v5.0.0/src/Data/String/Unsafe.purs","end":[10,47]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"charAt","moduleName":"Data.String.Unsafe","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the character at the given index.\n\n**Unsafe:** throws runtime exception if the index is out of bounds.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[45,1],"name":".spago/unicode/v5.0.0/src/Data/String/Unicode.purs","end":[45,45]},"score":2,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"caselessMatch","moduleName":"Data.String.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Caseless matching, based on `caseFold`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[82,1],"name":".spago/strings/v5.0.0/src/Data/String/Regex.purs","end":[82,50]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"test","moduleName":"Data.String.Regex","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"Regex"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns `true` if the `Regex` matches the string. In contrast to\n`RegExp.prototype.test()` in JavaScript, `test` does not affect\nthe `lastIndex` property of the Regex.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[13,1],"name":".spago/strings/v5.0.0/src/Data/String/Regex/Unsafe.purs","end":[13,45]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"unsafeRegex","moduleName":"Data.String.Regex.Unsafe","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Regex","Flags"],"RegexFlags"]}]},{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"Regex"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a `Regex` from a pattern string and flags. Fails with\nan exception if the pattern contains a syntax error.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[143,1],"name":".spago/strings/v5.0.0/src/Data/String/NonEmpty/Internal.purs","end":[143,62]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"localeCompare","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Compare two strings in a locale-aware fashion. This is in contrast to\nthe `Ord` instance on `String` which treats strings as arrays of code\nunits:\n\n```purescript\nNonEmptyString \"ä\" `localeCompare` NonEmptyString \"b\" == LT\nNonEmptyString \"ä\" `compare` NonEmptyString \"b\" == GT\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[132,1],"name":".spago/strings/v5.0.0/src/Data/String/NonEmpty/Internal.purs","end":[132,49]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"contains","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Pattern"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Checks whether the pattern appears in the given string.\n\n```purescript\ncontains (Pattern \"needle\") (NonEmptyString \"haystack with needle\") == true\ncontains (Pattern \"needle\") (NonEmptyString \"haystack\") == false\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[99,1],"name":".spago/strings/v5.0.0/src/Data/String/NonEmpty/Internal.purs","end":[99,60]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"prependString","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Prepends a string to this non-empty string. Since one of the strings is\nnon-empty we know the result will be too.\n\n```purescript\nprependString \"be\" (NonEmptyString \"fore\") == NonEmptyString \"before\"\nprependString \"\" (NonEmptyString \"fore\") == NonEmptyString \"fore\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[89,1],"name":".spago/strings/v5.0.0/src/Data/String/NonEmpty/Internal.purs","end":[89,59]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"appendString","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Appends a string to this non-empty string. Since one of the strings is\nnon-empty we know the result will be too.\n\n```purescript\nappendString (NonEmptyString \"Hello\") \" world\" == NonEmptyString \"Hello world\"\nappendString (NonEmptyString \"Hello\") \"\" == NonEmptyString \"Hello\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[88,1],"name":".spago/strings/v5.0.0/src/Data/String/NonEmpty/CodeUnits.purs","end":[88,41]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"snoc","moduleName":"Data.String.NonEmpty.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a `NonEmptyString` from a string by appending a character.\n\n```purescript\nsnoc 'c' \"ab\" = NonEmptyString \"abc\"\nsnoc 'a' \"\" = NonEmptyString \"a\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[79,1],"name":".spago/strings/v5.0.0/src/Data/String/NonEmpty/CodeUnits.purs","end":[79,41]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"cons","moduleName":"Data.String.NonEmpty.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a `NonEmptyString` from a string by prepending a character.\n\n```purescript\ncons 'a' \"bc\" = NonEmptyString \"abc\"\ncons 'a' \"\" = NonEmptyString \"a\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[66,1],"name":".spago/strings/v5.0.0/src/Data/String/NonEmpty/CodePoints.purs","end":[66,46]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"snoc","moduleName":"Data.String.NonEmpty.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/strings/v5.0.0/src/Data/String/NonEmpty/CodePoints.purs","end":[63,46]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"cons","moduleName":"Data.String.NonEmpty.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/strings/v5.0.0/src/Data/String/Common.purs","end":[34,46]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"localeCompare","moduleName":"Data.String.Common","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Compare two strings in a locale-aware fashion. This is in contrast to\nthe `Ord` instance on `String` which treats strings as arrays of code\nunits:\n\n```purescript\n\"ä\" `localeCompare` \"b\" == LT\n\"ä\" `compare` \"b\" == GT\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[287,1],"name":".spago/strings/v5.0.0/src/Data/String/CodeUnits.purs","end":[287,37]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"dropRight","moduleName":"Data.String.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the string without the last `n` characters.\n\n```purescript\ndropRight 6 \"Hello World\" == \"Hello\"\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[279,1],"name":".spago/strings/v5.0.0/src/Data/String/CodeUnits.purs","end":[279,47]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"drop","moduleName":"Data.String.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the string without the first `n` characters.\n\n```purescript\ndrop 6 \"Hello World\" == \"World\"\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[260,1],"name":".spago/strings/v5.0.0/src/Data/String/CodeUnits.purs","end":[260,37]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"takeRight","moduleName":"Data.String.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the last `n` characters of the string.\n\n```purescript\ntakeRight 5 \"Hello World\" == \"World\"\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[252,1],"name":".spago/strings/v5.0.0/src/Data/String/CodeUnits.purs","end":[252,47]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"take","moduleName":"Data.String.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the first `n` characters of the string.\n\n```purescript\ntake 5 \"Hello World\" == \"Hello\"\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[70,1],"name":".spago/strings/v5.0.0/src/Data/String/CodeUnits.purs","end":[70,41]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"contains","moduleName":"Data.String.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Pattern"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Checks whether the pattern appears in the given string.\n\n```purescript\ncontains (Pattern \"needle\") \"haystack with needle\" == true\ncontains (Pattern \"needle\") \"haystack\" == false\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[363,1],"name":".spago/strings/v5.0.0/src/Data/String/CodePoints.purs","end":[363,32]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"drop","moduleName":"Data.String.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Drops the given number of code points from the beginning of the string. If\nthe string does not have that many code points, returns the empty string.\nOperates in constant space and in time linear to the given number.\n\n```purescript\n>>> drop 5 \"𝐀𝐀 b c\"\n\"c\"\n-- compared to Data.String:\n>>> drop 5 \"𝐀𝐀 b c\"\n\"b c\" -- because \"𝐀\" occupies 2 code units\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[328,1],"name":".spago/strings/v5.0.0/src/Data/String/CodePoints.purs","end":[328,32]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"take","moduleName":"Data.String.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns a string containing the given number of code points from the\nbeginning of the given string. If the string does not have that many code\npoints, returns the empty string. Operates in constant space and in time\nlinear to the given number.\n\n```purescript\n>>> take 3 \"b 𝐀𝐀 c 𝐀\"\n\"b 𝐀\"\n-- compare to Data.String:\n>>> take 3 \"b 𝐀𝐀 c 𝐀\"\n\"b �\"\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[59,1],"name":".spago/numbers/v8.0.0/src/Data/Number/Format.purs","end":[59,43]},"score":5,"packageInfo":{"values":["numbers"],"tag":"Package"},"name":"toStringWith","moduleName":"Data.Number.Format","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Number","Format"],"Format"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a number to a string with a given format.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[73,1],"name":".spago/numbers/v8.0.0/src/Data/Number/Approximate.purs","end":[73,46]},"score":5,"packageInfo":{"values":["numbers"],"tag":"Package"},"name":"neqApproximate","moduleName":"Data.Number.Approximate","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The complement of `eqApproximate`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/numbers/v8.0.0/src/Data/Number/Approximate.purs","end":[63,45]},"score":5,"packageInfo":{"values":["numbers"],"tag":"Package"},"name":"eqApproximate","moduleName":"Data.Number.Approximate","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test if two numbers are approximately equal, up to a relative difference\nof one part in a million:\n``` purs\neqApproximate = eqRelative (Fraction 1.0e-6)\n```\n\nExample\n``` purs\n> 0.1 + 0.2 == 0.3\nfalse\n\n> 0.1 + 0.2 ≅ 0.3\ntrue\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[59,1],"name":".spago/naturals/v3.0.0/src/Data/Natural.purs","end":[59,39]},"score":0,"packageInfo":{"values":["naturals"],"tag":"Package"},"name":"minus","moduleName":"Data.Natural","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Natural"],"Natural"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Natural"],"Natural"]}]},{"tag":"TypeConstructor","contents":[["Data","Natural"],"Natural"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Subtract a natural number from another.\nWhen `l < r` then `l +- r = 0`.\nThis is provided due to Natural not being a Ring as it violates the\nadditive inverse law: `a - a = (zero - a) + a = zero`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/medea/8b215851959aa8bbf33e6708df6bd683c89d1a5a/src/Data/Medea/Parser/Parsing.purs","end":[18,50]},"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"updatePosString","moduleName":"Data.Medea.Parser.Parsing","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Pos"],"Position"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Pos"],"Position"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[47,1],"name":".spago/monad-logger/v1.3.1/src/Data/Log/Tag.purs","end":[47,40]},"score":0,"packageInfo":{"values":["monad-logger"],"tag":"Package"},"name":"tagSetTag","moduleName":"Data.Log.Tag","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Log","Tag"],"TagSet"]}]},{"tag":"TypeConstructor","contents":[["Data","Log","Tag"],"TagSet"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/monad-logger/v1.3.1/src/Data/Log/Tag.purs","end":[44,40]},"score":0,"packageInfo":{"values":["monad-logger"],"tag":"Package"},"name":"jsDateTag","moduleName":"Data.Log.Tag","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","JSDate"],"JSDate"]}]},{"tag":"TypeConstructor","contents":[["Data","Log","Tag"],"TagSet"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/monad-logger/v1.3.1/src/Data/Log/Tag.purs","end":[41,42]},"score":0,"packageInfo":{"values":["monad-logger"],"tag":"Package"},"name":"booleanTag","moduleName":"Data.Log.Tag","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeConstructor","contents":[["Data","Log","Tag"],"TagSet"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[38,1],"name":".spago/monad-logger/v1.3.1/src/Data/Log/Tag.purs","end":[38,40]},"score":0,"packageInfo":{"values":["monad-logger"],"tag":"Package"},"name":"numberTag","moduleName":"Data.Log.Tag","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Data","Log","Tag"],"TagSet"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[35,1],"name":".spago/monad-logger/v1.3.1/src/Data/Log/Tag.purs","end":[35,34]},"score":0,"packageInfo":{"values":["monad-logger"],"tag":"Package"},"name":"intTag","moduleName":"Data.Log.Tag","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Data","Log","Tag"],"TagSet"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[32,1],"name":".spago/monad-logger/v1.3.1/src/Data/Log/Tag.purs","end":[32,34]},"score":0,"packageInfo":{"values":["monad-logger"],"tag":"Package"},"name":"tag","moduleName":"Data.Log.Tag","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Log","Tag"],"TagSet"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[242,1],"name":".spago/integers/v5.0.0/src/Data/Int.purs","end":[242,40]},"score":20,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"pow","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Raise an Int to the power of another Int.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[239,1],"name":".spago/integers/v5.0.0/src/Data/Int.purs","end":[239,40]},"score":20,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"rem","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The `rem` function provides the remainder after _truncating_ integer\ndivision (see the documentation for the `EuclideanRing` class). It is\nidentical to `mod` in the `EuclideanRing Int` instance if the dividend is\npositive, but will be slightly different if the dividend is negative. For\nexample:\n\n```purescript\nmod 2 3 == 2\nrem 2 3 == 2\n\nmod (-2) 3 == 1\nrem (-2) 3 == (-2)\n\nmod 2 (-3) == 2\nrem 2 (-3) == 2\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[221,1],"name":".spago/integers/v5.0.0/src/Data/Int.purs","end":[221,41]},"score":20,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"quot","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The `quot` function provides _truncating_ integer division (see the\ndocumentation for the `EuclideanRing` class). It is identical to `div` in\nthe `EuclideanRing Int` instance if the dividend is positive, but will be\nslightly different if the dividend is negative. For example:\n\n```purescript\ndiv 2 3 == 0\nquot 2 3 == 0\n\ndiv (-2) 3 == (-1)\nquot (-2) 3 == 0\n\ndiv 2 (-3) == 0\nquot 2 (-3) == 0\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[251,1],"name":".spago/integers/v5.0.0/src/Data/Int.purs","end":[251,52]},"score":20,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"toStringAs","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Int"],"Radix"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/integers/v5.0.0/src/Data/Int/Bits.purs","end":[34,41]},"score":20,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"zshr","moduleName":"Data.Int.Bits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Bitwise zero-fill shift right.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/integers/v5.0.0/src/Data/Int/Bits.purs","end":[31,40]},"score":20,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"shr","moduleName":"Data.Int.Bits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Bitwise shift right.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[28,1],"name":".spago/integers/v5.0.0/src/Data/Int/Bits.purs","end":[28,40]},"score":20,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"shl","moduleName":"Data.Int.Bits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Bitwise shift left.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/integers/v5.0.0/src/Data/Int/Bits.purs","end":[23,40]},"score":20,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"xor","moduleName":"Data.Int.Bits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Bitwise XOR.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/integers/v5.0.0/src/Data/Int/Bits.purs","end":[18,39]},"score":20,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"or","moduleName":"Data.Int.Bits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Bitwise OR.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[13,1],"name":".spago/integers/v5.0.0/src/Data/Int/Bits.purs","end":[13,40]},"score":20,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"and","moduleName":"Data.Int.Bits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Bitwise AND.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[126,1],"name":".spago/datetime/v5.0.2/src/Data/Date.purs","end":[126,39]},"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"lastDayOfMonth","moduleName":"Data.Date","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date","Component"],"Year"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date","Component"],"Month"]}]},{"tag":"TypeConstructor","contents":[["Data","Date","Component"],"Day"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the final day of a month and year, accounting for leap years.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[5588,1],"name":".spago/unicode/v5.0.0/src/Data/CodePoint/Unicode/Internal.purs","end":[5588,45]},"score":2,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"blkCmp","moduleName":"Data.CodePoint.Unicode.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","CodePoint","Unicode","Internal"],"CharBlock"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","CodePoint","Unicode","Internal"],"CharBlock"]}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[1624,1],"name":".spago/unicode/v5.0.0/src/Data/CodePoint/Unicode/Internal/Casing.purs","end":[1624,41]},"score":2,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"recCmp","moduleName":"Data.CodePoint.Unicode.Internal.Casing","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","CodePoint","Unicode","Internal","Casing"],"CaseRec"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","CodePoint","Unicode","Internal","Casing"],"CaseRec"]}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[203,1],"name":".spago/bigints/v6.0.0/src/Data/BigInt.purs","end":[203,34]},"score":0,"packageInfo":{"values":["bigints"],"tag":"Package"},"name":"rem","moduleName":"Data.BigInt","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The remainder after truncating integer division\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[199,1],"name":".spago/bigints/v6.0.0/src/Data/BigInt.purs","end":[199,35]},"score":0,"packageInfo":{"values":["bigints"],"tag":"Package"},"name":"quot","moduleName":"Data.BigInt","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Truncating integer division\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[112,1],"name":".spago/bigints/v6.0.0/src/Data/BigInt.purs","end":[112,49]},"score":0,"packageInfo":{"values":["bigints"],"tag":"Package"},"name":"shr","moduleName":"Data.BigInt","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Shift the bits right and maintain pos/neg.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[109,1],"name":".spago/bigints/v6.0.0/src/Data/BigInt.purs","end":[109,49]},"score":0,"packageInfo":{"values":["bigints"],"tag":"Package"},"name":"shl","moduleName":"Data.BigInt","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"shift the bits left and zero fill.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[106,1],"name":".spago/bigints/v6.0.0/src/Data/BigInt.purs","end":[106,49]},"score":0,"packageInfo":{"values":["bigints"],"tag":"Package"},"name":"and","moduleName":"Data.BigInt","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"and the bits.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[103,1],"name":".spago/bigints/v6.0.0/src/Data/BigInt.purs","end":[103,49]},"score":0,"packageInfo":{"values":["bigints"],"tag":"Package"},"name":"xor","moduleName":"Data.BigInt","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Exlusive or the bits.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[100,1],"name":".spago/bigints/v6.0.0/src/Data/BigInt.purs","end":[100,48]},"score":0,"packageInfo":{"values":["bigints"],"tag":"Package"},"name":"or","moduleName":"Data.BigInt","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"or the bits.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[82,1],"name":".spago/bigints/v6.0.0/src/Data/BigInt.purs","end":[82,49]},"score":0,"packageInfo":{"values":["bigints"],"tag":"Package"},"name":"pow","moduleName":"Data.BigInt","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Exponentiation for `BigInt`. If the exponent is less than 0, `pow`\nreturns 0. Also, `pow zero zero == one`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[159,1],"name":".spago/bigints/v6.0.0/src/Data/BigInt.purs","end":[159,59]},"score":0,"packageInfo":{"values":["bigints"],"tag":"Package"},"name":"digitsInBase","moduleName":"Data.BigInt","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BaseDigits"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A base N representation of the `BigInt` as an array of digits.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[165,1],"name":".spago/bigints/v6.0.0/src/Data/BigInt.purs","end":[165,43]},"score":0,"packageInfo":{"values":["bigints"],"tag":"Package"},"name":"toBase'","moduleName":"Data.BigInt","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A base N representation of the `BigInt` as a `NonEmptyString`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[162,1],"name":".spago/bigints/v6.0.0/src/Data/BigInt.purs","end":[162,49]},"score":0,"packageInfo":{"values":["bigints"],"tag":"Package"},"name":"toBase","moduleName":"Data.BigInt","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A base N representation of the `BigInt` as a `String`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[98,1],"name":".spago/argonaut-traversals/v9.0.0/src/Data/Argonaut/JCursor.purs","end":[98,39]},"score":1,"packageInfo":{"values":["argonaut-traversals"],"tag":"Package"},"name":"downIndex","moduleName":"Data.Argonaut.JCursor","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","JCursor"],"JCursor"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","JCursor"],"JCursor"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[92,1],"name":".spago/argonaut-traversals/v9.0.0/src/Data/Argonaut/JCursor.purs","end":[92,42]},"score":1,"packageInfo":{"values":["argonaut-traversals"],"tag":"Package"},"name":"downField","moduleName":"Data.Argonaut.JCursor","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","JCursor"],"JCursor"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","JCursor"],"JCursor"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[245,1],"name":".spago/argonaut-core/v6.0.0/src/Data/Argonaut/Core.purs","end":[245,60]},"score":4,"packageInfo":{"values":["argonaut-core"],"tag":"Package"},"name":"stringifyWithIndent","moduleName":"Data.Argonaut.Core","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Converts a `Json` value to a JSON string.\nThe first `Int` argument specifies the amount of white space characters to use as indentation.\nThis number is capped at 10 (if it is greater, the value is just 10). Values less than 1 indicate that no space should be used.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[235,1],"name":".spago/argonaut-core/v6.0.0/src/Data/Argonaut/Core.purs","end":[235,46]},"score":4,"packageInfo":{"values":["argonaut-core"],"tag":"Package"},"name":"jsonSingletonObject","moduleName":"Data.Argonaut.Core","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a `Json` object value containing only the provided key and value\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[380,1],"name":"src/Cardano/Types/Value.purs","end":[380,40]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"mkValue","moduleName":"Cardano.Types.Value","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"Coin"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"NonAdaAsset"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"Value"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a `Value` from `Coin` and `NonAdaAsset`, the latter should have been\nconstructed safely at this point.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[589,1],"name":"src/Cardano/Types/Value.purs","end":[589,32]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"lt","moduleName":"Cardano.Types.Value","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"Value"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"Value"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Check whether one `Value` is strictly less than another. See `Value` for an explanation of how operations on `Value`s work.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[583,1],"name":"src/Cardano/Types/Value.purs","end":[583,33]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"leq","moduleName":"Cardano.Types.Value","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"Value"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"Value"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Check whether one `Value` is less than or equal to another. See `Value` for an explanation of how operations on `Value`s work.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[577,1],"name":"src/Cardano/Types/Value.purs","end":[577,32]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"gt","moduleName":"Cardano.Types.Value","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"Value"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"Value"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Check whether one `Value` is strictly greater than another. See `Value` for an explanation of how operations on `Value`s work.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[571,1],"name":"src/Cardano/Types/Value.purs","end":[571,33]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"geq","moduleName":"Cardano.Types.Value","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"Value"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"Value"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Check whether one `Value` is greater than or equal to another. See `Value` for an explanation of how operations on `Value`s work.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[595,1],"name":"src/Cardano/Types/Value.purs","end":[595,32]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"eq","moduleName":"Cardano.Types.Value","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"Value"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"Value"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Check whether one `Value` is equal to another. See `Value` for an explanation of how operations on `Value`s work.\n"}],"tag":"SearchResult"}]