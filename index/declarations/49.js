// This file was generated by purescript-docs-search.
window.DocsSearchIndex["49"] = [["fail",[{"values":[{"sourceSpan":{"start":[172,1],"name":".spago/foreign/v6.0.1/src/Foreign.purs","end":[172,54]},"score":9,"packageInfo":{"values":["foreign"],"tag":"Package"},"name":"fail","moduleName":"Foreign","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign"],"ForeignError"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Foreign"],"FT"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Throws a failure error in `FT`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Fail","moduleName":"Prim.TypeError","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["message",{"tag":"TypeConstructor","contents":[["Prim","TypeError"],"Doc"]}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The Fail type class is part of the custom type errors feature. To provide\na custom type error when someone tries to use a particular instance,\nwrite that instance out with a Fail constraint.\n\nFor more information, see\n[the Custom Type Errors guide](https://github.com/purescript/documentation/blob/master/guides/Custom-Type-Errors.md).\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/spec/v5.0.1/src/Test/Spec/Assertions.purs","end":[21,57]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"fail","moduleName":"Test.Spec.Assertions","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Error","Class"],"MonadThrow"],"constraintArgs":[{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[134,1],"name":".spago/parsing/v7.0.1/src/Text/Parsing/Parser.purs","end":[134,57]},"score":0,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"fail","moduleName":"Text.Parsing.Parser","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Fail with a message.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"Fail","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["failed",[{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["fork"],"tag":"Package"},"name":"Failed","moduleName":"Control.Monad.Fork.Class","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"e"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":17,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"Failed","moduleName":"Test.QuickCheck","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["failover",[{"values":[{"sourceSpan":{"start":[91,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Traversal.purs","end":[97,9]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"failover","moduleName":"Data.Lens.Traversal","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Optic"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Profunctor","Star"],"Star"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Disj"],"Disj"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]}}]}}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"t"}]}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Tries to map over a `Traversal`; returns `empty` if the traversal did\nnot have any new focus.\n"}],"tag":"SearchResult"}]],["failure",[{"values":[{"sourceSpan":{"start":[29,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Ops.purs","end":[29,16]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"Failure","moduleName":"Data.Typelevel.Num.Ops","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["t",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"Failure","moduleName":"Options.Applicative.Types","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserFailure"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"Failure","moduleName":"Test.Spec.Result","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[54,1],"name":".spago/test-unit/v16.0.0/src/Test/Unit.purs","end":[54,26]},"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"failure","moduleName":"Test.Unit","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Make a failing test, given a reason for the failure.\n"}],"tag":"SearchResult"}]],["failurecode",[{"values":[{"sourceSpan":{"start":[423,1],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Builder.purs","end":[423,47]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"failureCode","moduleName":"Options.Applicative.Builder","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["ExitCodes"],"ExitCode"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Specify an exit code if a parse error occurs.\n"}],"tag":"SearchResult"}]],["failwithposition",[{"values":[{"sourceSpan":{"start":[138,1],"name":".spago/parsing/v7.0.1/src/Text/Parsing/Parser.purs","end":[138,81]},"score":0,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"failWithPosition","moduleName":"Text.Parsing.Parser","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Pos"],"Position"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Fail with a message and a position.\n"}],"tag":"SearchResult"}]],["false",[{"values":[{"sourceSpan":{"start":[37,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Bool.purs","end":[37,11]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"False","moduleName":"Data.Typelevel.Bool","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The type level False value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"False","moduleName":"Prim.Boolean","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"The 'False' boolean type.\n"}],"tag":"SearchResult"}]],["false_",[{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/literals/v0.2.0/src/Literals/Boolean.purs","end":[15,29]},"score":1,"packageInfo":{"values":["literals"],"tag":"Package"},"name":"false_","moduleName":"Literals.Boolean","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Literals","Boolean"],"BooleanLit"]},{"tag":"TypeLevelString","contents":"false"}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["falsehoodpreserving",[{"values":[{"sourceSpan":{"start":[68,1],"name":".spago/properties/v0.2.0/src/Control/Algebra/Properties.purs","end":[68,77]},"score":1,"packageInfo":{"values":["properties"],"tag":"Package"},"name":"falsehoodPreserving","moduleName":"Control.Algebra.Properties","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["falset",[{"values":[{"sourceSpan":{"start":[42,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Bool.purs","end":[42,16]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"falseT","moduleName":"Data.Typelevel.Bool","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Typelevel","Bool"],"False"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["family",[{"values":[{"sourceSpan":{"start":[101,1],"name":".spago/node-http/v6.0.0/src/Node/HTTP/Client.purs","end":[101,46]},"score":1,"packageInfo":{"values":["node-http"],"tag":"Package"},"name":"family","moduleName":"Node.HTTP.Client","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"tag":"TypeConstructor","contents":[["Node","HTTP","Client"],"RequestOptions"]}]},{"tag":"TypeConstructor","contents":[["Node","HTTP","Client"],"RequestFamily"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"IP address family to use when resolving `hostname`.\nValid values are `IPV6` and `IPV4`\n"}],"tag":"SearchResult"}]],["fanin",[{"values":[{"sourceSpan":{"start":[74,1],"name":".spago/profunctor/v5.0.0/src/Data/Profunctor/Choice.purs","end":[80,22]},"score":4,"packageInfo":{"values":["profunctor"],"tag":"Package"},"name":"fanin","moduleName":"Data.Profunctor.Choice","info":{"values":[{"type":{"tag":"ForAll","contents":["p",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Category"],"Category"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Profunctor","Choice"],"Choice"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"c"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Compose a value which eliminates a sum from two values, each eliminating\none side of the sum.\n\nThis combinator is useful when assembling values from smaller components,\nbecause it provides a way to support two different types of input.\n\nSpecializing `(|||)` to function application would look like this:\n```\n(|||) :: forall a b c d. (a -> c) -> (b -> c) -> Either a b -> c\n```\nWe take two functions, `f` and `g`, which both return the same type `c` and we transform them into a\nsingle function which takes an `Either` value with the parameter type of `f` on the left side and\nthe parameter type of `g` on the right side. The function then runs either `f` or `g`, depending on\nwhether the `Either` value is a `Left` or a `Right`.\nThis allows us to bundle two different computations which both have the same result type into one\nfunction which will run the approriate computation based on the parameter supplied in the `Either` value.\n"}],"tag":"SearchResult"}]],["fanout",[{"values":[{"sourceSpan":{"start":[71,1],"name":".spago/profunctor/v5.0.0/src/Data/Profunctor/Strong.purs","end":[77,21]},"score":4,"packageInfo":{"values":["profunctor"],"tag":"Package"},"name":"fanout","moduleName":"Data.Profunctor.Strong","info":{"values":[{"type":{"tag":"ForAll","contents":["p",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Category"],"Category"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Profunctor","Strong"],"Strong"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Compose a value which introduces a `Tuple` from two values, each introducing\none side of the `Tuple`.\n\nThis combinator is useful when assembling values from smaller components,\nbecause it provides a way to support two different types of output.\n\nSpecializing `(&&&)` to function application would look like this:\n```\n(&&&) :: forall a b c. (a -> b) -> (a -> c) -> (a -> (Tuple b c))\n```\nWe take two functions, `f` and `g`, with the same parameter type and we transform them into a\nsingle function which takes one parameter and returns a `Tuple` of the results of running\n`f` and `g` on the parameter, respectively.  This allows us to run two parallel computations\non the same input and return both results in a `Tuple`.\n"}],"tag":"SearchResult"}]],["fast",[{"values":[{"sourceSpan":null,"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"Fast","moduleName":"Test.Spec.Speed","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["faulterror",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"FaultError","moduleName":"QueryM","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Aeson"],"Aeson"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["faulttostring",[{"values":[{"sourceSpan":{"start":[51,1],"name":"src/QueryM/DatumCacheWsp.purs","end":[51,36]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"faultToString","moduleName":"QueryM.DatumCacheWsp","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["QueryM","DatumCacheWsp"],"WspFault"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["d1",[{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Reps.purs","end":[12,8]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"D1","moduleName":"Data.Typelevel.Num.Reps","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[40,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Reps.purs","end":[40,9]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"d1","moduleName":"Data.Typelevel.Num.Reps","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["d10",[{"values":[{"sourceSpan":{"start":[6,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[6,20]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"D10","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Typelevel","Num","Reps"],":*"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D0"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[98,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[98,11]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"d10","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Aliases"],"D10"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["d100",[{"values":[{"sourceSpan":{"start":[96,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[96,29]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"D100","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Typelevel","Num","Reps"],":*"]},{"tag":"ParensInType","contents":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Typelevel","Num","Reps"],":*"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D0"]}]}},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D0"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["d11",[{"values":[{"sourceSpan":{"start":[7,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[7,20]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"D11","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Typelevel","Num","Reps"],":*"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[100,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[100,11]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"d11","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Aliases"],"D11"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["d12",[{"values":[{"sourceSpan":{"start":[8,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[8,20]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"D12","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Typelevel","Num","Reps"],":*"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D2"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[102,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[102,11]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"d12","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Aliases"],"D12"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["d13",[{"values":[{"sourceSpan":{"start":[9,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[9,20]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"D13","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Typelevel","Num","Reps"],":*"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D3"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[104,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[104,11]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"d13","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Aliases"],"D13"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["d14",[{"values":[{"sourceSpan":{"start":[10,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[10,20]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"D14","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Typelevel","Num","Reps"],":*"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D4"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[106,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[106,11]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"d14","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Aliases"],"D14"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["d15",[{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[11,20]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"D15","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Typelevel","Num","Reps"],":*"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D5"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[108,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[108,11]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"d15","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Aliases"],"D15"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["d16",[{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[12,20]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"D16","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Typelevel","Num","Reps"],":*"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D6"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[110,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[110,11]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"d16","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Aliases"],"D16"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["d17",[{"values":[{"sourceSpan":{"start":[13,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[13,20]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"D17","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Typelevel","Num","Reps"],":*"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[112,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[112,11]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"d17","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Aliases"],"D17"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["d18",[{"values":[{"sourceSpan":{"start":[14,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[14,20]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"D18","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Typelevel","Num","Reps"],":*"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D8"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[114,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[114,11]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"d18","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Aliases"],"D18"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["d19",[{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[15,20]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"D19","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Typelevel","Num","Reps"],":*"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D9"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[116,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[116,11]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"d19","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Aliases"],"D19"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["cdatasectionnode",[{"values":[{"sourceSpan":null,"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"CDATASectionNode","moduleName":"Web.DOM.NodeType","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["c2",[{"values":[{"sourceSpan":{"start":[32,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Coproduct/Nested.purs","end":[32,28]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"C2","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"z"}]},"arguments":[["a",null],["z",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["c",[{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/quickcheck-laws/v6.0.1/src/Test/QuickCheck/Laws.purs","end":[41,23]},"score":4,"packageInfo":{"values":["quickcheck-laws"],"tag":"Package"},"name":"C","moduleName":"Test.QuickCheck.Laws","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":4,"packageInfo":{"values":["quickcheck-laws"],"tag":"Package"},"name":"C","moduleName":"Test.QuickCheck.Laws","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["bech32string",[{"values":[{"sourceSpan":{"start":[6,1],"name":"src/Types/Aliases.purs","end":[6,27]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Bech32String","moduleName":"Types.Aliases","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"IMPORTANT: All functions accepting `Bech32String` should behave correctly in\ncase `Bech32String` is not in bech32 format.\nThe type alias is here to make the intention of code more readable.\n"}],"tag":"SearchResult"}]],["before",[{"values":[{"sourceSpan":{"start":[286,1],"name":".spago/spec/v5.0.1/src/Test/Spec.purs","end":[286,89]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"before","moduleName":"Test.Spec","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"i"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec"],"SpecT"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec"],"SpecT"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Run a custom action before every spec item.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[450,1],"name":"src/Types/Interval.purs","end":[450,66]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"before","moduleName":"Types.Interval","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Types","Interval"],"Interval"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Check if a value is earlier than the beginning of an `Interval`.\n"}],"tag":"SearchResult"}]],["before_",[{"values":[{"sourceSpan":{"start":[290,1],"name":".spago/spec/v5.0.1/src/Test/Spec.purs","end":[290,90]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"before_","moduleName":"Test.Spec","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec"],"SpecT"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec"],"SpecT"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Run a custom action before every spec item.\n"}],"tag":"SearchResult"}]],["beforeall",[{"values":[{"sourceSpan":{"start":[298,1],"name":".spago/spec/v5.0.1/src/Test/Spec.purs","end":[298,123]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"beforeAll","moduleName":"Test.Spec","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Aff","Class"],"MonadAff"],"constraintArgs":[{"tag":"TypeVar","contents":"g"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Error","Class"],"MonadError"],"constraintArgs":[{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"i"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec"],"SpecT"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec"],"SpecT"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Run a custom action before the first spec item.\n"}],"tag":"SearchResult"}]],["beforeall_",[{"values":[{"sourceSpan":{"start":[304,1],"name":".spago/spec/v5.0.1/src/Test/Spec.purs","end":[304,124]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"beforeAll_","moduleName":"Test.Spec","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Aff","Class"],"MonadAff"],"constraintArgs":[{"tag":"TypeVar","contents":"g"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Error","Class"],"MonadError"],"constraintArgs":[{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec"],"SpecT"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec"],"SpecT"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Run a custom action before the first spec item.\n"}],"tag":"SearchResult"}]],["beforeprint",[{"values":[{"sourceSpan":{"start":[14,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Event/EventTypes.purs","end":[14,25]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"beforeprint","moduleName":"Web.HTML.Event.EventTypes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["beforescriptexecute",[{"values":[{"sourceSpan":{"start":[17,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Event/EventTypes.purs","end":[17,33]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"beforescriptexecute","moduleName":"Web.HTML.Event.EventTypes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["beforeunload",[{"values":[{"sourceSpan":{"start":[5,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Event/BeforeUnloadEvent/EventTypes.purs","end":[5,26]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"beforeunload","moduleName":"Web.HTML.Event.BeforeUnloadEvent.EventTypes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["beforeunloadevent",[{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Event/BeforeUnloadEvent.purs","end":[11,46]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"BeforeUnloadEvent","moduleName":"Web.HTML.Event.BeforeUnloadEvent","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["beforewith",[{"values":[{"sourceSpan":{"start":[294,1],"name":".spago/spec/v5.0.1/src/Test/Spec.purs","end":[294,102]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"beforeWith","moduleName":"Test.Spec","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["i'",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i'"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"i"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec"],"SpecT"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec"],"SpecT"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"i'"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Run a custom action before every spec item.\n"}],"tag":"SearchResult"}]],["beginningoftime",[{"values":[{"sourceSpan":{"start":[492,1],"name":"src/Types/Interval.purs","end":[492,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"beginningOfTime","moduleName":"Types.Interval","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"'beginningOfTime' corresponds to the Shelley launch date\n(2020-07-29T21:44:51Z) which is 1596059091000 in POSIX time\n(number of milliseconds since 1970-01-01T00:00:00Z).\n"}],"tag":"SearchResult"}]],["beside",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Beside","moduleName":"Prim.TypeError","info":{"values":[{"kind":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim","TypeError"],"Doc"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim","TypeError"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Prim","TypeError"],"Doc"]}]}]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"The Beside type constructor combines two Docs horizontally\nto be used in a custom type error.\n\nFor more information, see\n[the Custom Type Errors guide](https://github.com/purescript/documentation/blob/master/guides/Custom-Type-Errors.md).\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[655,1],"name":".spago/optparse/v4.1.0/src/Text/PrettyPrint/Leijen.purs","end":[655,28]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"beside","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["between",[{"values":[{"sourceSpan":{"start":[203,1],"name":".spago/prelude/v5.0.1/src/Data/Ord.purs","end":[203,53]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"between","moduleName":"Data.Ord","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether a value is between a minimum and a maximum (inclusive).\nFor example:\n\n``` purescript\nlet f = between 0 10\nf 0    == true\nf (-5) == false\nf 5    == true\nf 10   == true\nf 15   == false\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[110,1],"name":".spago/quickcheck-combinators/v0.1.3/src/Test/QuickCheck/Combinators.purs","end":[110,40]},"score":0,"packageInfo":{"values":["quickcheck-combinators"],"tag":"Package"},"name":"Between","moduleName":"Test.QuickCheck.Combinators","info":{"values":[{"typeArguments":[["n",null],["m",null],["t",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["quickcheck-combinators"],"tag":"Package"},"name":"Between","moduleName":"Test.QuickCheck.Combinators","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[59,1],"name":".spago/parsing/v7.0.1/src/Text/Parsing/Parser/Combinators.purs","end":[59,119]},"score":0,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"between","moduleName":"Text.Parsing.Parser.Combinators","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["open",{"tag":"ForAll","contents":["close",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"open"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"close"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Wrap a parser with opening and closing markers.\n\nFor example:\n\n```purescript\nparens = between (string \"(\") (string \")\")\n```\n"}],"tag":"SearchResult"}]],["aff",[{"values":[{"sourceSpan":{"start":[64,1],"name":".spago/aff/v6.0.0/src/Effect/Aff.purs","end":[64,38]},"score":13,"packageInfo":{"values":["aff"],"tag":"Package"},"name":"Aff","moduleName":"Effect.Aff","info":{"values":[{"kind":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"An `Aff a` is an asynchronous computation with effects. The\ncomputation may either error with an exception, or produce a result of\ntype `a`. `Aff` effects are assembled from primitive `Effect` effects using\n`makeAff` or `liftEffect`.\n"}],"tag":"SearchResult"}]],["affinetraversal",[{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/AffineTraversal.purs","end":[27,26]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"affineTraversal","moduleName":"Data.Lens.AffineTraversal","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"t"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"AffineTraversal"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[122,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Types.purs","end":[122,81]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"AffineTraversal","moduleName":"Data.Lens.Types","info":{"values":[{"type":{"tag":"ForAll","contents":["p",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Profunctor","Strong"],"Strong"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Profunctor","Choice"],"Choice"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Optic"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},"arguments":[["s",null],["t",null],["a",null],["b",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"An affine traversal (has at most one focus, but is not a prism).\n"}],"tag":"SearchResult"}]],["affinetraversal'",[{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/AffineTraversal.purs","end":[34,26]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"affineTraversal'","moduleName":"Data.Lens.AffineTraversal","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"t"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]}}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"AffineTraversal"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[123,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Types.purs","end":[123,52]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"AffineTraversal'","moduleName":"Data.Lens.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"AffineTraversal"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]},"arguments":[["s",null],["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["after",[{"values":[{"sourceSpan":{"start":[271,1],"name":".spago/spec/v5.0.1/src/Test/Spec.purs","end":[271,111]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"after","moduleName":"Test.Spec","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Fork","Class"],"MonadBracket"],"constraintArgs":[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec","Tree"],"ActionWith"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"i"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec"],"SpecT"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec"],"SpecT"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Run a custom action after every spec item.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[454,1],"name":"src/Types/Interval.purs","end":[454,65]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"after","moduleName":"Types.Interval","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Types","Interval"],"Interval"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Check if a value is later than the end of a `Interval`.\n"}],"tag":"SearchResult"}]],["after_",[{"values":[{"sourceSpan":{"start":[278,1],"name":".spago/spec/v5.0.1/src/Test/Spec.purs","end":[278,104]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"after_","moduleName":"Test.Spec","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Fork","Class"],"MonadBracket"],"constraintArgs":[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec"],"SpecT"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec"],"SpecT"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Run a custom action after every spec item.\n"}],"tag":"SearchResult"}]],["afterall",[{"values":[{"sourceSpan":{"start":[325,1],"name":".spago/spec/v5.0.1/src/Test/Spec.purs","end":[325,88]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"afterAll","moduleName":"Test.Spec","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec","Tree"],"ActionWith"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"i"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec"],"SpecT"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec"],"SpecT"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Run a custom action after the last spec item.\n"}],"tag":"SearchResult"}]],["afterall_",[{"values":[{"sourceSpan":{"start":[329,1],"name":".spago/spec/v5.0.1/src/Test/Spec.purs","end":[329,81]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"afterAll_","moduleName":"Test.Spec","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec"],"SpecT"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec"],"SpecT"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Run a custom action after the last spec item.\n"}],"tag":"SearchResult"}]],["afterprint",[{"values":[{"sourceSpan":{"start":[8,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Event/EventTypes.purs","end":[8,24]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"afterprint","moduleName":"Web.HTML.Event.EventTypes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["afterscriptexecute",[{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Event/EventTypes.purs","end":[11,32]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"afterscriptexecute","moduleName":"Web.HTML.Event.EventTypes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["&=&",[{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/quickcheck-combinators/v0.1.3/src/Test/QuickCheck/Combinators.purs","end":[27,21]},"score":0,"packageInfo":{"values":["quickcheck-combinators"],"tag":"Package"},"name":"(&=&)","moduleName":"Test.QuickCheck.Combinators","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]]]