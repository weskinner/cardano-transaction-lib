// This file was generated by purescript-docs-search.
window.DocsSearchIndex["21"] = [["ticketkeys",[{"values":[{"sourceSpan":{"start":[165,1],"name":".spago/node-http/v6.0.0/src/Node/HTTP/Secure.purs","end":[165,39]},"score":1,"packageInfo":{"values":["node-http"],"tag":"Package"},"name":"ticketKeys","moduleName":"Node.HTTP.Secure","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"tag":"TypeConstructor","contents":[["Node","HTTP","Secure"],"SSLOptions"]}]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"See the [node docs](https://nodejs.org/api/tls.html#tls_tls_createserver_options_secureconnectionlistener)\n"}],"tag":"SearchResult"}]],["time",[{"values":[{"sourceSpan":{"start":[46,1],"name":".spago/datetime/v5.0.2/src/Data/DateTime.purs","end":[46,25]},"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"time","moduleName":"Data.DateTime","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","DateTime"],"DateTime"]}]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Time"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/datetime/v5.0.2/src/Data/Time.purs","end":[24,48]},"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"Time","moduleName":"Data.Time","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"Time","moduleName":"Data.Time","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Data","Time","Component"],"Hour"]},{"tag":"TypeConstructor","contents":[["Data","Time","Component"],"Minute"]},{"tag":"TypeConstructor","contents":[["Data","Time","Component"],"Second"]},{"tag":"TypeConstructor","contents":[["Data","Time","Component"],"Millisecond"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[33,1],"name":".spago/console/v5.0.0/src/Effect/Class/Console.purs","end":[33,52]},"score":73,"packageInfo":{"values":["console"],"tag":"Package"},"name":"time","moduleName":"Effect.Class.Console","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[49,1],"name":".spago/console/v5.0.0/src/Effect/Console.purs","end":[49,45]},"score":73,"packageInfo":{"values":["console"],"tag":"Package"},"name":"time","moduleName":"Effect.Console","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Start a named timer.\n"}],"tag":"SearchResult"}]],["timeend",[{"values":[{"sourceSpan":{"start":[39,1],"name":".spago/console/v5.0.0/src/Effect/Class/Console.purs","end":[39,55]},"score":73,"packageInfo":{"values":["console"],"tag":"Package"},"name":"timeEnd","moduleName":"Effect.Class.Console","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[55,1],"name":".spago/console/v5.0.0/src/Effect/Console.purs","end":[55,48]},"score":73,"packageInfo":{"values":["console"],"tag":"Package"},"name":"timeEnd","moduleName":"Effect.Console","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Stop a named timer and print time since it started in milliseconds.\n"}],"tag":"SearchResult"}]],["timelockexpiry",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"TimelockExpiry","moduleName":"Cardano.Types.Transaction","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Serialization","Address"],"Slot"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[156,1],"name":"src/Serialization/Types.purs","end":[156,43]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"TimelockExpiry","moduleName":"Serialization.Types","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["timelockstart",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"TimelockStart","moduleName":"Cardano.Types.Transaction","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Serialization","Address"],"Slot"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[157,1],"name":"src/Serialization/Types.purs","end":[157,42]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"TimelockStart","moduleName":"Serialization.Types","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["timelog",[{"values":[{"sourceSpan":{"start":[36,1],"name":".spago/console/v5.0.0/src/Effect/Class/Console.purs","end":[36,55]},"score":73,"packageInfo":{"values":["console"],"tag":"Package"},"name":"timeLog","moduleName":"Effect.Class.Console","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[52,1],"name":".spago/console/v5.0.0/src/Effect/Console.purs","end":[52,48]},"score":73,"packageInfo":{"values":["console"],"tag":"Package"},"name":"timeLog","moduleName":"Effect.Console","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Print the time since a named timer started in milliseconds.\n"}],"tag":"SearchResult"}]],["timeout",[{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/test-unit/v16.0.0/src/Test/Unit.purs","end":[63,31]},"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"timeout","moduleName":"Test.Unit","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Set a test to fail after a given number of milliseconds.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[20,1],"name":".spago/web-xhr/v4.1.0/src/Web/XHR/EventTypes.purs","end":[20,21]},"score":1,"packageInfo":{"values":["web-xhr"],"tag":"Package"},"name":"timeout","moduleName":"Web.XHR.EventTypes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[120,1],"name":".spago/web-xhr/v4.1.0/src/Web/XHR/XMLHttpRequest.purs","end":[120,65]},"score":1,"packageInfo":{"values":["web-xhr"],"tag":"Package"},"name":"timeout","moduleName":"Web.XHR.XMLHttpRequest","info":{"values":[{"type":{"tag":"ForAll","contents":["res",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Web","XHR","XMLHttpRequest"],"XMLHttpRequest"]},{"tag":"TypeVar","contents":"res"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["timeouterror",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["affjax"],"tag":"Package"},"name":"TimeoutError","moduleName":"Affjax","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["timeoutid",[{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/js-timers/v5.0.1/src/Effect/Timer.purs","end":[15,34]},"score":1,"packageInfo":{"values":["js-timers"],"tag":"Package"},"name":"TimeoutId","moduleName":"Effect.Timer","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The ID of a timer started with `setTimeout`.\n"}],"tag":"SearchResult"}]],["timestamp",[{"values":[{"sourceSpan":{"start":[81,1],"name":".spago/web-events/v3.0.0/src/Web/Event/Event.purs","end":[81,45]},"score":2,"packageInfo":{"values":["web-events"],"tag":"Package"},"name":"timeStamp","moduleName":"Web.Event.Event","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","Event","Internal","Types"],"Event"]}]},{"tag":"TypeConstructor","contents":[["Data","DateTime","Instant"],"Instant"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The time in milliseconds between 01/01/1970 and when the event was\ndispatched.\n"}],"tag":"SearchResult"}]],["tip",[{"values":[{"sourceSpan":{"start":[14,1],"name":"src/Types/Chain.purs","end":[16,17]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Tip","moduleName":"Types.Chain","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Tip","moduleName":"Types.Chain","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Types","Chain"],"ChainTip"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["tipatgenesis",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"TipAtGenesis","moduleName":"Types.Chain","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["title",[{"values":[{"sourceSpan":{"start":[1647,1],"name":".spago/unicode/v5.0.0/src/Data/CodePoint/Unicode/Internal/Casing.purs","end":[1647,26]},"score":2,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"title","moduleName":"Data.CodePoint.Unicode.Internal.Casing","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[106,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLDocument.purs","end":[106,54]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"title","moduleName":"Web.HTML.HTMLDocument","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLDocument"],"HTMLDocument"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[102,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLElement.purs","end":[102,53]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"title","moduleName":"Web.HTML.HTMLElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLElement"],"HTMLElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["titlecaseletter",[{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"TitlecaseLetter","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["t7",[{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Product/Nested.purs","end":[41,51]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"T7","moduleName":"Data.Functor.Product.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Product"],"Product"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Product","Nested"],"T6"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"z"}]}}]},"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null],["f",null],["z",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[90,1],"name":".spago/tuples/v6.0.1/src/Data/Tuple/Nested.purs","end":[90,49]},"score":34,"packageInfo":{"values":["tuples"],"tag":"Package"},"name":"T7","moduleName":"Data.Tuple.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"T6"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"z"}]}}]},"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null],["f",null],["z",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["pmode",[{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"PMode","moduleName":"Ansi.Codes","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"RenderingMode"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["on",[{"values":[{"sourceSpan":{"start":[112,1],"name":".spago/prelude/v5.0.1/src/Data/Function.purs","end":[112,61]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"on","moduleName":"Data.Function","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The `on` function is used to change the domain of a binary operator.\n\nFor example, we can create a function which compares two records based on the values of their `x` properties:\n\n```purescript\ncompareX :: forall r. { x :: Number | r } -> { x :: Number | r } -> Ordering\ncompareX = compare `on` _.x\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[160,1],"name":".spago/variant/v7.0.3/src/Data/Functor/Variant.purs","end":[168,6]},"score":1,"packageInfo":{"values":["variant"],"tag":"Package"},"name":"on","moduleName":"Data.Functor.Variant","info":{"values":[{"type":{"tag":"ForAll","contents":["proxy",{"tag":"ForAll","contents":["sym",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["r2",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"},{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"proxy"},{"tag":"TypeVar","contents":"sym"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r1"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attempt to read a variant at a given label by providing branches.\nThe failure branch receives the provided variant, but with the label\nremoved.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[77,1],"name":".spago/variant/v7.0.3/src/Data/Variant.purs","end":[85,6]},"score":1,"packageInfo":{"values":["variant"],"tag":"Package"},"name":"on","moduleName":"Data.Variant","info":{"values":[{"type":{"tag":"ForAll","contents":["proxy",{"tag":"ForAll","contents":["sym",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["r2",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Cons"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintArgs":[{"tag":"TypeVar","contents":"sym"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"proxy"},{"tag":"TypeVar","contents":"sym"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"r1"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"r2"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attempt to read a variant at a given label by providing branches.\nThe failure branch receives the provided variant, but with the label\nremoved.\n"}],"tag":"SearchResult"}]],["onbeforeexit",[{"values":[{"sourceSpan":{"start":[53,1],"name":".spago/node-process/v8.2.0/src/Node/Process.purs","end":[53,58]},"score":2,"packageInfo":{"values":["node-process"],"tag":"Package"},"name":"onBeforeExit","moduleName":"Node.Process","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Register a callback to be performed when the event loop empties, and\nNode.js is about to exit. Asynchronous calls can be made in the callback,\nand if any are made, it will cause the process to continue a little longer.\n"}],"tag":"SearchResult"}]],["onchainposixtimerange",[{"values":[{"sourceSpan":{"start":[465,1],"name":"src/Types/Interval.purs","end":[465,69]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"OnchainPOSIXTimeRange","moduleName":"Types.Interval","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A newtype wrapper over `POSIXTimeRange` to represent the on-chain version\nof an off-chain `POSIXTimeRange`. In particular, there are a few steps\nin conversion:\n1) `POSIXTimeRange` -> `SlotRange`\n2) `SlotRange` -> `TransactionValidity`\n3) `TransactionValidity` -> `OnchainPOSIXTimeRange`\n`OnchainPOSIXTimeRange` is intended to equal the validity range found in\nthe on-chain `ScriptContext`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"OnchainPOSIXTimeRange","moduleName":"Types.Interval","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Types","Interval"],"POSIXTimeRange"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["onclose",[{"values":[{"sourceSpan":{"start":[191,1],"name":".spago/node-child-process/v7.1.0/src/Node/ChildProcess.purs","end":[194,17]},"score":0,"packageInfo":{"values":["node-child-process"],"tag":"Package"},"name":"onClose","moduleName":"Node.ChildProcess","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","ChildProcess"],"ChildProcess"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","ChildProcess"],"Exit"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Handle the `\"close\"` signal.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[210,1],"name":".spago/node-net/v2.0.1/src/Node/Net/Server.purs","end":[210,48]},"score":1,"packageInfo":{"values":["node-net"],"tag":"Package"},"name":"onClose","moduleName":"Node.Net.Server","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Net","Server"],"Server"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attaches the callback as a listener to the `'close'` event.\n\n`'close'` is emitted when a close occurs.\nWill not be emitted until all connections have ended.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[266,1],"name":".spago/node-net/v2.0.1/src/Node/Net/Socket.purs","end":[266,61]},"score":1,"packageInfo":{"values":["node-net"],"tag":"Package"},"name":"onClose","moduleName":"Node.Net.Socket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attaches the callback as a listener to the `'close'` event.\nThe `Boolean` represents whether an error happened during transmission.\n\n`'close'` is emitted when an close occurs.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[210,1],"name":".spago/node-streams/v5.0.0/src/Node/Stream.purs","end":[214,17]},"score":5,"packageInfo":{"values":["node-streams"],"tag":"Package"},"name":"onClose","moduleName":"Node.Stream","info":{"values":[{"type":{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","Stream"],"Stream"]},{"tag":"TypeVar","contents":"w"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Listen for `close` events.\n"}],"tag":"SearchResult"}]],["onconnect",[{"values":[{"sourceSpan":{"start":[277,1],"name":".spago/node-net/v2.0.1/src/Node/Net/Socket.purs","end":[277,50]},"score":1,"packageInfo":{"values":["node-net"],"tag":"Package"},"name":"onConnect","moduleName":"Node.Net.Socket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attaches the callback as a listener to the `'connect'` event.\n\n`'connect'` is emitted when a new connection is successfully establed.\n"}],"tag":"SearchResult"}]],["onconnection",[{"values":[{"sourceSpan":{"start":[216,1],"name":".spago/node-net/v2.0.1/src/Node/Net/Server.purs","end":[216,65]},"score":1,"packageInfo":{"values":["node-net"],"tag":"Package"},"name":"onConnection","moduleName":"Node.Net.Server","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Net","Server"],"Server"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attaches the callback as a listener to the `'connection'` event.\n\n`'connection'` is emitted when a new connection is made.\n"}],"tag":"SearchResult"}]],["onconsole",[{"values":[{"sourceSpan":{"start":[158,1],"name":".spago/purescript-toppokki/6983e07bf0aa55ab779bcef12df3df339a2b5bd9/src/Toppoki.purs","end":[158,69]},"score":0,"packageInfo":{"values":["purescript-toppokki"],"tag":"Package"},"name":"onConsole","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Uncurried"],"EffectFn1"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"ConsoleMessage"]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Page"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["ondata",[{"values":[{"sourceSpan":{"start":[286,1],"name":".spago/node-net/v2.0.1/src/Node/Net/Socket.purs","end":[286,73]},"score":1,"packageInfo":{"values":["node-net"],"tag":"Package"},"name":"onData","moduleName":"Node.Net.Socket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attaches the callback as a listener to the `'data'` event.\n\n`'data'` is emitted when a data is recieved.\nData will be lost if there is no listener when `'data'` is emitted.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[85,1],"name":".spago/node-streams/v5.0.0/src/Node/Stream.purs","end":[89,17]},"score":5,"packageInfo":{"values":["node-streams"],"tag":"Package"},"name":"onData","moduleName":"Node.Stream","info":{"values":[{"type":{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","Stream"],"Readable"]},{"tag":"TypeVar","contents":"w"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Listen for `data` events, returning data in a Buffer. Note that this will fail\nif `setEncoding` has been called on the stream.\n"}],"tag":"SearchResult"}]],["ondataeither",[{"values":[{"sourceSpan":{"start":[155,1],"name":".spago/node-streams/v5.0.0/src/Node/Stream.purs","end":[159,17]},"score":5,"packageInfo":{"values":["node-streams"],"tag":"Package"},"name":"onDataEither","moduleName":"Node.Stream","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","Stream"],"Readable"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Listen for `data` events, returning data in an `Either String Buffer`. This\nfunction is provided for the (hopefully rare) case that `setEncoding` has\nbeen called on the stream.\n"}],"tag":"SearchResult"}]],["ondatastring",[{"values":[{"sourceSpan":{"start":[144,1],"name":".spago/node-streams/v5.0.0/src/Node/Stream.purs","end":[149,17]},"score":5,"packageInfo":{"values":["node-streams"],"tag":"Package"},"name":"onDataString","moduleName":"Node.Stream","info":{"values":[{"type":{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","Stream"],"Readable"]},{"tag":"TypeVar","contents":"w"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Encoding"],"Encoding"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Listen for `data` events, returning data in a String, which will be\ndecoded using the given encoding. Note that this will fail if `setEncoding`\nhas been called on the stream.\n"}],"tag":"SearchResult"}]],["ondisconnect",[{"values":[{"sourceSpan":{"start":[219,1],"name":".spago/node-child-process/v7.1.0/src/Node/ChildProcess.purs","end":[222,17]},"score":0,"packageInfo":{"values":["node-child-process"],"tag":"Package"},"name":"onDisconnect","moduleName":"Node.ChildProcess","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","ChildProcess"],"ChildProcess"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Handle the `\"disconnect\"` signal.\n"}],"tag":"SearchResult"}]],["ondrain",[{"values":[{"sourceSpan":{"start":[297,1],"name":".spago/node-net/v2.0.1/src/Node/Net/Socket.purs","end":[297,48]},"score":1,"packageInfo":{"values":["node-net"],"tag":"Package"},"name":"onDrain","moduleName":"Node.Net.Socket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attaches the callback as a listener to the `'drain'` event.\n\n`'drain'` is emitted when the write buffer is empty.\n"}],"tag":"SearchResult"}]],["one",[{"values":[{"sourceSpan":{"start":[38,3],"name":".spago/prelude/v5.0.1/src/Data/Semiring.purs","end":[38,12]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"one","moduleName":"Data.Semiring","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Semiring"],"Semiring"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[89,1],"name":"src/Types/BigNum.purs","end":[89,29]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"one","moduleName":"Types.BigNum","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Types","BigNum"],"BigNum"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["onend",[{"values":[{"sourceSpan":{"start":[303,1],"name":".spago/node-net/v2.0.1/src/Node/Net/Socket.purs","end":[303,46]},"score":1,"packageInfo":{"values":["node-net"],"tag":"Package"},"name":"onEnd","moduleName":"Node.Net.Socket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attaches the callback as a listener to the `'end'` event.\n\n`'end'` is emitted when the other end of the `Socket` sends a `FIN` packet.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[196,1],"name":".spago/node-streams/v5.0.0/src/Node/Stream.purs","end":[200,17]},"score":5,"packageInfo":{"values":["node-streams"],"tag":"Package"},"name":"onEnd","moduleName":"Node.Stream","info":{"values":[{"type":{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","Stream"],"Readable"]},{"tag":"TypeVar","contents":"w"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Listen for `end` events.\n"}],"tag":"SearchResult"}]],["oneof",[{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/gen/v3.0.0/src/Control/Monad/Gen.purs","end":[34,67]},"score":10,"packageInfo":{"values":["gen"],"tag":"Package"},"name":"oneOf","moduleName":"Control.Monad.Gen","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Gen","Class"],"MonadGen"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semigroup","Foldable"],"Foldable1"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a generator that outputs a value chosen from a selection of\nexisting generators with uniform probability.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[286,1],"name":".spago/foldable-traversable/v5.0.1/src/Data/Foldable.purs","end":[286,62]},"score":24,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"oneOf","moduleName":"Data.Foldable","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Plus"],"Plus"],"constraintArgs":[{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Combines a collection of elements using the `Alt` operation.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[104,1],"name":".spago/nonempty/v6.1.0/src/Data/NonEmpty.purs","end":[104,58]},"score":10,"packageInfo":{"values":["nonempty"],"tag":"Package"},"name":"oneOf","moduleName":"Data.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","NonEmpty"],"NonEmpty"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the `alt` (`<|>`) result of:\n- The first element lifted to the container of the remaining elements.\n- The remaining elements.\n\n```purescript\nimport Data.Maybe(Maybe(..))\n\noneOf (1 :| Nothing) == Just 1\noneOf (1 :| Just 2) == Just 1\n\noneOf (1 :| [2, 3]) == [1,2,3]\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[158,1],"name":".spago/quickcheck/v7.1.0/src/Test/QuickCheck/Gen.purs","end":[158,50]},"score":17,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"oneOf","moduleName":"Test.QuickCheck.Gen","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a random generator which selects and executes a random generator from\na non-empty array of random generators with uniform probability.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[120,1],"name":".spago/parsing/v7.0.1/src/Text/Parsing/Parser/String.purs","end":[120,66]},"score":0,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"oneOf","moduleName":"Text.Parsing.Parser.String","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Match one of the BMP `Char`s in the array.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/untagged-union/v0.3.0/src/Untagged/Union.purs","end":[34,50]},"score":0,"packageInfo":{"values":["untagged-union"],"tag":"Package"},"name":"OneOf","moduleName":"Untagged.Union","info":{"values":[{"kind":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["oneofmap",[{"values":[{"sourceSpan":{"start":[290,1],"name":".spago/foldable-traversable/v5.0.1/src/Data/Foldable.purs","end":[290,77]},"score":24,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"oneOfMap","moduleName":"Data.Foldable","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Plus"],"Plus"],"constraintArgs":[{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Folds a structure into some `Plus`.\n"}],"tag":"SearchResult"}]],["onerecord",[{"values":[{"sourceSpan":{"start":[102,3],"name":".spago/prelude/v5.0.1/src/Data/Semiring.purs","end":[102,85]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"oneRecord","moduleName":"Data.Semiring","info":{"values":[{"typeClassArguments":[["rowlist",null],["row",null],["subrow",null]],"typeClass":[["Data","Semiring"],"SemiringRecord"],"type":{"tag":"ForAll","contents":["rowlist",{"tag":"ForAll","contents":["row",{"tag":"ForAll","contents":["subrow",{"tag":"ForAll","contents":["rproxy",{"tag":"ForAll","contents":["rlproxy",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semiring"],"SemiringRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"rowlist"},{"tag":"TypeVar","contents":"row"},{"tag":"TypeVar","contents":"subrow"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"rlproxy"},{"tag":"TypeVar","contents":"rowlist"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"rproxy"},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"subrow"}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["onerror",[{"values":[{"sourceSpan":{"start":[225,1],"name":".spago/node-child-process/v7.1.0/src/Node/ChildProcess.purs","end":[228,17]},"score":0,"packageInfo":{"values":["node-child-process"],"tag":"Package"},"name":"onError","moduleName":"Node.ChildProcess","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","ChildProcess"],"ChildProcess"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","ChildProcess"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Handle the `\"error\"` signal.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[227,1],"name":".spago/node-net/v2.0.1/src/Node/Net/Server.purs","end":[227,59]},"score":1,"packageInfo":{"values":["node-net"],"tag":"Package"},"name":"onError","moduleName":"Node.Net.Server","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Net","Server"],"Server"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attaches the callback as a listener to the `'error'` event.\n\n`'error'` is emitted when an error occurs.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[310,1],"name":".spago/node-net/v2.0.1/src/Node/Net/Socket.purs","end":[310,59]},"score":1,"packageInfo":{"values":["node-net"],"tag":"Package"},"name":"onError","moduleName":"Node.Net.Socket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attaches the callback as a listener to the `'error'` event.\n\n`'error'` is emitted when an error occurs.\n`'close'` is emitted directly after this event.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[217,1],"name":".spago/node-streams/v5.0.0/src/Node/Stream.purs","end":[221,17]},"score":5,"packageInfo":{"values":["node-streams"],"tag":"Package"},"name":"onError","moduleName":"Node.Stream","info":{"values":[{"type":{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","Stream"],"Stream"]},{"tag":"TypeVar","contents":"w"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Listen for `error` events.\n"}],"tag":"SearchResult"}]],["onexit",[{"values":[{"sourceSpan":{"start":[178,1],"name":".spago/node-child-process/v7.1.0/src/Node/ChildProcess.purs","end":[181,17]},"score":0,"packageInfo":{"values":["node-child-process"],"tag":"Package"},"name":"onExit","moduleName":"Node.ChildProcess","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","ChildProcess"],"ChildProcess"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","ChildProcess"],"Exit"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Handle the `\"exit\"` signal.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[61,1],"name":".spago/node-process/v8.2.0/src/Node/Process.purs","end":[61,61]},"score":2,"packageInfo":{"values":["node-process"],"tag":"Package"},"name":"onExit","moduleName":"Node.Process","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Register a callback to be performed when the process is about to exit.\nAny work scheduled via asynchronous calls made here will not be performed\nin time.\n\nThe argument to the callback is the exit code which the process is about\nto exit with.\n"}],"tag":"SearchResult"}]],["onfinish",[{"values":[{"sourceSpan":{"start":[203,1],"name":".spago/node-streams/v5.0.0/src/Node/Stream.purs","end":[207,17]},"score":5,"packageInfo":{"values":["node-streams"],"tag":"Package"},"name":"onFinish","moduleName":"Node.Stream","info":{"values":[{"type":{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","Stream"],"Writable"]},{"tag":"TypeVar","contents":"w"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Listen for `finish` events.\n"}],"tag":"SearchResult"}]],["online",[{"values":[{"sourceSpan":{"start":[74,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Event/EventTypes.purs","end":[74,20]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"online","moduleName":"Web.HTML.Event.EventTypes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Navigator.purs","end":[11,53]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"onLine","moduleName":"Web.HTML.Navigator","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Navigator"],"Navigator"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["onlistening",[{"values":[{"sourceSpan":{"start":[234,1],"name":".spago/node-net/v2.0.1/src/Node/Net/Server.purs","end":[234,52]},"score":1,"packageInfo":{"values":["node-net"],"tag":"Package"},"name":"onListening","moduleName":"Node.Net.Server","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Net","Server"],"Server"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attaches the callback as a listener to the `'listening'` event.\n\n`'listening'` is emitted when the `Server` has been bound.\n"}],"tag":"SearchResult"}]],["onload",[{"values":[{"sourceSpan":{"start":[155,1],"name":".spago/purescript-toppokki/6983e07bf0aa55ab779bcef12df3df339a2b5bd9/src/Toppoki.purs","end":[155,56]},"score":0,"packageInfo":{"values":["purescript-toppokki"],"tag":"Package"},"name":"onLoad","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Uncurried"],"EffectFn1"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Page"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["onlookup",[{"values":[{"sourceSpan":{"start":[319,1],"name":".spago/node-net/v2.0.1/src/Node/Net/Socket.purs","end":[319,74]},"score":1,"packageInfo":{"values":["node-net"],"tag":"Package"},"name":"onLookup","moduleName":"Node.Net.Socket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Lookup"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attaches the callback as a listener to the `'lookup'` event.\n\n`'lookup'` is emitted after resolving the hostname but before connecting.\n"}],"tag":"SearchResult"}]],["only",[{"values":[{"sourceSpan":{"start":[147,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Prism.purs","end":[147,51]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"only","moduleName":"Data.Lens.Prism","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`only` focuses not just on a case, but a specific value of that case.\n\n```purescript\nsolidWhiteFocus :: Prism' Fill Unit\nsolidWhiteFocus = only $ Solid Color.white\n\nis      solidWhiteFocus (Solid Color.white) == true\npreview solidWhiteFocus (Solid Color.white) == Just unit\nreview  solidWhiteFocus unit                == Solid Color.white\n```\n\n*Note*: `only` depends on `Eq`. Strange definitions of `(==)`\n(for example, that it counts any `Fill` as being equal to `Solid Color.white`)\nwill create a prism that violates the preview-review law. \n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["mote"],"tag":"Package"},"name":"Only","moduleName":"Mote.Description","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[106,1],"name":".spago/mote/v1.1.0/src/Mote/Monad.purs","end":[110,28]},"score":0,"packageInfo":{"values":["mote"],"tag":"Package"},"name":"only","moduleName":"Mote.Monad","info":{"values":[{"type":{"tag":"ForAll","contents":["bracket",{"tag":"ForAll","contents":["test",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Mote","Monad"],"MoteT"]},{"tag":"TypeVar","contents":"bracket"}]},{"tag":"TypeVar","contents":"test"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Mote","Monad"],"MoteT"]},{"tag":"TypeVar","contents":"bracket"}]},{"tag":"TypeVar","contents":"test"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Marks the following group(s) and/or test(s) to be added to a plan while\nskipping any other siblings that are not also tagged with `only`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[72,1],"name":".spago/test-unit/v16.0.0/src/Test/Unit.purs","end":[72,28]},"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"Only","moduleName":"Test.Unit","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"Only","moduleName":"Test.Unit","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["onlylevel",[{"values":[{"sourceSpan":{"start":[32,1],"name":".spago/monad-logger/v1.3.1/src/Data/Log/Filter.purs","end":[32,64]},"score":0,"packageInfo":{"values":["monad-logger"],"tag":"Package"},"name":"onlyLevel","moduleName":"Data.Log.Filter","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Log","Level"],"LogLevel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Log","Filter"],"LogFilter"]},{"tag":"TypeVar","contents":"m"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["onmatch",[{"values":[{"sourceSpan":{"start":[196,1],"name":".spago/variant/v7.0.3/src/Data/Functor/Variant.purs","end":[204,6]},"score":1,"packageInfo":{"values":["variant"],"tag":"Package"},"name":"onMatch","moduleName":"Data.Functor.Variant","info":{"values":[{"type":{"tag":"ForAll","contents":["rl",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r3",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"rl"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Variant","Internal"],"VariantFMatchCases"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"},{"tag":"TypeVar","contents":"r3"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r2"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"r3"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Match a `VariantF` with a `Record` containing functions for handling cases.\nThis is similar to `on`, except instead of providing a single label and\nhandler, you can provide a record where each field maps to a particular\n`VariantF` case.\n\n```purescript\nonMatch\n { foo: \\foo -> \"Foo: \" <> maybe \"nothing\" id foo\n , bar: \\bar -> \"Bar: \" <> snd bar\n }\n```\n\nPolymorphic functions in records (such as `show` or `id`) can lead\nto inference issues if not all polymorphic variables are specified\nin usage. When in doubt, label methods with specific types, such as\n`show :: Int -> String`, or give the whole record an appropriate type.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[113,1],"name":".spago/variant/v7.0.3/src/Data/Variant.purs","end":[121,6]},"score":1,"packageInfo":{"values":["variant"],"tag":"Package"},"name":"onMatch","moduleName":"Data.Variant","info":{"values":[{"type":{"tag":"ForAll","contents":["rl",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r3",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"rl"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Variant","Internal"],"VariantMatchCases"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"},{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"b"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"},{"tag":"TypeVar","contents":"r3"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"r2"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"r3"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Match a `Variant` with a `Record` containing functions for handling cases.\nThis is similar to `on`, except instead of providing a single label and\nhandler, you can provide a record where each field maps to a particular\n`Variant` case.\n\n```purescript\nonMatch\n  { foo: \\foo -> \"Foo: \" <> foo\n  , bar: \\bar -> \"Bar: \" <> bar\n  }\n````\n\nPolymorphic functions in records (such as `show` or `id`) can lead\nto inference issues if not all polymorphic variables are specified\nin usage. When in doubt, label methods with specific types, such as\n`show :: Int -> String`, or give the whole record an appropriate type.\n"}],"tag":"SearchResult"}]],["onmessage",[{"values":[{"sourceSpan":{"start":[204,1],"name":".spago/node-child-process/v7.1.0/src/Node/ChildProcess.purs","end":[207,17]},"score":0,"packageInfo":{"values":["node-child-process"],"tag":"Package"},"name":"onMessage","moduleName":"Node.ChildProcess","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","ChildProcess"],"ChildProcess"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Node","ChildProcess"],"Handle"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Handle the `\"message\"` signal.\n"}],"tag":"SearchResult"}]],["onpageerror",[{"values":[{"sourceSpan":{"start":[152,1],"name":".spago/purescript-toppokki/6983e07bf0aa55ab779bcef12df3df339a2b5bd9/src/Toppoki.purs","end":[152,62]},"score":0,"packageInfo":{"values":["purescript-toppokki"],"tag":"Package"},"name":"onPageError","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Uncurried"],"EffectFn1"]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Page"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["onreadable",[{"values":[{"sourceSpan":{"start":[189,1],"name":".spago/node-streams/v5.0.0/src/Node/Stream.purs","end":[193,17]},"score":5,"packageInfo":{"values":["node-streams"],"tag":"Package"},"name":"onReadable","moduleName":"Node.Stream","info":{"values":[{"type":{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","Stream"],"Readable"]},{"tag":"TypeVar","contents":"w"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Listen for `readable` events.\n"}],"tag":"SearchResult"}]],["onready",[{"values":[{"sourceSpan":{"start":[331,1],"name":".spago/node-net/v2.0.1/src/Node/Net/Socket.purs","end":[331,48]},"score":1,"packageInfo":{"values":["node-net"],"tag":"Package"},"name":"onReady","moduleName":"Node.Net.Socket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attaches the callback as a listener to the `'ready'` event.\n\n`'ready'` is emitted when the `Socket` is ready to be used.\n"}],"tag":"SearchResult"}]],["onrequestfailed",[{"values":[{"sourceSpan":{"start":[161,1],"name":".spago/purescript-toppokki/6983e07bf0aa55ab779bcef12df3df339a2b5bd9/src/Toppoki.purs","end":[161,66]},"score":0,"packageInfo":{"values":["purescript-toppokki"],"tag":"Package"},"name":"onRequestFailed","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Uncurried"],"EffectFn1"]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Page"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["onsignal",[{"values":[{"sourceSpan":{"start":[83,1],"name":".spago/node-process/v8.2.0/src/Node/Process.purs","end":[83,49]},"score":2,"packageInfo":{"values":["node-process"],"tag":"Package"},"name":"onSignal","moduleName":"Node.Process","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Posix","Signal"],"Signal"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Install a handler for a particular signal.\n"}],"tag":"SearchResult"}]],["ontimeout",[{"values":[{"sourceSpan":{"start":[338,1],"name":".spago/node-net/v2.0.1/src/Node/Net/Socket.purs","end":[338,50]},"score":1,"packageInfo":{"values":["node-net"],"tag":"Package"},"name":"onTimeout","moduleName":"Node.Net.Socket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attaches the callback as a listener to the `'timeout'` event.\n\n`'timeout'` is emitted if the `Socket` times out from inactivity.\nThe `Socket` is still open and should be manually closed.\n"}],"tag":"SearchResult"}]],["onuncaughtexception",[{"values":[{"sourceSpan":{"start":[67,1],"name":".spago/node-process/v8.2.0/src/Node/Process.purs","end":[67,76]},"score":2,"packageInfo":{"values":["node-process"],"tag":"Package"},"name":"onUncaughtException","moduleName":"Node.Process","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Install a handler for uncaught exceptions. The callback will be called\nwhen the process emits the `uncaughtException` event. The handler\ncurrently does not expose the second `origin` argument from the Node 12\nversion of this event to maintain compatibility with older Node versions.\n"}],"tag":"SearchResult"}]],["onunhandledrejection",[{"values":[{"sourceSpan":{"start":[78,1],"name":".spago/node-process/v8.2.0/src/Node/Process.purs","end":[78,90]},"score":2,"packageInfo":{"values":["node-process"],"tag":"Package"},"name":"onUnhandledRejection","moduleName":"Node.Process","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Install a handler for unhandled promise rejections. The callback will be\ncalled when the process emits the `unhandledRejection` event.\n\nThe first argument to the handler can be whatever type the unhandled\nPromise yielded on rejection (typically, but not necessarily, an `Error`).\n\nThe handler currently does not expose the type of the second argument,\nwhich is a `Promise`, in order to allow users of this library to choose\ntheir own PureScript `Promise` bindings.\n"}],"tag":"SearchResult"}]],["onupgrade",[{"values":[{"sourceSpan":{"start":[74,1],"name":".spago/node-http/v6.0.0/src/Node/HTTP.purs","end":[74,98]},"score":1,"packageInfo":{"values":["node-http"],"tag":"Package"},"name":"onUpgrade","moduleName":"Node.HTTP","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","HTTP"],"Server"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","HTTP"],"Request"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Listen to `upgrade` events on the server\n"}],"tag":"SearchResult"}]],["noargerror",[{"values":[{"sourceSpan":{"start":[195,1],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Builder.purs","end":[195,57]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"noArgError","moduleName":"Options.Applicative.Builder","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParseError"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Specify the error to display when no argument is provided to this option.\n"}],"tag":"SearchResult"}]],["noarguments",[{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/prelude/v5.0.1/src/Data/Generic/Rep.purs","end":[23,31]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"NoArguments","moduleName":"Data.Generic.Rep","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A representation for constructors with no arguments.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"NoArguments","moduleName":"Data.Generic.Rep","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nobacktrack",[{"values":[{"sourceSpan":{"start":[490,1],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Builder.purs","end":[490,24]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"noBacktrack","moduleName":"Options.Applicative.Builder","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"PrefsMod"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Turn off backtracking after subcommand is parsed.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"NoBacktrack","moduleName":"Options.Applicative.Types","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["noconstructors",[{"values":[{"sourceSpan":{"start":[20,1],"name":".spago/prelude/v5.0.1/src/Data/Generic/Rep.purs","end":[20,20]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"NoConstructors","moduleName":"Data.Generic.Rep","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A representation for types with no constructors.\n"}],"tag":"SearchResult"}]],["node",[{"values":[{"sourceSpan":{"start":[64,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree.purs","end":[64,44]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"Node","moduleName":"Data.FingerTree","info":{"values":[{"typeArguments":[["v",null],["a",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"Node","moduleName":"Test.Spec.Tree","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"c"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec","Tree"],"Tree"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[3,1],"name":".spago/web-dom/v5.0.0/src/Web/DOM/Internal/Types.purs","end":[3,33]},"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"Node","moduleName":"Web.DOM.Internal.Types","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["node2",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"Node2","moduleName":"Data.FingerTree","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"v"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[79,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree.purs","end":[79,68]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"node2","moduleName":"Data.FingerTree","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"v"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Sequence","Internal"],"Measured"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Node"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["node3",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"Node3","moduleName":"Data.FingerTree","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"v"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[82,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree.purs","end":[82,73]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"node3","moduleName":"Data.FingerTree","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"v"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Sequence","Internal"],"Measured"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Node"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nodeconfignotfound",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"NodeConfigNotFound","moduleName":"Plutip.Types","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nodelist",[{"values":[{"sourceSpan":{"start":[4,1],"name":".spago/web-dom/v5.0.0/src/Web/DOM/Internal/Types.purs","end":[4,37]},"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"NodeList","moduleName":"Web.DOM.Internal.Types","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["nodename",[{"values":[{"sourceSpan":{"start":[69,1],"name":".spago/web-dom/v5.0.0/src/Web/DOM/Node.purs","end":[69,42]},"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"nodeName","moduleName":"Web.DOM.Node","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"For elements this is the tag name, for document types this is the doctype\nname, for processing instructions this is the target, for all other nodes\nit is a string like `\"#text\"`, `\"#comment\", etc. depending on the node\ntype.\n"}],"tag":"SearchResult"}]],["nodes",[{"values":[{"sourceSpan":{"start":[385,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree.purs","end":[385,77]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"nodes","moduleName":"Data.FingerTree","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"v"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Sequence","Internal"],"Measured"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Node"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nodestate",[{"values":[{"sourceSpan":{"start":[102,1],"name":".spago/medea/8b215851959aa8bbf33e6708df6bd683c89d1a5a/src/Data/AcyclicAdjacencyMap.purs","end":[104,11]},"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"NodeState","moduleName":"Data.AcyclicAdjacencyMap","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["nodetodigit",[{"values":[{"sourceSpan":{"start":[85,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree.purs","end":[85,47]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"nodeToDigit","moduleName":"Data.FingerTree","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["v",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"Node"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree","Digit"],"Digit"]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nodetype",[{"values":[{"sourceSpan":{"start":[59,1],"name":".spago/web-dom/v5.0.0/src/Web/DOM/Node.purs","end":[59,40]},"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"nodeType","moduleName":"Web.DOM.Node","info":{"values":[{"type":{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"Partial"],"constraintArgs":[]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]},{"tag":"TypeConstructor","contents":[["Web","DOM","NodeType"],"NodeType"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The type of a node.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[7,1],"name":".spago/web-dom/v5.0.0/src/Web/DOM/NodeType.purs","end":[19,17]},"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"NodeType","moduleName":"Web.DOM.NodeType","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["nodetypeindex",[{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/web-dom/v5.0.0/src/Web/DOM/Node.purs","end":[63,44]},"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"nodeTypeIndex","moduleName":"Web.DOM.Node","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The numeric value for the type of a node.\n"}],"tag":"SearchResult"}]],["nodevalue",[{"values":[{"sourceSpan":{"start":[126,1],"name":".spago/web-dom/v5.0.0/src/Web/DOM/Node.purs","end":[126,43]},"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"nodeValue","moduleName":"Web.DOM.Node","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"If the node type is text, comment, or processing instruction this is\n`Just` the node's data, or `Nothing` in all other cases.\n"}],"tag":"SearchResult"}]],["noflags",[{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/strings/v5.0.0/src/Data/String/Regex/Flags.purs","end":[21,22]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"noFlags","moduleName":"Data.String.Regex.Flags","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","String","Regex","Flags"],"RegexFlags"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"All flags set to false.\n"}],"tag":"SearchResult"}]],["nointersperse",[{"values":[{"sourceSpan":{"start":[431,1],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Builder.purs","end":[431,37]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"noIntersperse","moduleName":"Options.Applicative.Builder","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Disable parsing of regular options after arguments. After a positional\nargument is parsed, all remaining options and arguments will be treated\nas a positional arguments. Not recommended in general as users often\nexpect to be able to freely intersperse regular options and flags within\ncommand line options.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"NoIntersperse","moduleName":"Options.Applicative.Types","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nokey",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"NoKey","moduleName":"Data.Sequence.Internal","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["non",[{"values":[{"sourceSpan":{"start":[43,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Iso.purs","end":[43,47]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"non","moduleName":"Data.Lens.Iso","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Iso'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"If `a1` is obtained from `a` by removing a single value, then\n`Maybe a1` is isomorphic to `a`.\n"}],"tag":"SearchResult"}]],["nonadaasset",[{"values":[{"sourceSpan":{"start":[236,1],"name":"src/Cardano/Types/Value.purs","end":[236,78]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"NonAdaAsset","moduleName":"Cardano.Types.Value","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"NonAdaAsset","moduleName":"Cardano.Types.Value","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"CurrencySymbol"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeConstructor","contents":[["Types","TokenName"],"TokenName"]}]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["noncanceler",[{"values":[{"sourceSpan":{"start":[207,1],"name":".spago/aff/v6.0.0/src/Effect/Aff.purs","end":[207,23]},"score":13,"packageInfo":{"values":["aff"],"tag":"Package"},"name":"nonCanceler","moduleName":"Effect.Aff","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Canceler"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A canceler which does not cancel anything.\n"}],"tag":"SearchResult"}]],["nonce",[{"values":[{"sourceSpan":{"start":[422,1],"name":"src/Cardano/Types/Transaction.purs","end":[422,49]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Nonce","moduleName":"Cardano.Types.Transaction","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[130,1],"name":"src/Serialization/Types.purs","end":[130,34]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Nonce","moduleName":"Serialization.Types","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["nondett",[{"values":[{"sourceSpan":{"start":[242,1],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Internal.purs","end":[242,59]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"NondetT","moduleName":"Options.Applicative.Internal","info":{"values":[{"typeArguments":[["m",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["nondettaltop",[{"values":[{"sourceSpan":{"start":[274,1],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Internal.purs","end":[274,81]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"nondetTAltOp","moduleName":"Options.Applicative.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"NondetT"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"NondetT"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"NondetT"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nondocumenttypechildnode",[{"values":[{"sourceSpan":{"start":[14,1],"name":".spago/web-dom/v5.0.0/src/Web/DOM/NonDocumentTypeChildNode.purs","end":[14,53]},"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"NonDocumentTypeChildNode","moduleName":"Web.DOM.NonDocumentTypeChildNode","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["none",[{"values":[{"sourceSpan":{"start":[93,1],"name":".spago/unfoldable/v5.0.0/src/Data/Unfoldable.purs","end":[93,40]},"score":13,"packageInfo":{"values":["unfoldable"],"tag":"Package"},"name":"none","moduleName":"Data.Unfoldable","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unfoldable"],"Unfoldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The container with no elements - unfolded with zero iterations.\nFor example:\n\n``` purescript\nnone == ([] :: Array Unit)\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[75,1],"name":".spago/node-fs/v6.1.0/src/Node/FS/Perms.purs","end":[75,13]},"score":3,"packageInfo":{"values":["node-fs"],"tag":"Package"},"name":"none","moduleName":"Node.FS.Perms","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Node","FS","Perms"],"Perm"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"No permissions. This is the identity of the `Semiring` operation `(+)`\nfor `Perm`; that is, it is the same as `zero`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["web-events"],"tag":"Package"},"name":"None","moduleName":"Web.Event.EventPhase","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"None","moduleName":"Web.HTML.Event.DataTransfer","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"None","moduleName":"Web.HTML.HTMLTrackElement.ReadyState","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nonelementparentnode",[{"values":[{"sourceSpan":{"start":[13,1],"name":".spago/web-dom/v5.0.0/src/Web/DOM/NonElementParentNode.purs","end":[13,49]},"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"NonElementParentNode","moduleName":"Web.DOM.NonElementParentNode","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["nonempty",[{"values":[{"sourceSpan":{"start":[47,1],"name":".spago/nonempty/v6.1.0/src/Data/NonEmpty.purs","end":[47,37]},"score":10,"packageInfo":{"values":["nonempty"],"tag":"Package"},"name":"NonEmpty","moduleName":"Data.NonEmpty","info":{"values":[{"typeArguments":[["f",null],["a",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A non-empty container of elements of type a.\n\n```purescript\nimport Data.NonEmpty\n\nnonEmptyArray :: NonEmpty Array Int\nnonEmptyArray = NonEmpty 1 [2,3]\n\nimport Data.List(List(..), (:))\n\nnonEmptyList :: NonEmpty List Int\nnonEmptyList = NonEmpty 1 (2 : 3 : Nil)\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":10,"packageInfo":{"values":["nonempty"],"tag":"Package"},"name":"NonEmpty","moduleName":"Data.NonEmpty","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nonemptyarray",[{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/arrays/v6.0.1/src/Data/Array/NonEmpty/Internal.purs","end":[31,50]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"NonEmptyArray","moduleName":"Data.Array.NonEmpty.Internal","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"An array that is known not to be empty.\n\nYou can use the constructor to create a `NonEmptyArray` that isn't\nnon-empty, breaking the guarantee behind this newtype. It is\nprovided as an escape hatch mainly for the `Data.Array.NonEmpty`\nand `Data.Array` modules. Use this at your own risk when you know\nwhat you are doing.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"NonEmptyArray","moduleName":"Data.Array.NonEmpty.Internal","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nonemptylist",[{"values":[{"sourceSpan":{"start":[209,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy/Types.purs","end":[209,63]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"NonEmptyList","moduleName":"Data.List.Lazy.Types","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"NonEmptyList","moduleName":"Data.List.Lazy.Types","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","NonEmpty"],"NonEmpty"]},{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]}]},{"tag":"TypeVar","contents":"a"}]}}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[192,1],"name":".spago/lists/v6.0.1/src/Data/List/Types.purs","end":[192,56]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"NonEmptyList","moduleName":"Data.List.Types","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"NonEmptyList","moduleName":"Data.List.Types","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","NonEmpty"],"NonEmpty"]},{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]}]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nonemptyreplacement",[{"values":[{"sourceSpan":{"start":[53,1],"name":".spago/strings/v5.0.0/src/Data/String/NonEmpty/Internal.purs","end":[53,65]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"NonEmptyReplacement","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A newtype used in cases to specify a non-empty replacement for a pattern.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"NonEmptyReplacement","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nonemptyset",[{"values":[{"sourceSpan":{"start":[45,1],"name":".spago/ordered-collections/v2.0.2/src/Data/Set/NonEmpty.purs","end":[45,44]},"score":5,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"NonEmptySet","moduleName":"Data.Set.NonEmpty","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"`NonEmptySet a` represents a non-empty set of values of type `a`\n"}],"tag":"SearchResult"}]],["nonemptystring",[{"values":[{"sourceSpan":{"start":[28,1],"name":".spago/strings/v5.0.0/src/Data/String/NonEmpty/Internal.purs","end":[28,47]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"NonEmptyString","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A string that is known not to be empty.\n\nYou can use this constructor to create a `NonEmptyString` that isn't\nnon-empty, breaking the guarantee behind this newtype. It is\nprovided as an escape hatch mainly for the `Data.NonEmpty.CodeUnits`\nand `Data.NonEmpty.CodePoints` modules. Use this at your own risk\nwhen you know what you are doing.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"NonEmptyString","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["noneof",[{"values":[{"sourceSpan":{"start":[124,1],"name":".spago/parsing/v7.0.1/src/Text/Parsing/Parser/String.purs","end":[124,67]},"score":0,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"noneOf","moduleName":"Text.Parsing.Parser.String","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Match any BMP `Char` not in the array.\n"}],"tag":"SearchResult"}]],["nonspacingmark",[{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"NonSpacingMark","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["noop",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"NoOp","moduleName":"Plutip.Spawn","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["normal",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["mote"],"tag":"Package"},"name":"Normal","moduleName":"Mote.Description","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["normalize",[{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/node-path/v4.0.0/src/Node/Path.purs","end":[12,49]},"score":2,"packageInfo":{"values":["node-path"],"tag":"Package"},"name":"normalize","moduleName":"Node.Path","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Normalize a string path, taking care of `..` and `.`, duplicated slashes,\netc. If the path contains a trailing slash it is preserved. On Windows\nbackslashes are used.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[147,1],"name":".spago/web-dom/v5.0.0/src/Web/DOM/Node.purs","end":[147,48]},"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"normalize","moduleName":"Web.DOM.Node","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Removes empty text nodes and then combines any remaining text nodes that\nare contiguous.\n"}],"tag":"SearchResult"}]],["normally",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["node-child-process"],"tag":"Package"},"name":"Normally","moduleName":"Node.ChildProcess","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nosource",[{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"NoSource","moduleName":"Web.HTML.HTMLMediaElement.NetworkState","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nostartschema",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"NoStartSchema","moduleName":"Data.Medea.Analysis","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["not",[{"values":[{"sourceSpan":{"start":[97,1],"name":".spago/bigints/v6.0.0/src/Data/BigInt.purs","end":[97,39]},"score":0,"packageInfo":{"values":["bigints"],"tag":"Package"},"name":"not","moduleName":"Data.BigInt","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Invert the bits.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[44,3],"name":".spago/prelude/v5.0.1/src/Data/HeytingAlgebra.purs","end":[44,16]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"not","moduleName":"Data.HeytingAlgebra","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[71,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Bool.purs","end":[71,61]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"Not","moduleName":"Data.Typelevel.Bool","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Typelevel","Bool"],"BoolI"],"constraintArgs":[{"tag":"TypeVar","contents":"b1"}]},{"constraintClass":[["Data","Typelevel","Bool"],"BoolI"],"constraintArgs":[{"tag":"TypeVar","contents":"b2"}]}],"fundeps":[[["b1"],["b2"]],[["b2"],["b1"]]],"arguments":[["b1",null],["b2",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Type level logical not.\n\n`(Not a b) => a -> b` applies the constraint that `a` and `b`\nmust be logical opposites.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[75,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Bool.purs","end":[75,43]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"not","moduleName":"Data.Typelevel.Bool","info":{"values":[{"type":{"tag":"ForAll","contents":["b1",{"tag":"ForAll","contents":["b2",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Typelevel","Bool"],"Not"],"constraintArgs":[{"tag":"TypeVar","contents":"b1"},{"tag":"TypeVar","contents":"b2"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b1"}]},{"tag":"TypeVar","contents":"b2"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[58,1],"name":".spago/typelevel-prelude/v6.0.0/src/Type/Data/Boolean.purs","end":[58,39]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"Not","moduleName":"Type.Data.Boolean","info":{"values":[{"superclasses":[],"fundeps":[[["bool"],["output"]]],"arguments":[["bool",null],["output",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Not a `Boolean`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[62,1],"name":".spago/typelevel-prelude/v6.0.0/src/Type/Data/Boolean.purs","end":[62,55]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"not","moduleName":"Type.Data.Boolean","info":{"values":[{"type":{"tag":"ForAll","contents":["proxy",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["o",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Type","Data","Boolean"],"Not"],"constraintArgs":[{"tag":"TypeVar","contents":"i"},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"proxy"},{"tag":"TypeVar","contents":"i"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"o"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["not'",[{"values":[{"sourceSpan":{"start":[75,1],"name":".spago/quickcheck-combinators/v0.1.3/src/Test/QuickCheck/Combinators.purs","end":[75,35]},"score":0,"packageInfo":{"values":["quickcheck-combinators"],"tag":"Package"},"name":"not'","moduleName":"Test.QuickCheck.Combinators","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Supply a failure message if successful\n"}],"tag":"SearchResult"}]],["notassigned",[{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"NotAssigned","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["notationnode",[{"values":[{"sourceSpan":null,"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"NotationNode","moduleName":"Web.DOM.NodeType","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["note",[{"values":[{"sourceSpan":{"start":[263,1],"name":".spago/either/v5.0.0/src/Data/Either.purs","end":[263,47]},"score":31,"packageInfo":{"values":["either"],"tag":"Package"},"name":"note","moduleName":"Data.Either","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Takes a default and a `Maybe` value, if the value is a `Just`, turn it into\na `Right`, if the value is a `Nothing` use the provided default as a `Left`\n\n```purescript\nnote \"default\" Nothing = Left \"default\"\nnote \"default\" (Just 1) = Right 1\n```\n"}],"tag":"SearchResult"}]],["note'",[{"values":[{"sourceSpan":{"start":[273,1],"name":".spago/either/v5.0.0/src/Data/Either.purs","end":[273,58]},"score":31,"packageInfo":{"values":["either"],"tag":"Package"},"name":"note'","moduleName":"Data.Either","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Similar to `note`, but for use in cases where the default value may be\nexpensive to compute.\n\n```purescript\nnote' (\\_ -> \"default\") Nothing = Left \"default\"\nnote' (\\_ -> \"default\") (Just 1) = Right 1\n```\n"}],"tag":"SearchResult"}]],["notelem",[{"values":[{"sourceSpan":{"start":[267,1],"name":".spago/arrays/v6.0.1/src/Data/Array/NonEmpty.purs","end":[267,61]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"notElem","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[421,1],"name":".spago/arrays/v6.0.1/src/Data/Array.purs","end":[421,53]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"notElem","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns true if the array does not have the given element.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[390,1],"name":".spago/foldable-traversable/v5.0.1/src/Data/Foldable.purs","end":[390,65]},"score":24,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"notElem","moduleName":"Data.Foldable","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether a value is not an element of a data structure.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[278,1],"name":".spago/pipes/v7.0.1/src/Pipes/Prelude.purs","end":[278,78]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"notElem","moduleName":"Pipes.Prelude","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Core"],"Producer"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"notElem returns `False` if p has an element equal to a, `True` otherwise\n"}],"tag":"SearchResult"}]],["notelemof",[{"values":[{"sourceSpan":{"start":[85,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Fold.purs","end":[85,86]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"notElemOf","moduleName":"Data.Lens.Fold","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Fold"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Conj"],"Conj"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Whether a `Fold` not contains a given element.\n"}],"tag":"SearchResult"}]],["noteq",[{"values":[{"sourceSpan":{"start":[35,1],"name":".spago/prelude/v5.0.1/src/Data/Eq.purs","end":[35,45]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"notEq","moduleName":"Data.Eq","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`notEq` tests whether one value is _not equal_ to another. Shorthand for\n`not (eq x y)`.\n"}],"tag":"SearchResult"}]],["noteq1",[{"values":[{"sourceSpan":{"start":[91,1],"name":".spago/prelude/v5.0.1/src/Data/Eq.purs","end":[91,61]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"notEq1","moduleName":"Data.Eq","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq1"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["notfollowedby",[{"values":[{"sourceSpan":{"start":[189,1],"name":".spago/parsing/v7.0.1/src/Text/Parsing/Parser/Combinators.purs","end":[189,76]},"score":0,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"notFollowedBy","moduleName":"Text.Parsing.Parser.Combinators","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Fail if the specified parser matches.\n"}],"tag":"SearchResult"}]],["nothing",[{"values":[{"sourceSpan":null,"score":48,"packageInfo":{"values":["maybe"],"tag":"Package"},"name":"Nothing","moduleName":"Data.Maybe","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["notimplemented",[{"values":[{"sourceSpan":{"start":[188,1],"name":"src/Helpers.purs","end":[188,73]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"notImplemented","moduleName":"Helpers","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","TypeError"],"Warn"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","TypeError"],"Text"]},{"tag":"TypeLevelString","contents":"Function not implemented!"}]}}]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["notjson",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"NotJSON","moduleName":"Data.Medea","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":"We could not parse JSON out of what we were provided.\n"}],"tag":"SearchResult"}]],["notnull",[{"values":[{"sourceSpan":{"start":[54,1],"name":".spago/nullable/v5.0.0/src/Data/Nullable.purs","end":[54,52]},"score":8,"packageInfo":{"values":["nullable"],"tag":"Package"},"name":"notNull","moduleName":"Data.Nullable","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Wrap a non-null value.\n"}],"tag":"SearchResult"}]],["notoneofoptions",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"NotOneOfOptions","moduleName":"Data.Medea","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":"We expected one of several possibilities, but got something that fits -- none.\n"}],"tag":"SearchResult"}]],["notrecord",[{"values":[{"sourceSpan":{"start":[118,3],"name":".spago/prelude/v5.0.1/src/Data/HeytingAlgebra.purs","end":[118,78]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"notRecord","moduleName":"Data.HeytingAlgebra","info":{"values":[{"typeClassArguments":[["rowlist",null],["row",null],["subrow",null]],"typeClass":[["Data","HeytingAlgebra"],"HeytingAlgebraRecord"],"type":{"tag":"ForAll","contents":["rowlist",{"tag":"ForAll","contents":["row",{"tag":"ForAll","contents":["subrow",{"tag":"ForAll","contents":["rlproxy",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebraRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"rowlist"},{"tag":"TypeVar","contents":"row"},{"tag":"TypeVar","contents":"subrow"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"rlproxy"},{"tag":"TypeVar","contents":"rowlist"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"subrow"}]}]}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["notutf8",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"NotUtf8","moduleName":"Data.Medea.Loader","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":"The data provided wasn't UTF-8. \n"}],"tag":"SearchResult"}]],["novalidate",[{"values":[{"sourceSpan":{"start":[77,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLFormElement.purs","end":[77,63]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"noValidate","moduleName":"Web.HTML.HTMLFormElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLFormElement"],"HTMLFormElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["november",[{"values":[{"sourceSpan":null,"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"November","moduleName":"Data.Date.Component","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["now",[{"values":[{"sourceSpan":{"start":[168,1],"name":".spago/js-date/v7.0.0/src/Data/JSDate.purs","end":[168,36]},"score":3,"packageInfo":{"values":["js-date"],"tag":"Package"},"name":"now","moduleName":"Data.JSDate","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","JSDate"],"JSDate"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Gets a `JSDate` value for the date and time according to the current\nmachine's clock.\n\nUnless a `JSDate` is required specifically, consider using the functions in\n`Effect.Now` instead.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/now/v5.0.0/src/Effect/Now.purs","end":[18,37]},"score":2,"packageInfo":{"values":["now"],"tag":"Package"},"name":"now","moduleName":"Effect.Now","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","DateTime","Instant"],"Instant"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Gets an `Instant` value for the date and time according to the current\nmachine’s clock.\n"}],"tag":"SearchResult"}]],["nowdate",[{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/now/v5.0.0/src/Effect/Now.purs","end":[26,23]},"score":2,"packageInfo":{"values":["now"],"tag":"Package"},"name":"nowDate","moduleName":"Effect.Now","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Gets the date according to the current machine’s clock.\n"}],"tag":"SearchResult"}]],["nowdatetime",[{"values":[{"sourceSpan":{"start":[22,1],"name":".spago/now/v5.0.0/src/Effect/Now.purs","end":[22,31]},"score":2,"packageInfo":{"values":["now"],"tag":"Package"},"name":"nowDateTime","moduleName":"Effect.Now","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","DateTime"],"DateTime"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Gets a `DateTime` value for the date and time according to the current\nmachine’s clock.\n"}],"tag":"SearchResult"}]],["nowtime",[{"values":[{"sourceSpan":{"start":[30,1],"name":".spago/now/v5.0.0/src/Effect/Now.purs","end":[30,23]},"score":2,"packageInfo":{"values":["now"],"tag":"Package"},"name":"nowTime","moduleName":"Effect.Now","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Time"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Gets the time according to the current machine’s clock.\n"}],"tag":"SearchResult"}]],["mpssymbol",[{"values":[{"sourceSpan":{"start":[692,1],"name":"src/Cardano/Types/Value.purs","end":[692,55]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"mpsSymbol","moduleName":"Cardano.Types.Value","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","Scripts"],"MintingPolicyHash"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"CurrencySymbol"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The currency symbol of a monetary policy hash\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[68,1],"name":"src/Plutus/Types/CurrencySymbol.purs","end":[68,55]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"mpsSymbol","moduleName":"Plutus.Types.CurrencySymbol","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","Scripts"],"MintingPolicyHash"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Plutus","Types","CurrencySymbol"],"CurrencySymbol"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The currency symbol of a monetary policy hash.\n"}],"tag":"SearchResult"}]],["jsdate",[{"values":[{"sourceSpan":{"start":[65,1],"name":".spago/js-date/v7.0.0/src/Data/JSDate.purs","end":[65,35]},"score":3,"packageInfo":{"values":["js-date"],"tag":"Package"},"name":"JSDate","moduleName":"Data.JSDate","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"The type of JavaScript `Date` objects.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[124,1],"name":".spago/js-date/v7.0.0/src/Data/JSDate.purs","end":[133,12]},"score":3,"packageInfo":{"values":["js-date"],"tag":"Package"},"name":"jsdate","moduleName":"Data.JSDate","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["year",{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"tag":"RCons","contents":["month",{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"tag":"RCons","contents":["day",{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"tag":"RCons","contents":["hour",{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"tag":"RCons","contents":["minute",{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"tag":"RCons","contents":["second",{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"tag":"RCons","contents":["millisecond",{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]}]}]},{"tag":"TypeConstructor","contents":[["Data","JSDate"],"JSDate"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a new `JSDate` from UTC component values. If any of the values\nare `NaN` the resulting date will be invalid.\n"}],"tag":"SearchResult"}]],["jsdatelocal",[{"values":[{"sourceSpan":{"start":[137,1],"name":".spago/js-date/v7.0.0/src/Data/JSDate.purs","end":[146,19]},"score":3,"packageInfo":{"values":["js-date"],"tag":"Package"},"name":"jsdateLocal","moduleName":"Data.JSDate","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["year",{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"tag":"RCons","contents":["month",{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"tag":"RCons","contents":["day",{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"tag":"RCons","contents":["hour",{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"tag":"RCons","contents":["minute",{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"tag":"RCons","contents":["second",{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"tag":"RCons","contents":["millisecond",{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","JSDate"],"JSDate"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a new `JSDate` from component values using the current machine's\nlocale. If any of the values are `NaN` the resulting date will be invalid.\n"}],"tag":"SearchResult"}]],["jsdatetag",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["monad-logger"],"tag":"Package"},"name":"JSDateTag","moduleName":"Data.Log.Tag","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Data","JSDate"],"JSDate"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/monad-logger/v1.3.1/src/Data/Log/Tag.purs","end":[44,40]},"score":0,"packageInfo":{"values":["monad-logger"],"tag":"Package"},"name":"jsDateTag","moduleName":"Data.Log.Tag","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","JSDate"],"JSDate"]}]},{"tag":"TypeConstructor","contents":[["Data","Log","Tag"],"TagSet"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["jserror",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"JsError","moduleName":"QueryM","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["json",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["affjax"],"tag":"Package"},"name":"Json","moduleName":"Affjax.RequestBody","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[42,1],"name":".spago/affjax/v12.0.0/src/Affjax/RequestBody.purs","end":[42,28]},"score":0,"packageInfo":{"values":["affjax"],"tag":"Package"},"name":"json","moduleName":"Affjax.RequestBody","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","contents":[["Affjax","RequestBody"],"RequestBody"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["affjax"],"tag":"Package"},"name":"Json","moduleName":"Affjax.ResponseFormat","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},null]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/affjax/v12.0.0/src/Affjax/ResponseFormat.purs","end":[31,28]},"score":0,"packageInfo":{"values":["affjax"],"tag":"Package"},"name":"json","moduleName":"Affjax.ResponseFormat","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Affjax","ResponseFormat"],"ResponseFormat"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[53,1],"name":".spago/argonaut-core/v6.0.0/src/Data/Argonaut/Core.purs","end":[53,33]},"score":4,"packageInfo":{"values":["argonaut-core"],"tag":"Package"},"name":"Json","moduleName":"Data.Argonaut.Core","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"The type of JSON data. The underlying representation is the same as what\nwould be returned from JavaScript's `JSON.parse` function; that is,\nordinary JavaScript booleans, strings, arrays, objects, etc.\n"}],"tag":"SearchResult"}]],["jsonarray",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"JSONArray","moduleName":"Data.Medea.JSONType","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["jsonboolean",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"JSONBoolean","moduleName":"Data.Medea.JSONType","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["jsondecodeerror",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"JsonDecodeError","moduleName":"Cardano.TextEnvelope","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Data","Argonaut","Decode","Error"],"JsonDecodeError"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/argonaut-codecs/v8.1.0/src/Data/Argonaut/Decode/Error.purs","end":[17,17]},"score":2,"packageInfo":{"values":["argonaut-codecs"],"tag":"Package"},"name":"JsonDecodeError","moduleName":"Data.Argonaut.Decode.Error","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Error type for failures while decoding.\n"}],"tag":"SearchResult"}]],["jsonemptyarray",[{"values":[{"sourceSpan":{"start":[223,1],"name":".spago/argonaut-core/v6.0.0/src/Data/Argonaut/Core.purs","end":[223,23]},"score":4,"packageInfo":{"values":["argonaut-core"],"tag":"Package"},"name":"jsonEmptyArray","moduleName":"Data.Argonaut.Core","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"An empty array represented as `Json`\n"}],"tag":"SearchResult"}]],["jsonemptyobject",[{"values":[{"sourceSpan":{"start":[227,1],"name":".spago/argonaut-core/v6.0.0/src/Data/Argonaut/Core.purs","end":[227,24]},"score":4,"packageInfo":{"values":["argonaut-core"],"tag":"Package"},"name":"jsonEmptyObject","moduleName":"Data.Argonaut.Core","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"An empty object represented as `Json`\n"}],"tag":"SearchResult"}]],["jsonemptystring",[{"values":[{"sourceSpan":{"start":[219,1],"name":".spago/argonaut-core/v6.0.0/src/Data/Argonaut/Core.purs","end":[219,24]},"score":4,"packageInfo":{"values":["argonaut-core"],"tag":"Package"},"name":"jsonEmptyString","moduleName":"Data.Argonaut.Core","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"An empty string represented as `Json`\n"}],"tag":"SearchResult"}]],["jsonerror",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"JsonError","moduleName":"QueryM","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Data","Argonaut","Decode","Error"],"JsonDecodeError"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["jsonfalse",[{"values":[{"sourceSpan":{"start":[211,1],"name":".spago/argonaut-core/v6.0.0/src/Data/Argonaut/Core.purs","end":[211,18]},"score":4,"packageInfo":{"values":["argonaut-core"],"tag":"Package"},"name":"jsonFalse","moduleName":"Data.Argonaut.Core","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The false boolean value represented as `Json`\n"}],"tag":"SearchResult"}]],["jsonformatter",[{"values":[{"sourceSpan":{"start":[33,1],"name":".spago/monad-logger/v1.3.1/src/Data/Log/Formatter/JSON.purs","end":[33,35]},"score":0,"packageInfo":{"values":["monad-logger"],"tag":"Package"},"name":"jsonFormatter","moduleName":"Data.Log.Formatter.JSON","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Log","Message"],"Message"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["jsonnull",[{"values":[{"sourceSpan":{"start":[204,1],"name":".spago/argonaut-core/v6.0.0/src/Data/Argonaut/Core.purs","end":[204,32]},"score":4,"packageInfo":{"values":["argonaut-core"],"tag":"Package"},"name":"jsonNull","moduleName":"Data.Argonaut.Core","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The JSON null value represented as `Json`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"JSONNull","moduleName":"Data.Medea.JSONType","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["jsonnumber",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"JSONNumber","moduleName":"Data.Medea.JSONType","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["jsonobject",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"JSONObject","moduleName":"Data.Medea.JSONType","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["jsonparser",[{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/argonaut-core/v6.0.0/src/Data/Argonaut/Parser.purs","end":[11,43]},"score":4,"packageInfo":{"values":["argonaut-core"],"tag":"Package"},"name":"jsonParser","moduleName":"Data.Argonaut.Parser","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parse a JSON string, constructing the `Json` value described by the string.\nTo convert a string into a `Json` string, see `fromString`.\n"}],"tag":"SearchResult"}]],["jsonprim",[{"values":[{"sourceSpan":{"start":[51,1],"name":".spago/argonaut-traversals/v9.0.0/src/Data/Argonaut/JCursor.purs","end":[57,8]},"score":1,"packageInfo":{"values":["argonaut-traversals"],"tag":"Package"},"name":"JsonPrim","moduleName":"Data.Argonaut.JCursor","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["argonaut-traversals"],"tag":"Package"},"name":"JsonPrim","moduleName":"Data.Argonaut.JCursor","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["jsonsingletonarray",[{"values":[{"sourceSpan":{"start":[231,1],"name":".spago/argonaut-core/v6.0.0/src/Data/Argonaut/Core.purs","end":[231,35]},"score":4,"packageInfo":{"values":["argonaut-core"],"tag":"Package"},"name":"jsonSingletonArray","moduleName":"Data.Argonaut.Core","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a `Json` array value containing only the provided value\n"}],"tag":"SearchResult"}]],["jsonsingletonobject",[{"values":[{"sourceSpan":{"start":[235,1],"name":".spago/argonaut-core/v6.0.0/src/Data/Argonaut/Core.purs","end":[235,46]},"score":4,"packageInfo":{"values":["argonaut-core"],"tag":"Package"},"name":"jsonSingletonObject","moduleName":"Data.Argonaut.Core","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a `Json` object value containing only the provided key and value\n"}],"tag":"SearchResult"}]],["jsonstring",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"JSONString","moduleName":"Data.Medea.JSONType","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["jsontoaeson",[{"values":[{"sourceSpan":{"start":[206,1],"name":".spago/aeson/286862a975f4bafbef15540c365bbbb0480e0bf7/src/Aeson.purs","end":[206,29]},"score":0,"packageInfo":{"values":["aeson"],"tag":"Package"},"name":"jsonToAeson","moduleName":"Aeson","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","contents":[["Aeson"],"Aeson"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Recodes Json to Aeson.\nNOTE. The operation is costly as its stringifies given Json\n      and reparses resulting string as Aeson.\n"}],"tag":"SearchResult"}]],["jsontrue",[{"values":[{"sourceSpan":{"start":[207,1],"name":".spago/argonaut-core/v6.0.0/src/Data/Argonaut/Core.purs","end":[207,17]},"score":4,"packageInfo":{"values":["argonaut-core"],"tag":"Package"},"name":"jsonTrue","moduleName":"Data.Argonaut.Core","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The true boolean value represented as `Json`\n"}],"tag":"SearchResult"}]],["jsontype",[{"values":[{"sourceSpan":{"start":[6,1],"name":".spago/medea/8b215851959aa8bbf33e6708df6bd683c89d1a5a/src/Data/Medea/JSONType.purs","end":[12,15]},"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"JSONType","moduleName":"Data.Medea.JSONType","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["jsonwspcall",[{"values":[{"sourceSpan":{"start":[80,1],"name":"src/QueryM/JsonWsp.purs","end":[81,48]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"JsonWspCall","moduleName":"QueryM.JsonWsp","info":{"values":[{"typeArguments":[["i",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}],["o",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A wrapper for tying arguments and response types to request building.\n"}],"tag":"SearchResult"}]],["jsonwsprequest",[{"values":[{"sourceSpan":{"start":[54,1],"name":"src/QueryM/DatumCacheWsp.purs","end":[61,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"JsonWspRequest","moduleName":"QueryM.DatumCacheWsp","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["type",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["version",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["servicename",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["methodname",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["args",{"tag":"TypeVar","contents":"a"},{"tag":"RCons","contents":["mirror",{"tag":"TypeConstructor","contents":[["QueryM","UniqueId"],"ListenerId"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]},"arguments":[["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[38,1],"name":"src/QueryM/JsonWsp.purs","end":[45,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"JsonWspRequest","moduleName":"QueryM.JsonWsp","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["type",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["version",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["servicename",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["methodname",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["args",{"tag":"TypeVar","contents":"a"},{"tag":"RCons","contents":["mirror",{"tag":"TypeConstructor","contents":[["QueryM","UniqueId"],"ListenerId"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]},"arguments":[["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Structure of all json wsp websocket requests\n"}],"tag":"SearchResult"}]],["jsonwspresponse",[{"values":[{"sourceSpan":{"start":[63,1],"name":"src/QueryM/DatumCacheWsp.purs","end":[71,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"JsonWspResponse","moduleName":"QueryM.DatumCacheWsp","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["type",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["version",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["servicename",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["methodname",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["result",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Aeson"],"Aeson"]}]},{"tag":"RCons","contents":["fault",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["QueryM","DatumCacheWsp"],"WspFault"]}]},{"tag":"RCons","contents":["reflection",{"tag":"TypeConstructor","contents":[["QueryM","UniqueId"],"ListenerId"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[67,1],"name":"src/QueryM/JsonWsp.purs","end":[76,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"JsonWspResponse","moduleName":"QueryM.JsonWsp","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["type",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["version",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["servicename",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["methodname",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["result",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"RCons","contents":["fault",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Aeson"],"Aeson"]}]},{"tag":"RCons","contents":["reflection",{"tag":"TypeConstructor","contents":[["QueryM","UniqueId"],"ListenerId"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]}]},"arguments":[["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Structure of all json wsp websocket responses\n"}],"tag":"SearchResult"}]],["jsonzero",[{"values":[{"sourceSpan":{"start":[215,1],"name":".spago/argonaut-core/v6.0.0/src/Data/Argonaut/Core.purs","end":[215,17]},"score":4,"packageInfo":{"values":["argonaut-core"],"tag":"Package"},"name":"jsonZero","moduleName":"Data.Argonaut.Core","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The number zero represented as `Json`\n"}],"tag":"SearchResult"}]],["jswebsocket",[{"values":[{"sourceSpan":{"start":[23,1],"name":"src/JsWebSocket.purs","end":[23,40]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"JsWebSocket","moduleName":"JsWebSocket","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["it",[{"values":[{"sourceSpan":{"start":[225,1],"name":".spago/spec/v5.0.1/src/Test/Spec.purs","end":[231,24]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"it","moduleName":"Test.Spec","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["arg",{"tag":"ForAll","contents":["g",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","Spec"],"Example"],"constraintArgs":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"arg"},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec"],"SpecT"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"arg"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a spec with a description.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[253,1],"name":".spago/test-unit/v16.0.0/src/Test/Unit.purs","end":[253,34]},"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"it","moduleName":"Test.Unit","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`it` is an alias for `test` for BDD enthusiasts.\n"}],"tag":"SearchResult"}]],["italic",[{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"Italic","moduleName":"Ansi.Codes","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[36,1],"name":".spago/ansi/v6.1.0/src/Ansi/Output.purs","end":[36,37]},"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"italic","moduleName":"Ansi.Output","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"GraphicsParam"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["item",[{"values":[{"sourceSpan":{"start":[66,1],"name":".spago/spec/v5.0.1/src/Test/Spec/Tree.purs","end":[70,4]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"Item","moduleName":"Test.Spec.Tree","info":{"values":[{"typeArguments":[["m",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"Item","moduleName":"Test.Spec.Tree","info":{"values":[{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["isFocused",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["isParallelizable",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"RCons","contents":["example",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec","Tree"],"ActionWith"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"REmpty","contents":{}}]}]}]}]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/web-dom/v5.0.0/src/Web/DOM/DOMTokenList.purs","end":[31,53]},"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"item","moduleName":"Web.DOM.DOMTokenList","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","DOMTokenList"],"DOMTokenList"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[25,1],"name":".spago/web-dom/v5.0.0/src/Web/DOM/HTMLCollection.purs","end":[25,56]},"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"item","moduleName":"Web.DOM.HTMLCollection","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"HTMLCollection"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Element"]}]}}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The element in a HTMLCollection at the specified index, or Nothing if no such\nelement exists.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/web-dom/v5.0.0/src/Web/DOM/NodeList.purs","end":[24,47]},"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"item","moduleName":"Web.DOM.NodeList","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"NodeList"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]}}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The item in a NodeList at the specified index, or Nothing if no such node\nexists.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/web-file/v3.0.0/src/Web/File/FileList.purs","end":[24,38]},"score":2,"packageInfo":{"values":["web-file"],"tag":"Package"},"name":"item","moduleName":"Web.File.FileList","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","File","FileList"],"FileList"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","File","File"],"File"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get `File` at the certain position\n"}],"tag":"SearchResult"}]],["items",[{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/web-file/v3.0.0/src/Web/File/FileList.purs","end":[27,54]},"score":2,"packageInfo":{"values":["web-file"],"tag":"Package"},"name":"items","moduleName":"Web.File.FileList","info":{"values":[{"type":{"tag":"ForAll","contents":["t",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unfoldable"],"Unfoldable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","File","FileList"],"FileList"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeConstructor","contents":[["Web","File","File"],"File"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[38,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Event/DataTransfer.purs","end":[38,61]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"items","moduleName":"Web.HTML.Event.DataTransfer","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Event","DataTransfer"],"DataTransfer"]}]},{"tag":"TypeConstructor","contents":[["Web","HTML","Event","DataTransfer","DataTransferItem"],"DataTransferItemList"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns a `DataTransferItemList` object which is a list of all of the drag\ndata.\n"}],"tag":"SearchResult"}]],["iterate",[{"values":[{"sourceSpan":{"start":[134,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/List/Trans.purs","end":[134,61]},"score":19,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"iterate","moduleName":"Control.Monad.List.Trans","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Generate an infinite list by iterating a function.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[37,1],"name":".spago/arrays/v6.0.1/src/Data/Array/ST/Iterator.purs","end":[37,69]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"iterate","moduleName":"Data.Array.ST.Iterator","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","ST","Iterator"],"Iterator"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST","Internal"],"ST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST","Internal"],"ST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Perform an action once for each item left in an iterator. If the action\nitself also advances the same iterator, `iterate` will miss those items\nout.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[54,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy/NonEmpty.purs","end":[54,53]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"iterate","moduleName":"Data.List.Lazy.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[192,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy.purs","end":[192,45]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"iterate","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a list by iterating a function\n"}],"tag":"SearchResult"}]],["iterator",[{"values":[{"sourceSpan":{"start":[25,1],"name":".spago/arrays/v6.0.1/src/Data/Array/ST/Iterator.purs","end":[25,60]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"Iterator","moduleName":"Data.Array.ST.Iterator","info":{"values":[{"typeArguments":[["r",null],["a",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"This type provides a slightly easier way of iterating over an array's\nelements in an STArray computation, without having to keep track of\nindices.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[30,1],"name":".spago/arrays/v6.0.1/src/Data/Array/ST/Iterator.purs","end":[30,64]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"iterator","moduleName":"Data.Array.ST.Iterator","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST","Internal"],"ST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","ST","Iterator"],"Iterator"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Make an Iterator given an indexing function into an array (or anything\nelse). If `xs :: Array a`, the standard way to create an iterator over\n`xs` is to use `iterator (xs !! _)`, where `(!!)` comes from `Data.Array`.\n"}],"tag":"SearchResult"}]],["itolistof",[{"values":[{"sourceSpan":{"start":[265,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Fold.purs","end":[269,22]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"itoListOf","moduleName":"Data.Lens.Fold","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"IndexedFold"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Endo"],"Endo"]},{"tag":"TypeConstructor","contents":[["Prim"],"Function"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]}}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Collects the foci of an `IndexedFold` into a list.\n"}],"tag":"SearchResult"}]],["itonly",[{"values":[{"sourceSpan":{"start":[242,1],"name":".spago/spec/v5.0.1/src/Test/Spec.purs","end":[249,24]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"itOnly","moduleName":"Test.Spec","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["arg",{"tag":"ForAll","contents":["g",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","Spec"],"FocusWarning"],"constraintArgs":[]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","Spec"],"Example"],"constraintArgs":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"arg"},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec"],"SpecT"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"arg"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a spec with a description and mark it as the only one to\nbe run. (useful for quickly narrowing down on a single test)\n"}],"tag":"SearchResult"}]],["itraversed",[{"values":[{"sourceSpan":{"start":[46,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Indexed.purs","end":[49,40]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"itraversed","moduleName":"Data.Lens.Indexed","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","TraversableWithIndex"],"TraversableWithIndex"],"constraintArgs":[{"tag":"TypeVar","contents":"i"},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"IndexedTraversal"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Traverses over a `TraversableWithIndex` container.\n"}],"tag":"SearchResult"}]],["itraverseof",[{"values":[{"sourceSpan":{"start":[131,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Traversal.purs","end":[136,9]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"itraverseOf","moduleName":"Data.Lens.Traversal","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"IndexedOptic"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Profunctor","Star"],"Star"]},{"tag":"TypeVar","contents":"f"}]}}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"t"}]}]}]}]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Turn a pure profunctor `IndexedTraversal` into a `lens`-like `IndexedTraversal`.\n"}],"tag":"SearchResult"}]],["itraverseof_",[{"values":[{"sourceSpan":{"start":[273,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Fold.purs","end":[278,12]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"itraverseOf_","moduleName":"Data.Lens.Fold","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"IndexedFold"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Endo"],"Endo"]},{"tag":"TypeConstructor","contents":[["Prim"],"Function"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"r"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Traverse the foci of an `IndexedFold`, discarding the results.\n"}],"tag":"SearchResult"}]],["hull",[{"values":[{"sourceSpan":{"start":[399,1],"name":"src/Types/Interval.purs","end":[399,76]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"hull","moduleName":"Types.Interval","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Types","Interval"],"Interval"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Types","Interval"],"Interval"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Types","Interval"],"Interval"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`hull a b` is the smallest interval containing `a` and `b`.\n"}],"tag":"SearchResult"}]],["hush",[{"values":[{"sourceSpan":{"start":[283,1],"name":".spago/either/v5.0.0/src/Data/Either.purs","end":[283,42]},"score":31,"packageInfo":{"values":["either"],"tag":"Package"},"name":"hush","moduleName":"Data.Either","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Turns an `Either` into a `Maybe`, by throwing eventual `Left` values away and converting\nthem into `Nothing`. `Right` values get turned into `Just`s.\n\n```purescript\nhush (Left \"ParseError\") = Nothing\nhush (Right 42) = Just 42\n```\n"}],"tag":"SearchResult"}]],["exactdate",[{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/datetime/v5.0.2/src/Data/Date.purs","end":[41,48]},"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"exactDate","moduleName":"Data.Date","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date","Component"],"Year"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date","Component"],"Month"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date","Component"],"Day"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a date from year, month, and day components. The result will be\n`Nothing` if the provided values result in an invalid date.\n"}],"tag":"SearchResult"}]],["example",[{"values":[{"sourceSpan":{"start":[133,1],"name":".spago/spec/v5.0.1/src/Test/Spec.purs","end":[134,65]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"Example","moduleName":"Test.Spec","info":{"values":[{"superclasses":[],"fundeps":[[["t"],["arg"]],[["t"],["m"]]],"arguments":[["t",null],["arg",null],["m",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["exampleurl",[{"values":[{"sourceSpan":{"start":[48,1],"name":"test/E2E/Helpers.purs","end":[48,37]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"exampleUrl","moduleName":"Test.E2E.Helpers","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Toppokki"],"URL"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["except",[{"values":[{"sourceSpan":{"start":[51,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/Except/Trans.purs","end":[51,69]},"score":19,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"except","moduleName":"Control.Monad.Except.Trans","info":{"values":[{"type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Construct a computation in the `ExceptT` transformer from an `Either` value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[35,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/Except.purs","end":[35,35]},"score":19,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"Except","moduleName":"Control.Monad.Except","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},"arguments":[["e",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A parametrizable exception monad; computations are either exceptions or\npure values. If an exception is thrown (see `throwError`), the computation\nterminates with that value. Exceptions may also be caught with `catchError`,\nallowing the computation to resume and exit successfully.\n\nThe type parameter `e` is the type of exceptions, and `a` is the type\nof successful results.\n\nA mechanism for trying many different computations until one succeeds is\nprovided via the `Alt` instance, specifically the `(<|>)` function.\nThe first computation to succeed is returned; if all fail, the exceptions\nare combined using their `Semigroup` instance. The `Plus` instance goes\nfurther and adds the possibility of a computation failing with an 'empty'\nexception; naturally, this requires the stronger constraint of a `Monoid`\ninstance for the exception type.\n"}],"tag":"SearchResult"}]],["exceptt",[{"values":[{"sourceSpan":{"start":[33,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/Except/Trans.purs","end":[33,49]},"score":19,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"ExceptT","moduleName":"Control.Monad.Except.Trans","info":{"values":[{"typeArguments":[["e",null],["m",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A monad transformer which adds exceptions to other monads, in the same way\nas `Except`. As before, `e` is the type of exceptions, and `a` is the type\nof successful results. The new type parameter `m` is the inner monad that\ncomputations run in.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":19,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"ExceptT","moduleName":"Control.Monad.Except.Trans","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["exceptv",[{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/checked-exceptions/v3.1.1/src/Control/Monad/Except/Checked.purs","end":[24,41]},"score":0,"packageInfo":{"values":["checked-exceptions"],"tag":"Package"},"name":"ExceptV","moduleName":"Control.Monad.Except.Checked","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"exc"}]}}]},"arguments":[["exc",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["exchange",[{"values":[{"sourceSpan":{"start":[9,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Internal/Exchange.purs","end":[9,51]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"Exchange","moduleName":"Data.Lens.Internal.Exchange","info":{"values":[{"typeArguments":[["a",null],["b",null],["s",null],["t",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The `Exchange` profunctor characterizes an `Iso`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"Exchange","moduleName":"Data.Lens.Internal.Exchange","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"t"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["exec",[{"values":[{"sourceSpan":{"start":[290,1],"name":".spago/node-child-process/v7.1.0/src/Node/ChildProcess.purs","end":[294,25]},"score":0,"packageInfo":{"values":["node-child-process"],"tag":"Package"},"name":"exec","moduleName":"Node.ChildProcess","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","ChildProcess"],"ExecOptions"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","ChildProcess"],"ExecResult"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Node","ChildProcess"],"ChildProcess"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Similar to `spawn`, except that this variant will:\n* run the given command with the shell,\n* buffer output, and wait until the process has exited before calling the\n  callback.\n\nNote that the child process will be killed if the amount of output exceeds\na certain threshold (the default is defined by Node.js).\n"}],"tag":"SearchResult"}]],["execargv",[{"values":[{"sourceSpan":{"start":[96,1],"name":".spago/node-process/v8.2.0/src/Node/Process.purs","end":[96,34]},"score":2,"packageInfo":{"values":["node-process"],"tag":"Package"},"name":"execArgv","moduleName":"Node.Process","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Node-specific options passed to the `node` executable.\n"}],"tag":"SearchResult"}]],["execfile",[{"values":[{"sourceSpan":{"start":[311,1],"name":".spago/node-child-process/v7.1.0/src/Node/ChildProcess.purs","end":[316,25]},"score":0,"packageInfo":{"values":["node-child-process"],"tag":"Package"},"name":"execFile","moduleName":"Node.ChildProcess","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","ChildProcess"],"ExecOptions"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","ChildProcess"],"ExecResult"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Node","ChildProcess"],"ChildProcess"]}]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Like `exec`, except instead of using a shell, it passes the arguments\ndirectly to the specified command.\n"}],"tag":"SearchResult"}]],["execfilesync",[{"values":[{"sourceSpan":{"start":[400,1],"name":".spago/node-child-process/v7.1.0/src/Node/ChildProcess.purs","end":[404,19]},"score":0,"packageInfo":{"values":["node-child-process"],"tag":"Package"},"name":"execFileSync","moduleName":"Node.ChildProcess","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","ChildProcess"],"ExecSyncOptions"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Generally identical to `execFile`, with the exception that\nthe method will not return until the child process has fully closed.\nReturns: The stdout from the command.\n"}],"tag":"SearchResult"}]],["execoptions",[{"values":[{"sourceSpan":{"start":[349,1],"name":".spago/node-child-process/v7.1.0/src/Node/ChildProcess.purs","end":[359,4]},"score":0,"packageInfo":{"values":["node-child-process"],"tag":"Package"},"name":"ExecOptions","moduleName":"Node.ChildProcess","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["cwd",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["env",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Foreign","Object"],"Object"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]},{"tag":"RCons","contents":["encoding",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Node","Encoding"],"Encoding"]}]},{"tag":"RCons","contents":["shell",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["timeout",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"RCons","contents":["maxBuffer",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["killSignal",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Posix","Signal"],"Signal"]}]},{"tag":"RCons","contents":["uid",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Posix"],"Uid"]}]},{"tag":"RCons","contents":["gid",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Posix"],"Gid"]}]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Configuration of `exec`. Fields set to `Nothing`\nwill use the node defaults.\n"}],"tag":"SearchResult"}]],["execparser",[{"values":[{"sourceSpan":{"start":[100,1],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Extra.purs","end":[100,49]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"execParser","moduleName":"Options.Applicative.Extra","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Run a program description.\n\nParse command line arguments. Display help text and exit if any parse error\noccurs.\n"}],"tag":"SearchResult"}]],["execparserpure",[{"values":[{"sourceSpan":{"start":[139,1],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Extra.purs","end":[142,33]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"execParserPure","moduleName":"Options.Applicative.Extra","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserResult"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The most general way to run a program description in pure code.\n"}],"tag":"SearchResult"}]],["execpath",[{"values":[{"sourceSpan":{"start":[101,1],"name":".spago/node-process/v8.2.0/src/Node/Process.purs","end":[101,26]},"score":2,"packageInfo":{"values":["node-process"],"tag":"Package"},"name":"execPath","moduleName":"Node.Process","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The absolute pathname of the `node` executable that started the\nprocess.\n"}],"tag":"SearchResult"}]],["execresult",[{"values":[{"sourceSpan":{"start":[376,1],"name":".spago/node-child-process/v7.1.0/src/Node/ChildProcess.purs","end":[380,4]},"score":0,"packageInfo":{"values":["node-child-process"],"tag":"Package"},"name":"ExecResult","moduleName":"Node.ChildProcess","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["stderr",{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]},{"tag":"RCons","contents":["stdout",{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]},{"tag":"RCons","contents":["error",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"tag":"REmpty","contents":{}}]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"The combined output of a process calld with `exec`.\n"}],"tag":"SearchResult"}]],["execrws",[{"values":[{"sourceSpan":{"start":[45,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/RWS.purs","end":[45,62]},"score":19,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"execRWS","moduleName":"Control.Monad.RWS","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS"],"RWS"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"w"}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Run a computation in the `RWS` monad, discarding the result\n"}],"tag":"SearchResult"}]],["execrwst",[{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/RWS/Trans.purs","end":[41,83]},"score":19,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"execRWST","moduleName":"Control.Monad.RWS.Trans","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","RWS","Trans"],"RWST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"w"}]}}]}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Run a computation in the `RWST` monad, discarding the result.\n"}],"tag":"SearchResult"}]],["execstate",[{"values":[{"sourceSpan":{"start":[36,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/State.purs","end":[36,45]},"score":19,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"execState","moduleName":"Control.Monad.State","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State"],"State"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Run a computation in the `State` monad, discarding the result\n"}],"tag":"SearchResult"}]],["execstatet",[{"values":[{"sourceSpan":{"start":[46,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/State/Trans.purs","end":[46,66]},"score":19,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"execStateT","moduleName":"Control.Monad.State.Trans","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"s"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Run a computation in the `StateT` monad discarding the result.\n"}],"tag":"SearchResult"}]],["execsync",[{"values":[{"sourceSpan":{"start":[385,1],"name":".spago/node-child-process/v7.1.0/src/Node/ChildProcess.purs","end":[388,19]},"score":0,"packageInfo":{"values":["node-child-process"],"tag":"Package"},"name":"execSync","moduleName":"Node.ChildProcess","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","ChildProcess"],"ExecSyncOptions"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Generally identical to `exec`, with the exception that\nthe method will not return until the child process has fully closed.\nReturns: The stdout from the command.\n"}],"tag":"SearchResult"}]],["execsyncoptions",[{"values":[{"sourceSpan":{"start":[429,1],"name":".spago/node-child-process/v7.1.0/src/Node/ChildProcess.purs","end":[439,4]},"score":0,"packageInfo":{"values":["node-child-process"],"tag":"Package"},"name":"ExecSyncOptions","moduleName":"Node.ChildProcess","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["cwd",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["input",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["stdio",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Node","ChildProcess"],"StdIOBehaviour"]}]}}]},{"tag":"RCons","contents":["env",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Foreign","Object"],"Object"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]},{"tag":"RCons","contents":["timeout",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"RCons","contents":["maxBuffer",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["killSignal",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Posix","Signal"],"Signal"]}]},{"tag":"RCons","contents":["uid",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Posix"],"Uid"]}]},{"tag":"RCons","contents":["gid",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Posix"],"Gid"]}]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["execute",[{"values":[{"sourceSpan":{"start":[87,1],"name":".spago/node-fs/v6.1.0/src/Node/FS/Perms.purs","end":[87,16]},"score":3,"packageInfo":{"values":["node-fs"],"tag":"Package"},"name":"execute","moduleName":"Node.FS.Perms","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Node","FS","Perms"],"Perm"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The \"executable\" permission.\n"}],"tag":"SearchResult"}]],["execution",[{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/spec/v5.0.1/src/Test/Spec/Runner/Event.purs","end":[12,39]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"Execution","moduleName":"Test.Spec.Runner.Event","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["executionunits",[{"values":[{"sourceSpan":{"start":[463,1],"name":"src/QueryM/Ogmios.purs","end":[463,62]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ExecutionUnits","moduleName":"QueryM.Ogmios","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["memory",{"tag":"TypeConstructor","contents":[["Types","Natural"],"Natural"]},{"tag":"RCons","contents":["steps",{"tag":"TypeConstructor","contents":[["Types","Natural"],"Natural"]},{"tag":"REmpty","contents":{}}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["execwriter",[{"values":[{"sourceSpan":{"start":[35,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/Writer.purs","end":[35,42]},"score":19,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"execWriter","moduleName":"Control.Monad.Writer","info":{"values":[{"type":{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer"],"Writer"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"w"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Run a computation in the `Writer` monad, discarding the result\n"}],"tag":"SearchResult"}]],["execwritert",[{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/Writer/Trans.purs","end":[41,63]},"score":19,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"execWriterT","moduleName":"Control.Monad.Writer.Trans","info":{"values":[{"type":{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Writer","Trans"],"WriterT"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"w"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Run a computation in the `WriterT` monad, discarding the result.\n"}],"tag":"SearchResult"}]],["exhausted",[{"values":[{"sourceSpan":{"start":[61,1],"name":".spago/arrays/v6.0.1/src/Data/Array/ST/Iterator.purs","end":[61,54]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"exhausted","moduleName":"Data.Array.ST.Iterator","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","ST","Iterator"],"Iterator"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","ST","Internal"],"ST"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Check whether an iterator has been exhausted.\n"}],"tag":"SearchResult"}]],["exists",[{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/exists/v5.1.0/src/Data/Exists.purs","end":[27,60]},"score":4,"packageInfo":{"values":["exists"],"tag":"Package"},"name":"Exists","moduleName":"Data.Exists","info":{"values":[{"kind":{"tag":"ForAll","contents":["k",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},null]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"This type constructor can be used to existentially quantify over a type.\n\nSpecifically, the type `Exists f` is isomorphic to the existential type `exists a. f a`.\n\nExistential types can be encoded using universal types (`forall`) for endofunctors in more general\ncategories. The benefit of this library is that, by using the FFI, we can create an efficient\nrepresentation of the existential by simply hiding type information.\n\nFor example, consider the type `exists s. Tuple s (s -> Tuple s a)` which represents infinite streams\nof elements of type `a`.\n\nThis type can be constructed by creating a type constructor `StreamF` as follows:\n\n```purescript\ndata StreamF a s = StreamF s (s -> Tuple s a)\n```\n\nWe can then define the type of streams using `Exists`:\n\n```purescript\ntype Stream a = Exists (StreamF a)\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[222,1],"name":".spago/node-fs-aff/v7.0.0/src/Node/FS/Aff.purs","end":[222,32]},"score":1,"packageInfo":{"values":["node-fs-aff"],"tag":"Package"},"name":"exists","moduleName":"Node.FS.Aff","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"\nCheck to see if a file exists.\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[297,1],"name":".spago/node-fs/v6.1.0/src/Node/FS/Async.purs","end":[299,22]},"score":3,"packageInfo":{"values":["node-fs"],"tag":"Package"},"name":"exists","moduleName":"Node.FS.Async","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Check if the path exists.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[262,1],"name":".spago/node-fs/v6.1.0/src/Node/FS/Sync.purs","end":[263,25]},"score":3,"packageInfo":{"values":["node-fs"],"tag":"Package"},"name":"exists","moduleName":"Node.FS.Sync","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Check if the path exists.\n"}],"tag":"SearchResult"}]],["exit",[{"values":[{"sourceSpan":{"start":[160,1],"name":".spago/node-child-process/v7.1.0/src/Node/ChildProcess.purs","end":[162,20]},"score":0,"packageInfo":{"values":["node-child-process"],"tag":"Package"},"name":"Exit","moduleName":"Node.ChildProcess","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Specifies how a child process exited; normally (with an exit code), or\ndue to a signal.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[139,1],"name":".spago/node-process/v8.2.0/src/Node/Process.purs","end":[139,49]},"score":2,"packageInfo":{"values":["node-process"],"tag":"Package"},"name":"exit","moduleName":"Node.Process","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Cause the process to exit with the supplied integer code. An exit code\nof 0 is normally considered successful, and anything else is considered a\nfailure.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/test-unit/v16.0.0/src/Test/Unit/Main.purs","end":[24,42]},"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"exit","moduleName":"Test.Unit.Main","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Exit the current process using the provided return code.\n\nWorks on Node and Phantom. Will have no effect on other platforms.\n"}],"tag":"SearchResult"}]],["exitcode",[{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/exitcodes/v4.0.0/src/ExitCodes.purs","end":[44,12]},"score":1,"packageInfo":{"values":["exitcodes"],"tag":"Package"},"name":"ExitCode","moduleName":"ExitCodes","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"References:\n1. Advanced Bash Scripting Guide, Appendix E\n2. /usr/include/sysexits.h\n3. man 7 signal\n"}],"tag":"SearchResult"}]],["exitcontext",[{"values":[{"sourceSpan":{"start":[58,3],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Internal.purs","end":[58,24]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"exitContext","moduleName":"Options.Applicative.Internal","info":{"values":[{"typeClassArguments":[["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}]],"typeClass":[["Options","Applicative","Internal"],"MonadP"],"type":{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Options","Applicative","Internal"],"MonadP"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["exited",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"Exited","moduleName":"Data.AcyclicAdjacencyMap","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["exitp",[{"values":[{"sourceSpan":{"start":[63,3],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Internal.purs","end":[63,77]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"exitP","moduleName":"Options.Applicative.Internal","info":{"values":[{"typeClassArguments":[["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}]],"typeClass":[["Options","Applicative","Internal"],"MonadP"],"type":{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Options","Applicative","Internal"],"MonadP"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"IsCmdStart"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ArgPolicy"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["exp",[{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/math/v3.0.0/src/Math.purs","end":[34,39]},"score":12,"packageInfo":{"values":["math"],"tag":"Package"},"name":"exp","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns `e` exponentiated to the power of the argument.\n"}],"tag":"SearchResult"}]],["expand",[{"values":[{"sourceSpan":{"start":[260,1],"name":".spago/variant/v7.0.3/src/Data/Functor/Variant.purs","end":[264,18]},"score":1,"packageInfo":{"values":["variant"],"tag":"Package"},"name":"expand","moduleName":"Data.Functor.Variant","info":{"values":[{"type":{"tag":"ForAll","contents":["lt",{"tag":"ForAll","contents":["mix",{"tag":"ForAll","contents":["gt",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"lt"},{"tag":"TypeVar","contents":"mix"},{"tag":"TypeVar","contents":"gt"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"lt"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"gt"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Every `VariantF lt a` can be cast to some `VariantF gt a` as long as `lt` is a\nsubset of `gt`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[177,1],"name":".spago/variant/v7.0.3/src/Data/Variant.purs","end":[181,15]},"score":1,"packageInfo":{"values":["variant"],"tag":"Package"},"name":"expand","moduleName":"Data.Variant","info":{"values":[{"type":{"tag":"ForAll","contents":["lt",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["gt",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"lt"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"gt"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"lt"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"gt"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Every `Variant lt` can be cast to some `Variant gt` as long as `lt` is a\nsubset of `gt`.\n"}],"tag":"SearchResult"}]],["expected",[{"values":[{"sourceSpan":{"start":[233,1],"name":"src/BalanceTx/BalanceTx.purs","end":[233,34]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Expected","moduleName":"BalanceTx","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Expected","moduleName":"BalanceTx","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"Value"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["expectedreservedidentifier",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"ExpectedReservedIdentifier","moduleName":"Data.Medea.Parser.Types","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["expectedscriptgotpubkey",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ExpectedScriptGotPubkey","moduleName":"Types.TypedTxOut","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["expecterror",[{"values":[{"sourceSpan":{"start":[98,1],"name":".spago/spec/v5.0.1/src/Test/Spec/Assertions.purs","end":[102,12]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"expectError","moduleName":"Test.Spec.Assertions","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["t",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Error","Class"],"MonadError"],"constraintArgs":[{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"t"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["expectfailure",[{"values":[{"sourceSpan":{"start":[32,1],"name":".spago/test-unit/v16.0.0/src/Test/Unit/Assert.purs","end":[32,40]},"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"expectFailure","moduleName":"Test.Unit.Assert","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Expect a test to fail. Given a reason and a test, fail with the given\nreason if the test succeeds, and succeed if it fails.\n"}],"tag":"SearchResult"}]],["expectsargerror",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"ExpectsArgError","moduleName":"Options.Applicative.Types","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["experiment",[{"values":[{"sourceSpan":{"start":[39,1],"name":".spago/transformers/v5.2.0/src/Control/Comonad/Store/Class.purs","end":[39,88]},"score":19,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"experiment","moduleName":"Control.Comonad.Store.Class","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Comonad","Store","Class"],"ComonadStore"],"constraintArgs":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"w"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"s"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Extract a collection of values from positions which depend on the current position.\n"}],"tag":"SearchResult"}]],["explore",[{"values":[{"sourceSpan":{"start":[89,1],"name":".spago/free/v6.1.0/src/Control/Comonad/Cofree.purs","end":[96,7]},"score":5,"packageInfo":{"values":["free"],"tag":"Package"},"name":"explore","moduleName":"Control.Comonad.Cofree","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["y",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"y"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"y"}]}]},null]},null]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Cofree"],"Cofree"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Explore a value in the cofree comonad by using an expression in a\ncorresponding free monad.\n\nThe free monad should be built from a functor which pairs with the\nfunctor underlying the cofree comonad.\n"}],"tag":"SearchResult"}]],["explorem",[{"values":[{"sourceSpan":{"start":[104,1],"name":".spago/free/v6.1.0/src/Control/Comonad/Cofree.purs","end":[112,9]},"score":5,"packageInfo":{"values":["free"],"tag":"Package"},"name":"exploreM","moduleName":"Control.Comonad.Cofree","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"g"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Rec","Class"],"MonadRec"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["y",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"y"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"y"}]}]}]},null]},null]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Cofree"],"Cofree"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["exponential",[{"values":[{"sourceSpan":{"start":[55,1],"name":".spago/numbers/v8.0.0/src/Data/Number/Format.purs","end":[55,29]},"score":5,"packageInfo":{"values":["numbers"],"tag":"Package"},"name":"exponential","moduleName":"Data.Number.Format","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Data","Number","Format"],"Format"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a `toExponential`-based format from an integer. Values smaller than\n`0` and larger than `20` will be clamped.\n"}],"tag":"SearchResult"}]],["extend",[{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/control/v5.0.0/src/Control/Extend.purs","end":[25,49]},"score":25,"packageInfo":{"values":["control"],"tag":"Package"},"name":"Extend","moduleName":"Control.Extend","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}]}],"fundeps":[],"arguments":[["w",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Extend` class defines the extension operator `(<<=)`\nwhich extends a local context-dependent computation to\na global computation.\n\n`Extend` is the dual of `Bind`, and `(<<=)` is the dual of\n`(>>=)`.\n\nLaws:\n\n- Associativity: `extend f <<< extend g = extend (f <<< extend g)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[25,3],"name":".spago/control/v5.0.0/src/Control/Extend.purs","end":[25,49]},"score":25,"packageInfo":{"values":["control"],"tag":"Package"},"name":"extend","moduleName":"Control.Extend","info":{"values":[{"typeClassArguments":[["w",null]],"typeClass":[["Control","Extend"],"Extend"],"type":{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Extend"],"Extend"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[43,1],"name":".spago/argonaut-codecs/v8.1.0/src/Data/Argonaut/Encode/Combinators.purs","end":[43,67]},"score":2,"packageInfo":{"values":["argonaut-codecs"],"tag":"Package"},"name":"extend","moduleName":"Data.Argonaut.Encode.Combinators","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Argonaut","Encode","Class"],"EncodeJson"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The named Encoders of the `(~>)` operator.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[114,1],"name":".spago/argonaut-codecs/v8.1.0/src/Data/Argonaut/Encode/Encoders.purs","end":[114,66]},"score":2,"packageInfo":{"values":["argonaut-codecs"],"tag":"Package"},"name":"extend","moduleName":"Data.Argonaut.Encode.Encoders","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["extended",[{"values":[{"sourceSpan":{"start":[151,1],"name":"src/Types/Interval.purs","end":[151,45]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Extended","moduleName":"Types.Interval","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A set extended with a positive and negative infinity.\n"}],"tag":"SearchResult"}]],["extendflipped",[{"values":[{"sourceSpan":{"start":[38,1],"name":".spago/control/v5.0.0/src/Control/Extend.purs","end":[38,68]},"score":25,"packageInfo":{"values":["control"],"tag":"Package"},"name":"extendFlipped","moduleName":"Control.Extend","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Extend"],"Extend"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A version of `extend` with its arguments flipped.\n"}],"tag":"SearchResult"}]],["extendoptional",[{"values":[{"sourceSpan":{"start":[50,1],"name":".spago/argonaut-codecs/v8.1.0/src/Data/Argonaut/Encode/Combinators.purs","end":[50,83]},"score":2,"packageInfo":{"values":["argonaut-codecs"],"tag":"Package"},"name":"extendOptional","moduleName":"Data.Argonaut.Encode.Combinators","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Argonaut","Encode","Class"],"EncodeJson"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The named Encoders of the `(~>?)` operator.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[120,1],"name":".spago/argonaut-codecs/v8.1.0/src/Data/Argonaut/Encode/Encoders.purs","end":[120,82]},"score":2,"packageInfo":{"values":["argonaut-codecs"],"tag":"Package"},"name":"extendOptional","moduleName":"Data.Argonaut.Encode.Encoders","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The named Encoders of the `(~>?)` operator.\n"}],"tag":"SearchResult"}]],["extname",[{"values":[{"sourceSpan":{"start":[36,1],"name":".spago/node-path/v4.0.0/src/Node/Path.purs","end":[36,47]},"score":2,"packageInfo":{"values":["node-path"],"tag":"Package"},"name":"extname","moduleName":"Node.Path","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Return the extension of the path, from the last `.` to end of string in the\nlast portion of the path. If there is no `.` in the last portion of the\npath or the first character of it is `.`, then it returns an empty string.\n"}],"tag":"SearchResult"}]],["extract",[{"values":[{"sourceSpan":{"start":[21,3],"name":".spago/control/v5.0.0/src/Control/Comonad.purs","end":[21,32]},"score":25,"packageInfo":{"values":["control"],"tag":"Package"},"name":"extract","moduleName":"Control.Comonad","info":{"values":[{"typeClassArguments":[["w",null]],"typeClass":[["Control","Comonad"],"Comonad"],"type":{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Comonad"],"Comonad"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["extractchunk",[{"values":[{"sourceSpan":{"start":[80,1],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Help/Chunk.purs","end":[80,51]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"extractChunk","moduleName":"Options.Applicative.Help.Chunk","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Part of a constrained comonad instance.\n"}],"tag":"SearchResult"}]],["exunitprices",[{"values":[{"sourceSpan":{"start":[368,1],"name":"src/Cardano/Types/Transaction.purs","end":[371,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ExUnitPrices","moduleName":"Cardano.Types.Transaction","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["memPrice",{"tag":"TypeConstructor","contents":[["Cardano","Types","Transaction"],"SubCoin"]},{"tag":"RCons","contents":["stepPrice",{"tag":"TypeConstructor","contents":[["Cardano","Types","Transaction"],"SubCoin"]},{"tag":"REmpty","contents":{}}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[109,1],"name":"src/Serialization/Types.purs","end":[109,41]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ExUnitPrices","moduleName":"Serialization.Types","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["exunits",[{"values":[{"sourceSpan":{"start":[373,1],"name":"src/Cardano/Types/Transaction.purs","end":[376,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ExUnits","moduleName":"Cardano.Types.Transaction","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["mem",{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]},{"tag":"RCons","contents":["steps",{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]},{"tag":"REmpty","contents":{}}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[110,1],"name":"src/Serialization/Types.purs","end":[110,36]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ExUnits","moduleName":"Serialization.Types","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["=<<",[{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/prelude/v5.0.1/src/Control/Bind.purs","end":[63,28]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"(=<<)","moduleName":"Control.Bind","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["=<=",[{"values":[{"sourceSpan":{"start":[53,1],"name":".spago/control/v5.0.0/src/Control/Extend.purs","end":[53,40]},"score":25,"packageInfo":{"values":["control"],"tag":"Package"},"name":"(=<=)","moduleName":"Control.Extend","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["=<|",[{"values":[{"sourceSpan":{"start":[89,1],"name":".spago/mmorph/v6.0.0/src/Control/Monad/Morph.purs","end":[89,22]},"score":1,"packageInfo":{"values":["mmorph"],"tag":"Package"},"name":"(=<|)","moduleName":"Control.Monad.Morph","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["<=",[{"values":[{"sourceSpan":{"start":[155,1],"name":".spago/prelude/v5.0.1/src/Data/Ord.purs","end":[155,28]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"(<=)","moduleName":"Data.Ord","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[350,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Ops.purs","end":[350,20]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"(<=)","moduleName":"Data.Typelevel.Num.Ops","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["<=<",[{"values":[{"sourceSpan":{"start":[138,1],"name":".spago/prelude/v5.0.1/src/Control/Bind.purs","end":[138,38]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"(<=<)","moduleName":"Control.Bind","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["<=?",[{"values":[{"sourceSpan":{"start":[265,1],"name":".spago/quickcheck/v7.1.0/src/Test/QuickCheck.purs","end":[265,32]},"score":17,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"(<=?)","moduleName":"Test.QuickCheck","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["-~",[{"values":[{"sourceSpan":{"start":[37,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Setter.purs","end":[37,23]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"(-~)","moduleName":"Data.Lens.Setter","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]]]