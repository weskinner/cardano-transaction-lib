// This file was generated by purescript-docs-search.
window.DocsSearchIndex["5"] = [["label",[{"values":[{"sourceSpan":{"start":[60,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLOptGroupElement.purs","end":[60,61]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"label","moduleName":"Web.HTML.HTMLOptGroupElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLOptGroupElement"],"HTMLOptGroupElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[99,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLOptionElement.purs","end":[99,59]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"label","moduleName":"Web.HTML.HTMLOptionElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLOptionElement"],"HTMLOptionElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[97,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLTrackElement.purs","end":[97,58]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"label","moduleName":"Web.HTML.HTMLTrackElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLTrackElement"],"HTMLTrackElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["labels",[{"values":[{"sourceSpan":{"start":[152,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLButtonElement.purs","end":[152,62]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"labels","moduleName":"Web.HTML.HTMLButtonElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLButtonElement"],"HTMLButtonElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"NodeList"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[320,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLInputElement.purs","end":[320,61]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"labels","moduleName":"Web.HTML.HTMLInputElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLInputElement"],"HTMLInputElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"NodeList"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[131,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLKeygenElement.purs","end":[131,62]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"labels","moduleName":"Web.HTML.HTMLKeygenElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLKeygenElement"],"HTMLKeygenElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"NodeList"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[76,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLMeterElement.purs","end":[76,61]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"labels","moduleName":"Web.HTML.HTMLMeterElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLMeterElement"],"HTMLMeterElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"NodeList"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[122,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLOutputElement.purs","end":[122,62]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"labels","moduleName":"Web.HTML.HTMLOutputElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLOutputElement"],"HTMLOutputElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"NodeList"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[65,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLProgressElement.purs","end":[65,64]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"labels","moduleName":"Web.HTML.HTMLProgressElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLProgressElement"],"HTMLProgressElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"NodeList"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[163,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLSelectElement.purs","end":[163,62]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"labels","moduleName":"Web.HTML.HTMLSelectElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLSelectElement"],"HTMLSelectElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"NodeList"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[196,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLTextAreaElement.purs","end":[196,64]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"labels","moduleName":"Web.HTML.HTMLTextAreaElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLTextAreaElement"],"HTMLTextAreaElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"NodeList"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["lacks",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Lacks","moduleName":"Prim.Row","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["label",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}],["row",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeVar","contents":"k"}]}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The Lacks type class asserts that a label does not occur in a given row.\n"}],"tag":"SearchResult"}]],["lang",[{"values":[{"sourceSpan":{"start":[105,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLElement.purs","end":[105,52]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"lang","moduleName":"Web.HTML.HTMLElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLElement"],"HTMLElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["langle",[{"values":[{"sourceSpan":{"start":[290,1],"name":".spago/optparse/v4.1.0/src/Text/PrettyPrint/Leijen.purs","end":[290,14]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"langle","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The document @langle@ contains a left angle, \\\"\\<\\\".\n"}],"tag":"SearchResult"}]],["language",[{"values":[{"sourceSpan":{"start":[392,1],"name":"src/Cardano/Types/Transaction.purs","end":[392,25]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Language","moduleName":"Cardano.Types.Transaction","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[118,1],"name":"src/Serialization/Types.purs","end":[118,37]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Language","moduleName":"Serialization.Types","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[7,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Navigator.purs","end":[7,54]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"language","moduleName":"Web.HTML.Navigator","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Navigator"],"Navigator"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["languagechange",[{"values":[{"sourceSpan":{"start":[56,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Event/EventTypes.purs","end":[56,28]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"languagechange","moduleName":"Web.HTML.Event.EventTypes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["languagedef",[{"values":[{"sourceSpan":{"start":[74,1],"name":".spago/parsing/v7.0.1/src/Text/Parsing/Parser/Token.purs","end":[74,50]},"score":0,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"LanguageDef","moduleName":"Text.Parsing.Parser.Token","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Token"],"GenLanguageDef"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"LanguageDef","moduleName":"Text.Parsing.Parser.Token","info":{"values":[{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["commentStart",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["commentEnd",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["commentLine",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["nestedComments",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["identStart",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"RCons","contents":["identLetter",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"RCons","contents":["opStart",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"RCons","contents":["opLetter",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"RCons","contents":["reservedNames",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["reservedOpNames",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["caseSensitive",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]}]}]}]}]}]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["languages",[{"values":[{"sourceSpan":{"start":[9,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Navigator.purs","end":[9,63]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"languages","moduleName":"Web.HTML.Navigator","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Navigator"],"Navigator"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["last",[{"values":[{"sourceSpan":{"start":[244,1],"name":".spago/arrays/v6.0.1/src/Data/Array/NonEmpty.purs","end":[244,39]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"last","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[28,1],"name":".spago/arrays/v6.0.1/src/Data/Array/Partial.purs","end":[28,42]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"last","moduleName":"Data.Array.Partial","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"Partial"],"constraintArgs":[]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the last element of a non-empty array.\n\nRunning time: `O(1)`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[316,1],"name":".spago/arrays/v6.0.1/src/Data/Array.purs","end":[316,37]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"last","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the last element in an array, or `Nothing` if the array is empty\n\nRunning time: `O(1)`.\n\n```purescript\nlast [1, 2] = Just 2\nlast [] = Nothing\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[361,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree.purs","end":[361,74]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"last","moduleName":"Data.FingerTree","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"v"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Sequence","Internal"],"Measured"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[60,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy/NonEmpty.purs","end":[60,38]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"last","moduleName":"Data.List.Lazy.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[257,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy.purs","end":[257,22]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"last","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the last element in a list, or `Nothing` if the list is empty.\n\nRunning time: `O(n)`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[152,1],"name":".spago/lists/v6.0.1/src/Data/List/NonEmpty.purs","end":[152,38]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"last","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/lists/v6.0.1/src/Data/List/Partial.purs","end":[21,41]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"last","moduleName":"Data.List.Partial","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"Partial"],"constraintArgs":[]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the last element of a non-empty list.\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[241,1],"name":".spago/lists/v6.0.1/src/Data/List.purs","end":[241,22]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"last","moduleName":"Data.List","info":{"values":[{"type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the last element in a list, or `Nothing` if the list is empty.\n\nRunning time: `O(n)`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/maybe/v5.0.0/src/Data/Maybe/Last.purs","end":[21,32]},"score":48,"packageInfo":{"values":["maybe"],"tag":"Package"},"name":"Last","moduleName":"Data.Maybe.Last","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Monoid returning the last (right-most) non-`Nothing` value.\n\n``` purescript\nLast (Just x) <> Last (Just y) == Last (Just y)\nLast (Just x) <> Last Nothing == Last (Just x)\nLast Nothing <> Last Nothing == Last Nothing\nmempty :: Last _ == Last Nothing\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":48,"packageInfo":{"values":["maybe"],"tag":"Package"},"name":"Last","moduleName":"Data.Maybe.Last","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[13,1],"name":".spago/prelude/v5.0.1/src/Data/Semigroup/Last.purs","end":[13,24]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Last","moduleName":"Data.Semigroup.Last","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Semigroup where `append` always takes the second option.\n\n``` purescript\nLast x <> Last y == Last y\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Last","moduleName":"Data.Semigroup.Last","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[118,1],"name":".spago/sequences/v3.0.2/src/Data/Sequence/NonEmpty.purs","end":[118,29]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"last","moduleName":"Data.Sequence.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","NonEmpty"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"O(1). Get the last element of a non-empty sequence.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[336,1],"name":".spago/sequences/v3.0.2/src/Data/Sequence.purs","end":[336,35]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"last","moduleName":"Data.Sequence","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"O(1). Get the last element of a Seq. Equivalent to\n`\\seq -> index (length seq - 1) seq`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[304,1],"name":".spago/pipes/v7.0.1/src/Pipes/Prelude.purs","end":[304,64]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"last","moduleName":"Pipes.Prelude","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Core"],"Producer"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Retrieve the last element from a `Producer`\n"}],"tag":"SearchResult"}]],["lastchild",[{"values":[{"sourceSpan":{"start":[107,1],"name":".spago/web-dom/v5.0.0/src/Web/DOM/Node.purs","end":[107,41]},"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"lastChild","moduleName":"Web.DOM.Node","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The last child of the node, or Nothing if the node has no children.\n"}],"tag":"SearchResult"}]],["lastdayofmonth",[{"values":[{"sourceSpan":{"start":[126,1],"name":".spago/datetime/v5.0.2/src/Data/Date.purs","end":[126,39]},"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"lastDayOfMonth","moduleName":"Data.Date","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date","Component"],"Year"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date","Component"],"Month"]}]},{"tag":"TypeConstructor","contents":[["Data","Date","Component"],"Day"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the final day of a month and year, accounting for leap years.\n"}],"tag":"SearchResult"}]],["lastdigit",[{"values":[{"sourceSpan":{"start":[89,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree/Digit.purs","end":[89,36]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"lastDigit","moduleName":"Data.FingerTree.Digit","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree","Digit"],"Digit"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["lastelementchild",[{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/web-dom/v5.0.0/src/Web/DOM/ParentNode.purs","end":[34,57]},"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"lastElementChild","moduleName":"Web.DOM.ParentNode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","ParentNode"],"ParentNode"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Element"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The last child that is an element, or Nothing if no such element exists.\n"}],"tag":"SearchResult"}]],["lastindexof",[{"values":[{"sourceSpan":{"start":[284,1],"name":".spago/strings/v5.0.0/src/Data/String/CodePoints.purs","end":[284,46]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"lastIndexOf","moduleName":"Data.String.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Pattern"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the number of code points preceding the last match of the given\npattern in the string. Returns Nothing when no matches are found.\n\n```purescript\n>>> lastIndexOf (Pattern \"𝐀\") \"b 𝐀𝐀 c 𝐀\"\nJust 7\n>>> lastIndexOf (Pattern \"o\") \"b 𝐀𝐀 c 𝐀\"\nNothing\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[207,1],"name":".spago/strings/v5.0.0/src/Data/String/CodeUnits.purs","end":[207,46]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"lastIndexOf","moduleName":"Data.String.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Pattern"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the index of the last occurrence of the pattern in the\ngiven string. Returns `Nothing` if there is no match.\n\n```purescript\nlastIndexOf (Pattern \"c\") \"abcdc\" == Just 4\nlastIndexOf (Pattern \"c\") \"aaa\" == Nothing\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[87,1],"name":".spago/strings/v5.0.0/src/Data/String/NonEmpty/CodePoints.purs","end":[87,54]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"lastIndexOf","moduleName":"Data.String.NonEmpty.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Pattern"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[158,1],"name":".spago/strings/v5.0.0/src/Data/String/NonEmpty/CodeUnits.purs","end":[158,54]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"lastIndexOf","moduleName":"Data.String.NonEmpty.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Pattern"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the index of the last occurrence of the pattern in the\ngiven string. Returns `Nothing` if there is no match.\n\n```purescript\nlastIndexOf (Pattern \"c\") (NonEmptyString \"abcdc\") == Just 4\nlastIndexOf (Pattern \"c\") (NonEmptyString \"aaa\") == Nothing\n```\n"}],"tag":"SearchResult"}]],["lastindexof'",[{"values":[{"sourceSpan":{"start":[310,1],"name":".spago/strings/v5.0.0/src/Data/String/CodePoints.purs","end":[310,54]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"lastIndexOf'","moduleName":"Data.String.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Pattern"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the number of code points preceding the first match of the given\npattern in the string. Pattern matches following the given index will be\nignored.\n\nGiving a negative index is equivalent to giving 0 and giving an index\ngreater than the number of code points in the string is equivalent to\nsearching in the whole string.\n\nReturns Nothing when no matches are found.\n\n```purescript\n>>> lastIndexOf' (Pattern \"𝐀\") (-1) \"b 𝐀𝐀 c 𝐀\"\nNothing\n>>> lastIndexOf' (Pattern \"𝐀\") 0 \"b 𝐀𝐀 c 𝐀\"\nNothing\n>>> lastIndexOf' (Pattern \"𝐀\") 5 \"b 𝐀𝐀 c 𝐀\"\nJust 3\n>>> lastIndexOf' (Pattern \"𝐀\") 8 \"b 𝐀𝐀 c 𝐀\"\nJust 7\n>>> lastIndexOf' (Pattern \"o\") 5 \"b 𝐀𝐀 c 𝐀\"\nNothing\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[235,1],"name":".spago/strings/v5.0.0/src/Data/String/CodeUnits.purs","end":[235,54]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"lastIndexOf'","moduleName":"Data.String.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Pattern"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the index of the last occurrence of the pattern in the\ngiven string, starting at the specified index and searching\nbackwards towards the beginning of the string.\n\nStarting at a negative index is equivalent to starting at 0 and\nstarting at an index greater than the string length is equivalent\nto searching in the whole string.\n\nReturns `Nothing` if there is no match.\n\n```purescript\nlastIndexOf' (Pattern \"a\") (-1) \"ababa\" == Just 0\nlastIndexOf' (Pattern \"a\") 1 \"ababa\" == Just 0\nlastIndexOf' (Pattern \"a\") 3 \"ababa\" == Just 2\nlastIndexOf' (Pattern \"a\") 4 \"ababa\" == Just 4\nlastIndexOf' (Pattern \"a\") 5 \"ababa\" == Just 4\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[90,1],"name":".spago/strings/v5.0.0/src/Data/String/NonEmpty/CodePoints.purs","end":[90,62]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"lastIndexOf'","moduleName":"Data.String.NonEmpty.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Pattern"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[178,1],"name":".spago/strings/v5.0.0/src/Data/String/NonEmpty/CodeUnits.purs","end":[178,62]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"lastIndexOf'","moduleName":"Data.String.NonEmpty.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Pattern"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the index of the last occurrence of the pattern in the\ngiven string, starting at the specified index and searching\nbackwards towards the beginning of the string.\n\nStarting at a negative index is equivalent to starting at 0 and\nstarting at an index greater than the string length is equivalent\nto searching in the whole string.\n\nReturns `Nothing` if there is no match.\n\n```purescript\nlastIndexOf' (Pattern \"a\") (-1) (NonEmptyString \"ababa\") == Just 0\nlastIndexOf' (Pattern \"a\") 1 (NonEmptyString \"ababa\") == Just 0\nlastIndexOf' (Pattern \"a\") 3 (NonEmptyString \"ababa\") == Just 2\nlastIndexOf' (Pattern \"a\") 4 (NonEmptyString \"ababa\") == Just 4\nlastIndexOf' (Pattern \"a\") 5 (NonEmptyString \"ababa\") == Just 4\n```\n"}],"tag":"SearchResult"}]],["lastmodified",[{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/web-file/v3.0.0/src/Web/File/File.purs","end":[18,47]},"score":2,"packageInfo":{"values":["web-file"],"tag":"Package"},"name":"lastModified","moduleName":"Web.File.File","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","File","File"],"File"]}]},{"tag":"TypeConstructor","contents":[["Data","DateTime","Instant"],"Instant"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["lastof",[{"values":[{"sourceSpan":{"start":[105,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Fold.purs","end":[105,64]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"lastOf","moduleName":"Data.Lens.Fold","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Fold"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe","Last"],"Last"]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The last focus of a `Fold`, if there is any.\n"}],"tag":"SearchResult"}]],["latin1",[{"values":[{"sourceSpan":null,"score":7,"packageInfo":{"values":["node-buffer"],"tag":"Package"},"name":"Latin1","moduleName":"Node.Encoding","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["lattice",[{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/lattice/v0.3.0/src/Data/Lattice.purs","end":[63,57]},"score":0,"packageInfo":{"values":["lattice"],"tag":"Package"},"name":"Lattice","moduleName":"Data.Lattice","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Lattice"],"JoinSemilattice"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"constraintClass":[["Data","Lattice"],"MeetSemilattice"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]}],"fundeps":[],"arguments":[["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A `Lattice` must satisfy the following in addition to `JoinSemilattice`\nand `MeetSemilattice` laws:\n\n+ Absorbtion laws for meet and join:\n    forall a b,   meet a (join a b) == a\n    forall a b,   join a (meet a b) == a\n"}],"tag":"SearchResult"}]],["launch",[{"values":[{"sourceSpan":{"start":[61,1],"name":".spago/purescript-toppokki/6983e07bf0aa55ab779bcef12df3df339a2b5bd9/src/Toppoki.purs","end":[65,17]},"score":0,"packageInfo":{"values":["purescript-toppokki"],"tag":"Package"},"name":"launch","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"ForAll","contents":["options",{"tag":"ForAll","contents":["trash",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"options"},{"tag":"TypeVar","contents":"trash"},{"tag":"TypeConstructor","contents":[["Toppokki"],"LaunchOptions"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"options"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Browser"]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["launchaff",[{"values":[{"sourceSpan":{"start":[219,1],"name":".spago/aff/v6.0.0/src/Effect/Aff.purs","end":[219,42]},"score":13,"packageInfo":{"values":["aff"],"tag":"Package"},"name":"launchAff","moduleName":"Effect.Aff","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Fiber"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Forks an `Aff` from an `Effect` context, returning the `Fiber`.\n"}],"tag":"SearchResult"}]],["launchaff_",[{"values":[{"sourceSpan":{"start":[226,1],"name":".spago/aff/v6.0.0/src/Effect/Aff.purs","end":[226,38]},"score":13,"packageInfo":{"values":["aff"],"tag":"Package"},"name":"launchAff_","moduleName":"Effect.Aff","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Forks an `Aff` from an `Effect` context, discarding the `Fiber`.\n"}],"tag":"SearchResult"}]],["launchchromeaws",[{"values":[{"sourceSpan":{"start":[68,1],"name":".spago/purescript-toppokki/6983e07bf0aa55ab779bcef12df3df339a2b5bd9/src/Toppoki.purs","end":[73,17]},"score":0,"packageInfo":{"values":["purescript-toppokki"],"tag":"Package"},"name":"launchChromeAWS","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"ForAll","contents":["options",{"tag":"ForAll","contents":["trash",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"options"},{"tag":"TypeVar","contents":"trash"},{"tag":"TypeConstructor","contents":[["Toppokki"],"LaunchOptions"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"ChromeAWS"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"options"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Browser"]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["launchoptions",[{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/purescript-toppokki/6983e07bf0aa55ab779bcef12df3df339a2b5bd9/src/Toppoki.purs","end":[50,4]},"score":0,"packageInfo":{"values":["purescript-toppokki"],"tag":"Package"},"name":"LaunchOptions","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"RCons","contents":["args",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["defaultViewport",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"DefaultViewPort"]}]},{"tag":"RCons","contents":["devtools",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["dumpio",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["executablePath",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["handleSIGHUP",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["handleSIGINT",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["handleSIGTERM",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["headless",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["ignoreDefaultArgs",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["ignoreHTTPSErrors",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["pipe",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["slowMo",{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"tag":"RCons","contents":["timeout",{"tag":"TypeConstructor","contents":[["Prim"],"Number"]},{"tag":"RCons","contents":["userDataDir",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["launchsuspendedaff",[{"values":[{"sourceSpan":{"start":[230,1],"name":".spago/aff/v6.0.0/src/Effect/Aff.purs","end":[230,51]},"score":13,"packageInfo":{"values":["aff"],"tag":"Package"},"name":"launchSuspendedAff","moduleName":"Effect.Aff","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Fiber"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Suspends an `Aff` from an `Effect` context, returning the `Fiber`.\n"}],"tag":"SearchResult"}]],["laziness",[{"values":[{"sourceSpan":{"start":[10,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLImageElement/Laziness.purs","end":[12,9]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"Laziness","moduleName":"Web.HTML.HTMLImageElement.Laziness","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["lazy",[{"values":[{"sourceSpan":{"start":[10,1],"name":".spago/control/v5.0.0/src/Control/Lazy.purs","end":[11,28]},"score":25,"packageInfo":{"values":["control"],"tag":"Package"},"name":"Lazy","moduleName":"Control.Lazy","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["l",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Lazy` class represents types which allow evaluation of values\nto be _deferred_.\n\nUsually, this means that a type contains a function arrow which can\nbe used to delay evaluation.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[30,1],"name":".spago/lazy/v5.0.0/src/Data/Lazy.purs","end":[30,41]},"score":7,"packageInfo":{"values":["lazy"],"tag":"Package"},"name":"Lazy","moduleName":"Data.Lazy","info":{"values":[{"kind":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"`Lazy a` represents lazily-computed values of type `a`.\n\nA lazy value is computed at most once - the result is saved\nafter the first computation, and subsequent attempts to read\nthe value simply return the saved value.\n\n`Lazy` values can be created with `defer`, or by using the provided\ntype class instances.\n\n`Lazy` values can be evaluated by using the `force` function.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"Lazy","moduleName":"Web.HTML.HTMLImageElement.Laziness","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["lazyempty",[{"values":[{"sourceSpan":{"start":[122,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree.purs","end":[122,47]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"lazyEmpty","moduleName":"Data.FingerTree","info":{"values":[{"type":{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["lazysimpledoc",[{"values":[{"sourceSpan":{"start":[593,1],"name":".spago/optparse/v4.1.0/src/Text/PrettyPrint/Leijen.purs","end":[597,53]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"LazySimpleDoc","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["lazysplit",[{"values":[{"sourceSpan":{"start":[405,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree.purs","end":[405,59]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"LazySplit","moduleName":"Data.FingerTree","info":{"values":[{"typeArguments":[["f",null],["a",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"LazySplit","moduleName":"Data.FingerTree","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]}},{"tag":"TypeVar","contents":"a"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["jcursor",[{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/argonaut-traversals/v9.0.0/src/Data/Argonaut/JCursor.purs","end":[21,23]},"score":1,"packageInfo":{"values":["argonaut-traversals"],"tag":"Package"},"name":"JCursor","moduleName":"Data.Argonaut.JCursor","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["jcursortop",[{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["argonaut-traversals"],"tag":"Package"},"name":"JCursorTop","moduleName":"Data.Argonaut.JCursor","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["id",[{"values":[{"sourceSpan":{"start":[74,1],"name":"src/Plutus/Types/DataSchema.purs","end":[74,10]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Id","moduleName":"Plutus.Types.DataSchema","info":{"values":[{"typeArguments":[["k",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"FooB {fooo :: Bool, foo :: Bool}\nA type level Identity \"functor kind\". This is mainly used to overload the ':=' type operator.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[103,1],"name":".spago/web-dom/v5.0.0/src/Web/DOM/Element.purs","end":[103,46]},"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"id","moduleName":"Web.DOM.Element","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Element"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["idempotent",[{"values":[{"sourceSpan":{"start":[74,1],"name":".spago/properties/v0.2.0/src/Control/Algebra/Properties.purs","end":[74,47]},"score":1,"packageInfo":{"values":["properties"],"tag":"Package"},"name":"idempotent","moduleName":"Control.Algebra.Properties","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["idempotent'",[{"values":[{"sourceSpan":{"start":[77,1],"name":".spago/properties/v0.2.0/src/Control/Algebra/Properties.purs","end":[77,52]},"score":1,"packageInfo":{"values":["properties"],"tag":"Package"},"name":"idempotent'","moduleName":"Control.Algebra.Properties","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["identfromreserved",[{"values":[{"sourceSpan":{"start":[139,1],"name":".spago/medea/8b215851959aa8bbf33e6708df6bd683c89d1a5a/src/Data/Medea/Parser/Primitive.purs","end":[139,54]},"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"identFromReserved","moduleName":"Data.Medea.Parser.Primitive","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Medea","Parser","Primitive"],"ReservedIdentifier"]}]},{"tag":"TypeConstructor","contents":[["Data","Medea","Parser","Primitive"],"Identifier"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["identifier",[{"values":[{"sourceSpan":{"start":[50,1],"name":".spago/medea/8b215851959aa8bbf33e6708df6bd683c89d1a5a/src/Data/Medea/Parser/Primitive.purs","end":[51,22]},"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"Identifier","moduleName":"Data.Medea.Parser.Primitive","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"Identifier","moduleName":"Data.Medea.Parser.Primitive","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["identifiertoolong",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"IdentifierTooLong","moduleName":"Data.Medea.Loader","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":"An identifier was longer than allowed. \n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"IdentifierTooLong","moduleName":"Data.Medea.Parser.Types","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["identity",[{"values":[{"sourceSpan":{"start":[80,1],"name":".spago/properties/v0.2.0/src/Control/Algebra/Properties.purs","end":[80,53]},"score":1,"packageInfo":{"values":["properties"],"tag":"Package"},"name":"identity","moduleName":"Control.Algebra.Properties","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[18,3],"name":".spago/prelude/v5.0.1/src/Control/Category.purs","end":[18,30]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"identity","moduleName":"Control.Category","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Control","Category"],"Category"],"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Category"],"Category"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"t"}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[14,1],"name":".spago/identity/v5.0.0/src/Data/Identity.purs","end":[14,32]},"score":10,"packageInfo":{"values":["identity"],"tag":"Package"},"name":"Identity","moduleName":"Data.Identity","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":10,"packageInfo":{"values":["identity"],"tag":"Package"},"name":"Identity","moduleName":"Data.Identity","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["identitynonce",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"IdentityNonce","moduleName":"Cardano.Types.Transaction","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["identityt",[{"values":[{"sourceSpan":{"start":[30,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/Identity/Trans.purs","end":[30,40]},"score":19,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"IdentityT","moduleName":"Control.Monad.Identity.Trans","info":{"values":[{"typeArguments":[["m",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The `IdentityT` monad transformer.\n\nThis monad acts like a placeholder for functions that take a monad\ntransformer as an argument, similar to `identity` for functions and\n`Identity` for monads.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":19,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"IdentityT","moduleName":"Control.Monad.Identity.Trans","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["idle",[{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"Idle","moduleName":"Web.HTML.HTMLMediaElement.NetworkState","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["idm",[{"values":[{"sourceSpan":{"start":[520,1],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Builder.purs","end":[520,31]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"idm","moduleName":"Options.Applicative.Builder","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"m"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Trivial option modifier.\n"}],"tag":"SearchResult"}]],["idxfromint",[{"values":[{"sourceSpan":{"start":[71,1],"name":".spago/web-file/v3.0.0/src/Web/File/Blob.purs","end":[71,29]},"score":2,"packageInfo":{"values":["web-file"],"tag":"Package"},"name":"idxFromInt","moduleName":"Web.File.Blob","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Web","File","Blob"],"ByteIdx"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates `ByteIdx` from `Int` value\n"}],"tag":"SearchResult"}]],["idxfromnumber",[{"values":[{"sourceSpan":{"start":[75,1],"name":".spago/web-file/v3.0.0/src/Web/File/Blob.purs","end":[75,35]},"score":2,"packageInfo":{"values":["web-file"],"tag":"Package"},"name":"idxFromNumber","moduleName":"Web.File.Blob","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Web","File","Blob"],"ByteIdx"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates `ByteIdx` from `Number` value using `Math.round`.\n"}],"tag":"SearchResult"}]],["i",[{"values":[{"sourceSpan":{"start":[76,1],"name":"src/Plutus/Types/DataSchema.purs","end":[76,55]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"I","moduleName":"Plutus.Types.DataSchema","info":{"values":[{"kind":{"tag":"ForAll","contents":["k",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Plutus","Types","DataSchema"],"Id"]},{"tag":"TypeVar","contents":"k"}]}]},null]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["head",[{"values":[{"sourceSpan":{"start":[52,1],"name":".spago/freet/v6.0.0/src/Control/Comonad/Cofree/Trans.purs","end":[52,56]},"score":1,"packageInfo":{"values":["freet"],"tag":"Package"},"name":"head","moduleName":"Control.Comonad.Cofree.Trans","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Cofree","Trans"],"CofreeT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Obtain the annotation stored within a `CofreeT`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[53,1],"name":".spago/free/v6.1.0/src/Control/Comonad/Cofree.purs","end":[53,36]},"score":5,"packageInfo":{"values":["free"],"tag":"Package"},"name":"head","moduleName":"Control.Comonad.Cofree","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Cofree"],"Cofree"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the label for a tree.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[200,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/List/Trans.purs","end":[200,56]},"score":19,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"head","moduleName":"Control.Monad.List.Trans","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Extract the first element of a list.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[241,1],"name":".spago/arrays/v6.0.1/src/Data/Array/NonEmpty.purs","end":[241,39]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"head","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/arrays/v6.0.1/src/Data/Array/Partial.purs","end":[16,42]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"head","moduleName":"Data.Array.Partial","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"Partial"],"constraintArgs":[]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the first element of a non-empty array.\n\nRunning time: `O(1)`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[304,1],"name":".spago/arrays/v6.0.1/src/Data/Array.purs","end":[304,37]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"head","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the first element in an array, or `Nothing` if the array is empty\n\nRunning time: `O(1)`.\n\n```purescript\nhead [1, 2] = Just 1\nhead [] = Nothing\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[330,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree.purs","end":[330,74]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"head","moduleName":"Data.FingerTree","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"v"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Sequence","Internal"],"Measured"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["http-methods"],"tag":"Package"},"name":"HEAD","moduleName":"Data.HTTP.Method","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[57,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy/NonEmpty.purs","end":[57,38]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"head","moduleName":"Data.List.Lazy.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[251,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy.purs","end":[251,22]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"head","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the first element in a list, or `Nothing` if the list is empty.\n\nRunning time: `O(1)`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[149,1],"name":".spago/lists/v6.0.1/src/Data/List/NonEmpty.purs","end":[149,38]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"head","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[9,1],"name":".spago/lists/v6.0.1/src/Data/List/Partial.purs","end":[9,41]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"head","moduleName":"Data.List.Partial","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"Partial"],"constraintArgs":[]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the first element of a non-empty list.\n\nRunning time: `O(1)`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[234,1],"name":".spago/lists/v6.0.1/src/Data/List.purs","end":[234,22]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"head","moduleName":"Data.List","info":{"values":[{"type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the first element in a list, or `Nothing` if the list is empty.\n\nRunning time: `O(1)`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[112,1],"name":".spago/nonempty/v6.1.0/src/Data/NonEmpty.purs","end":[112,38]},"score":10,"packageInfo":{"values":["nonempty"],"tag":"Package"},"name":"head","moduleName":"Data.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","NonEmpty"],"NonEmpty"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the 'first' element of a non-empty container.\n\n```purescript\nhead (1 :| [2, 3]) == 1\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[105,1],"name":".spago/sequences/v3.0.2/src/Data/Sequence/NonEmpty.purs","end":[105,29]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"head","moduleName":"Data.Sequence.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","NonEmpty"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"O(1). Get the first element of a non-empty sequence. Equivalent to\n`index 0`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[322,1],"name":".spago/sequences/v3.0.2/src/Data/Sequence.purs","end":[322,35]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"head","moduleName":"Data.Sequence","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"O(1). Get the first element of a Seq. Equivalent to `index 0`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[292,1],"name":".spago/pipes/v7.0.1/src/Pipes/Prelude.purs","end":[292,64]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"head","moduleName":"Pipes.Prelude","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Core"],"Producer"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Retrieve the first element from a `Producer`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[81,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLDocument.purs","end":[81,51]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"head","moduleName":"Web.HTML.HTMLDocument","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLDocument"],"HTMLDocument"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLElement"],"HTMLElement"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["headdigit",[{"values":[{"sourceSpan":{"start":[83,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree/Digit.purs","end":[83,36]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"headDigit","moduleName":"Data.FingerTree.Digit","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree","Digit"],"Digit"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["header",[{"values":[{"sourceSpan":{"start":[396,1],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Builder.purs","end":[396,40]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"header","moduleName":"Options.Applicative.Builder","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Specify a header for this parser.\n"}],"tag":"SearchResult"}]],["headerdoc",[{"values":[{"sourceSpan":{"start":[401,1],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Builder.purs","end":[401,46]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"headerDoc","moduleName":"Options.Applicative.Builder","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Specify a header for this parser as a 'Text.PrettyPrint.ANSI.Leijen.Doc'\nvalue.\n"}],"tag":"SearchResult"}]],["headerhelp",[{"values":[{"sourceSpan":{"start":[152,1],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Help/Core.purs","end":[152,38]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"headerHelp","moduleName":"Options.Applicative.Help.Core","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["headers",[{"values":[{"sourceSpan":{"start":[80,1],"name":".spago/node-http/v6.0.0/src/Node/HTTP/Client.purs","end":[80,48]},"score":1,"packageInfo":{"values":["node-http"],"tag":"Package"},"name":"headers","moduleName":"Node.HTTP.Client","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"tag":"TypeConstructor","contents":[["Node","HTTP","Client"],"RequestOptions"]}]},{"tag":"TypeConstructor","contents":[["Node","HTTP","Client"],"RequestHeaders"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["headersreceived",[{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["web-xhr"],"tag":"Package"},"name":"HeadersReceived","moduleName":"Web.XHR.ReadyState","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["headless",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Headless","moduleName":"Contract.Test.E2E.Browser","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["height",[{"values":[{"sourceSpan":{"start":[62,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLCanvasElement.purs","end":[62,57]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"height","moduleName":"Web.HTML.HTMLCanvasElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLCanvasElement"],"HTMLCanvasElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[66,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLEmbedElement.purs","end":[66,59]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"height","moduleName":"Web.HTML.HTMLEmbedElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLEmbedElement"],"HTMLEmbedElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[102,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLIFrameElement.purs","end":[102,60]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"height","moduleName":"Web.HTML.HTMLIFrameElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLIFrameElement"],"HTMLIFrameElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[150,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLImageElement.purs","end":[150,56]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"height","moduleName":"Web.HTML.HTMLImageElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLImageElement"],"HTMLImageElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[224,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLInputElement.purs","end":[224,56]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"height","moduleName":"Web.HTML.HTMLInputElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLInputElement"],"HTMLInputElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[120,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLObjectElement.purs","end":[120,60]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"height","moduleName":"Web.HTML.HTMLObjectElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLObjectElement"],"HTMLObjectElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[67,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLVideoElement.purs","end":[67,56]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"height","moduleName":"Web.HTML.HTMLVideoElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLVideoElement"],"HTMLVideoElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["help",[{"values":[{"sourceSpan":{"start":[186,1],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Builder.purs","end":[186,38]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"help","moduleName":"Options.Applicative.Builder","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Specify the help text for an option.\n"}],"tag":"SearchResult"}]],["helpdoc",[{"values":[{"sourceSpan":{"start":[191,1],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Builder.purs","end":[191,44]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"helpDoc","moduleName":"Options.Applicative.Builder","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Specify the help text for an option as a 'Text.PrettyPrint.ANSI.Leijen.Doc'\nvalue.\n"}],"tag":"SearchResult"}]],["helper",[{"values":[{"sourceSpan":{"start":[77,1],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Extra.purs","end":[77,36]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"helper","moduleName":"Options.Applicative.Extra","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A hidden \"helper\" option which always fails. Use this to\nadd the `--help` flag to your CLI parser\n\nA common usage pattern is to apply this applicatively when\ncreating a 'ParserInfo'\n\n> opts :: ParserInfo Sample\n> opts = info (sample <**> helper) mempty\n"}],"tag":"SearchResult"}]],["hex",[{"values":[{"sourceSpan":null,"score":7,"packageInfo":{"values":["node-buffer"],"tag":"Package"},"name":"Hex","moduleName":"Node.Encoding","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["hexadecimal",[{"values":[{"sourceSpan":{"start":[184,1],"name":".spago/integers/v5.0.0/src/Data/Int.purs","end":[184,21]},"score":20,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"hexadecimal","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Int"],"Radix"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The base-16 system.\n"}],"tag":"SearchResult"}]],["hexdigit",[{"values":[{"sourceSpan":{"start":[796,1],"name":".spago/parsing/v7.0.1/src/Text/Parsing/Parser/Token.purs","end":[796,56]},"score":0,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"hexDigit","moduleName":"Text.Parsing.Parser.Token","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parse a hex digit.  Matches any char that satisfies `Data.CodePoint.Unicode.isHexDigit`.\n"}],"tag":"SearchResult"}]],["hexdigittoint",[{"values":[{"sourceSpan":{"start":[582,1],"name":".spago/unicode/v5.0.0/src/Data/CodePoint/Unicode.purs","end":[582,40]},"score":2,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"hexDigitToInt","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a single digit `Char` to the corresponding `Just Int` if its argument\nsatisfies `isHexDigit` (one of `0..9, A..F, a..f`). Anything else converts to `Nothing`\n\n```\n>>> import Data.Traversable\n\n>>> traverse (hexDigitToInt <<< codePointFromChar) ['0','1','2','3','4','5','6','7','8','9']\n(Just [0,1,2,3,4,5,6,7,8,9])\n\n>>> traverse (hexDigitToInt <<< codePointFromChar) ['a','b','c','d','e','f']\n(Just [10,11,12,13,14,15])\n\n>>> traverse (hexDigitToInt <<< codePointFromChar) ['A','B','C','D','E','F']\n(Just [10,11,12,13,14,15])\n\n>>> hexDigitToInt (codePointFromChar 'G')\nNothing\n```\n"}],"tag":"SearchResult"}]],["hextobytearray",[{"values":[{"sourceSpan":{"start":[90,1],"name":"src/Types/ByteArray.purs","end":[90,44]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"hexToByteArray","moduleName":"Types.ByteArray","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Types","ByteArray"],"ByteArray"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Input string must consist of hexademical numbers.\nLength of the input string must be even (2 characters per byte).\n"}],"tag":"SearchResult"}]],["hextobytearrayunsafe",[{"values":[{"sourceSpan":{"start":[94,1],"name":"src/Types/ByteArray.purs","end":[94,59]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"hexToByteArrayUnsafe","moduleName":"Types.ByteArray","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Types","ByteArray"],"ByteArray"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Characters not in range will be converted to zero.\n"}],"tag":"SearchResult"}]],["hextocborbytes",[{"values":[{"sourceSpan":{"start":[64,1],"name":"src/Types/CborBytes.purs","end":[64,44]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"hexToCborBytes","moduleName":"Types.CborBytes","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Types","CborBytes"],"CborBytes"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["hextocborbytesunsafe",[{"values":[{"sourceSpan":{"start":[67,1],"name":"src/Types/CborBytes.purs","end":[67,44]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"hexToCborBytesUnsafe","moduleName":"Types.CborBytes","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Types","CborBytes"],"CborBytes"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["hextorawbytes",[{"values":[{"sourceSpan":{"start":[60,1],"name":"src/Types/RawBytes.purs","end":[60,42]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"hexToRawBytes","moduleName":"Types.RawBytes","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Types","RawBytes"],"RawBytes"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["hextorawbytesunsafe",[{"values":[{"sourceSpan":{"start":[63,1],"name":"src/Types/RawBytes.purs","end":[63,42]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"hexToRawBytesUnsafe","moduleName":"Types.RawBytes","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Types","RawBytes"],"RawBytes"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["heytingalgebra",[{"values":[{"sourceSpan":{"start":[38,1],"name":".spago/prelude/v5.0.1/src/Data/HeytingAlgebra.purs","end":[44,16]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"HeytingAlgebra","moduleName":"Data.HeytingAlgebra","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `HeytingAlgebra` type class represents types that are bounded lattices with\nan implication operator such that the following laws hold:\n\n- Associativity:\n  - `a || (b || c) = (a || b) || c`\n  - `a && (b && c) = (a && b) && c`\n- Commutativity:\n  - `a || b = b || a`\n  - `a && b = b && a`\n- Absorption:\n  - `a || (a && b) = a`\n  - `a && (a || b) = a`\n- Idempotent:\n  - `a || a = a`\n  - `a && a = a`\n- Identity:\n  - `a || ff = a`\n  - `a && tt = a`\n- Implication:\n  - ``a `implies` a = tt``\n  - ``a && (a `implies` b) = a && b``\n  - ``b && (a `implies` b) = b``\n  - ``a `implies` (b && c) = (a `implies` b) && (a `implies` c)``\n- Complemented:\n  - ``not a = a `implies` ff``\n"}],"tag":"SearchResult"}]],["heytingalgebrarecord",[{"values":[{"sourceSpan":{"start":[112,1],"name":".spago/prelude/v5.0.1/src/Data/HeytingAlgebra.purs","end":[118,78]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"HeytingAlgebraRecord","moduleName":"Data.HeytingAlgebra","info":{"values":[{"superclasses":[],"fundeps":[[["rowlist"],["subrow"]]],"arguments":[["rowlist",null],["row",null],["subrow",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A class for records where all fields have `HeytingAlgebra` instances, used\nto implement the `HeytingAlgebra` instance for records.\n"}],"tag":"SearchResult"}]],["dictionary",[{"values":[{"sourceSpan":{"start":[138,1],"name":".spago/aeson-helpers/44d0dae060cf78babd4534320192b58c16a6f45b/src/Aeson/Decode.purs","end":[139,70]},"score":0,"packageInfo":{"values":["aeson-helpers"],"tag":"Package"},"name":"dictionary","moduleName":"Aeson.Decode","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Aeson","Decode"],"Decoder"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Aeson","Decode"],"Decoder"]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Aeson","Decode"],"Decoder"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[112,1],"name":".spago/aeson-helpers/44d0dae060cf78babd4534320192b58c16a6f45b/src/Aeson/Encode.purs","end":[112,70]},"score":0,"packageInfo":{"values":["aeson-helpers"],"tag":"Package"},"name":"dictionary","moduleName":"Aeson.Encode","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Aeson","Encode"],"Encoder"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Aeson","Encode"],"Encoder"]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Aeson","Encode"],"Encoder"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["diff",[{"values":[{"sourceSpan":{"start":[114,1],"name":".spago/datetime/v5.0.2/src/Data/Date.purs","end":[114,50]},"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"diff","moduleName":"Data.Date","info":{"values":[{"type":{"tag":"ForAll","contents":["d",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Time","Duration"],"Duration"],"constraintArgs":[{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]},{"tag":"TypeVar","contents":"d"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Calculates the difference between two dates, returning the result as a\nduration.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[66,1],"name":".spago/datetime/v5.0.2/src/Data/DateTime.purs","end":[66,58]},"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"diff","moduleName":"Data.DateTime","info":{"values":[{"type":{"tag":"ForAll","contents":["d",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Time","Duration"],"Duration"],"constraintArgs":[{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","DateTime"],"DateTime"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","DateTime"],"DateTime"]}]},{"tag":"TypeVar","contents":"d"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Calculates the difference between two date/time values, returning the\nresult as a duration.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[122,1],"name":".spago/datetime/v5.0.2/src/Data/Time.purs","end":[122,50]},"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"diff","moduleName":"Data.Time","info":{"values":[{"type":{"tag":"ForAll","contents":["d",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Time","Duration"],"Duration"],"constraintArgs":[{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Time"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Time"]}]},{"tag":"TypeVar","contents":"d"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Calculates the difference between two times, returning the result as a\nduration.\n"}],"tag":"SearchResult"}]],["difference",[{"values":[{"sourceSpan":{"start":[492,1],"name":".spago/arrays/v6.0.1/src/Data/Array/NonEmpty.purs","end":[492,78]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"difference","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[1141,1],"name":".spago/arrays/v6.0.1/src/Data/Array.purs","end":[1141,62]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"difference","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Delete the first occurrence of each element in the second array from the\nfirst array, creating a new array.\n\n```purescript\ndifference [2, 1] [2, 3] = [1]\n```\n\nRunning time: `O(n*m)`, where n is the length of the first array, and m is\nthe length of the second.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[356,1],"name":".spago/unordered-collections/v2.1.4/src/Data/HashMap.purs","end":[356,84]},"score":0,"packageInfo":{"values":["unordered-collections"],"tag":"Package"},"name":"difference","moduleName":"Data.HashMap","info":{"values":[{"type":{"tag":"ForAll","contents":["k",{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["w",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"w"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Compute the difference of two maps, that is a new map of all the\nmappings in the left map that do not have a corresponding key in\nthe right map.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[144,1],"name":".spago/unordered-collections/v2.1.4/src/Data/HashSet.purs","end":[144,74]},"score":0,"packageInfo":{"values":["unordered-collections"],"tag":"Package"},"name":"difference","moduleName":"Data.HashSet","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashSet"],"HashSet"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashSet"],"HashSet"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashSet"],"HashSet"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Difference of two sets.\n\nAlso known as set minus or relative complement. Returns a set of\nall elements of the left set that are not in the right set.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[669,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy.purs","end":[669,59]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"difference","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Delete the first occurrence of each element in the second list from the first list.\n\nRunning time: `O(n^2)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[758,1],"name":".spago/lists/v6.0.1/src/Data/List.purs","end":[758,59]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"difference","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Delete the first occurrence of each element in the second list from the first list.\n\nRunning time: `O(n^2)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[667,1],"name":".spago/ordered-collections/v2.0.2/src/Data/Map/Internal.purs","end":[667,67]},"score":5,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"difference","moduleName":"Data.Map.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["k",{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["w",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"w"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Difference of two maps. Return elements of the first map where\nthe keys do not exist in the second map.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[137,1],"name":".spago/ordered-collections/v2.0.2/src/Data/Set/NonEmpty.purs","end":[137,89]},"score":5,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"difference","moduleName":"Data.Set.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set","NonEmpty"],"NonEmptySet"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set","NonEmpty"],"NonEmptySet"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set","NonEmpty"],"NonEmptySet"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Form the set difference. `Nothing` if the first is a subset of the second.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[157,1],"name":".spago/ordered-collections/v2.0.2/src/Data/Set.purs","end":[157,57]},"score":5,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"difference","moduleName":"Data.Set","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Form the set difference\n"}],"tag":"SearchResult"}]],["difference'",[{"values":[{"sourceSpan":{"start":[495,1],"name":".spago/arrays/v6.0.1/src/Data/Array/NonEmpty.purs","end":[495,71]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"difference'","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["digit",[{"values":[{"sourceSpan":{"start":[35,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree/Digit.purs","end":[35,34]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"Digit","moduleName":"Data.FingerTree.Digit","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A Digit is just an array which has between one and four elements\n(inclusive). If a Digit has two or three elements, it is described as\n'safe'; otherwise, it is described as 'dangerous'.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/literals/v0.2.0/src/Literals/Int.purs","end":[23,26]},"score":1,"packageInfo":{"values":["literals"],"tag":"Package"},"name":"Digit","moduleName":"Literals.Int","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["s",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[792,1],"name":".spago/parsing/v7.0.1/src/Text/Parsing/Parser/Token.purs","end":[792,53]},"score":0,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"digit","moduleName":"Text.Parsing.Parser.Token","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parse a digit.  Matches any char that satisfies `Data.CodePoint.Unicode.isDecDigit`.\n"}],"tag":"SearchResult"}]],["digitlength",[{"values":[{"sourceSpan":{"start":[108,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree/Digit.purs","end":[108,40]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"digitLength","moduleName":"Data.FingerTree.Digit","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree","Digit"],"Digit"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["digitsinbase",[{"values":[{"sourceSpan":{"start":[159,1],"name":".spago/bigints/v6.0.0/src/Data/BigInt.purs","end":[159,59]},"score":0,"packageInfo":{"values":["bigints"],"tag":"Package"},"name":"digitsInBase","moduleName":"Data.BigInt","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BaseDigits"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A base N representation of the `BigInt` as an array of digits.\n"}],"tag":"SearchResult"}]],["digittoint",[{"values":[{"sourceSpan":{"start":[635,1],"name":".spago/unicode/v5.0.0/src/Data/CodePoint/Unicode.purs","end":[635,147]},"score":2,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"digitToInt","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","TypeError"],"Warn"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","TypeError"],"Text"]},{"tag":"TypeLevelString","contents":"'digitToInt' is deprecated, use 'decDigitToInt', 'hexDigitToInt', or 'octDigitToInt' instead"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["dim",[{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"Dim","moduleName":"Ansi.Codes","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[33,1],"name":".spago/ansi/v6.1.0/src/Ansi/Output.purs","end":[33,34]},"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"dim","moduleName":"Ansi.Output","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"GraphicsParam"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[36,1],"name":".spago/spec/v5.0.1/src/Test/Spec/Style.purs","end":[36,13]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"dim","moduleName":"Test.Spec.Style","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Test","Spec","Style"],"Style"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["dimap",[{"values":[{"sourceSpan":{"start":[23,3],"name":".spago/profunctor/v5.0.0/src/Data/Profunctor.purs","end":[23,66]},"score":4,"packageInfo":{"values":["profunctor"],"tag":"Package"},"name":"dimap","moduleName":"Data.Profunctor","info":{"values":[{"typeClassArguments":[["p",null]],"typeClass":[["Data","Profunctor"],"Profunctor"],"type":{"tag":"ForAll","contents":["p",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Profunctor"],"Profunctor"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"d"}]}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["dimapping",[{"values":[{"sourceSpan":{"start":[65,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Iso.purs","end":[71,45]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"dimapping","moduleName":"Data.Lens.Iso","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["ss",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["tt",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["aa",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["bb",{"tag":"ForAll","contents":["p",{"tag":"ForAll","contents":["q",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Profunctor"],"Profunctor"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Profunctor"],"Profunctor"],"constraintArgs":[{"tag":"TypeVar","contents":"q"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"AnIso"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"AnIso"]},{"tag":"TypeVar","contents":"ss"}]},{"tag":"TypeVar","contents":"tt"}]},{"tag":"TypeVar","contents":"aa"}]},{"tag":"TypeVar","contents":"bb"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Iso"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"ss"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"q"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"tt"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"aa"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"q"},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"bb"}]}}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["dir",[{"values":[{"sourceSpan":{"start":[108,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLElement.purs","end":[108,51]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"dir","moduleName":"Web.HTML.HTMLElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLElement"],"HTMLElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["dirlink",[{"values":[{"sourceSpan":null,"score":3,"packageInfo":{"values":["node-fs"],"tag":"Package"},"name":"DirLink","moduleName":"Node.FS","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["dirname",[{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/node-path/v4.0.0/src/Node/Path.purs","end":[24,47]},"score":2,"packageInfo":{"values":["node-path"],"tag":"Package"},"name":"dirname","moduleName":"Node.Path","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Return the directory name of a path.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[193,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLInputElement.purs","end":[193,60]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"dirName","moduleName":"Web.HTML.HTMLInputElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLInputElement"],"HTMLInputElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[139,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLTextAreaElement.purs","end":[139,63]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"dirName","moduleName":"Web.HTML.HTMLTextAreaElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLTextAreaElement"],"HTMLTextAreaElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["disabled",[{"values":[{"sourceSpan":{"start":[152,1],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Builder.purs","end":[152,30]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"disabled","moduleName":"Options.Applicative.Builder","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Null 'Option' reader. All arguments will fail validation.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[108,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLButtonElement.purs","end":[108,63]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"disabled","moduleName":"Web.HTML.HTMLButtonElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLButtonElement"],"HTMLButtonElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[89,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLFieldSetElement.purs","end":[89,65]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"disabled","moduleName":"Web.HTML.HTMLFieldSetElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLFieldSetElement"],"HTMLFieldSetElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[196,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLInputElement.purs","end":[196,62]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"disabled","moduleName":"Web.HTML.HTMLInputElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLInputElement"],"HTMLInputElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[103,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLKeygenElement.purs","end":[103,63]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"disabled","moduleName":"Web.HTML.HTMLKeygenElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLKeygenElement"],"HTMLKeygenElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[58,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLLinkElement.purs","end":[58,61]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"disabled","moduleName":"Web.HTML.HTMLLinkElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLLinkElement"],"HTMLLinkElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[57,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLOptGroupElement.purs","end":[57,65]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"disabled","moduleName":"Web.HTML.HTMLOptGroupElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLOptGroupElement"],"HTMLOptGroupElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[91,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLOptionElement.purs","end":[91,63]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"disabled","moduleName":"Web.HTML.HTMLOptionElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLOptionElement"],"HTMLOptionElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[109,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLSelectElement.purs","end":[109,63]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"disabled","moduleName":"Web.HTML.HTMLSelectElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLSelectElement"],"HTMLSelectElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[142,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLTextAreaElement.purs","end":[142,65]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"disabled","moduleName":"Web.HTML.HTMLTextAreaElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLTextAreaElement"],"HTMLTextAreaElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["disamb",[{"values":[{"sourceSpan":{"start":[283,1],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Internal.purs","end":[283,71]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"disamb","moduleName":"Options.Applicative.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Internal"],"NondetT"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["disambiguate",[{"values":[{"sourceSpan":{"start":[474,1],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Builder.purs","end":[474,25]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"disambiguate","moduleName":"Options.Applicative.Builder","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"PrefsMod"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Turn on disambiguation.\n\nSee\nhttps://github.com/pcapriotti/optparse-applicative#disambiguation\n"}],"tag":"SearchResult"}]],["discard",[{"values":[{"sourceSpan":{"start":[101,1],"name":".spago/prelude/v5.0.1/src/Control/Bind.purs","end":[102,60]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Discard","moduleName":"Control.Bind","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A class for types whose values can safely be discarded\nin a `do` notation block.\n\nAn example is the `Unit` type, since there is only one\npossible value which can be returned.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[102,3],"name":".spago/prelude/v5.0.1/src/Control/Bind.purs","end":[102,60]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"discard","moduleName":"Control.Bind","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Control","Bind"],"Discard"],"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Bind"],"Discard"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Bind"],"Bind"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[107,1],"name":".spago/pipes/v7.0.1/src/Pipes.purs","end":[107,46]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"discard","moduleName":"Pipes","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Discards a value\n"}],"tag":"SearchResult"}]],["discardunfocused",[{"values":[{"sourceSpan":{"start":[100,1],"name":".spago/spec/v5.0.1/src/Test/Spec/Tree.purs","end":[100,89]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"discardUnfocused","moduleName":"Test.Spec.Tree","info":{"values":[{"type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec","Tree"],"Tree"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec","Tree"],"Item"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec","Tree"],"Tree"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec","Tree"],"Item"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"If there is at least one focused element, all paths which don't\nlead to a focused element will be remove. otherwise input will\nbe returned as unchanged.\n"}],"tag":"SearchResult"}]],["disconnect",[{"values":[{"sourceSpan":{"start":[141,1],"name":".spago/node-child-process/v7.1.0/src/Node/ChildProcess.purs","end":[141,42]},"score":0,"packageInfo":{"values":["node-child-process"],"tag":"Package"},"name":"disconnect","moduleName":"Node.ChildProcess","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","ChildProcess"],"ChildProcess"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Closes the IPC channel between parent and child.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/web-dom/v5.0.0/src/Web/DOM/MutationObserver.purs","end":[44,61]},"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"disconnect","moduleName":"Web.DOM.MutationObserver","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","MutationObserver"],"MutationObserver"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["disj",[{"values":[{"sourceSpan":{"start":[43,3],"name":".spago/prelude/v5.0.1/src/Data/HeytingAlgebra.purs","end":[43,22]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"disj","moduleName":"Data.HeytingAlgebra","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/prelude/v5.0.1/src/Data/Monoid/Disj.purs","end":[15,24]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Disj","moduleName":"Data.Monoid.Disj","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Monoid and semigroup for disjunction.\n\n``` purescript\nDisj x <> Disj y == Disj (x || y)\n(mempty :: Disj _) == Disj bottom\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Disj","moduleName":"Data.Monoid.Disj","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/quickcheck-combinators/v0.1.3/src/Test/QuickCheck/Combinators.purs","end":[31,35]},"score":0,"packageInfo":{"values":["quickcheck-combinators"],"tag":"Package"},"name":"disj","moduleName":"Test.QuickCheck.Combinators","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Combine two results with \"Or\" logic, and with `\", or \"` as the failure message separator\n"}],"tag":"SearchResult"}]],["disj'",[{"values":[{"sourceSpan":{"start":[35,1],"name":".spago/quickcheck-combinators/v0.1.3/src/Test/QuickCheck/Combinators.purs","end":[35,46]},"score":0,"packageInfo":{"values":["quickcheck-combinators"],"tag":"Package"},"name":"disj'","moduleName":"Test.QuickCheck.Combinators","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Combine two results with \"Or\" logic, and with a failure message separator\n"}],"tag":"SearchResult"}]],["disjmodifying",[{"values":[{"sourceSpan":{"start":[114,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Setter.purs","end":[114,96]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"disjModifying","moduleName":"Data.Lens.Setter","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","State","Class"],"MonadState"],"constraintArgs":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Setter'"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["disjointunion",[{"values":[{"sourceSpan":{"start":[143,1],"name":".spago/record/v3.0.0/src/Record/Builder.purs","end":[148,37]},"score":6,"packageInfo":{"values":["record"],"tag":"Package"},"name":"disjointUnion","moduleName":"Record.Builder","info":{"values":[{"type":{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r3",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"},{"tag":"TypeVar","contents":"r3"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Nub"],"constraintArgs":[{"tag":"TypeVar","contents":"r3"},{"tag":"TypeVar","contents":"r3"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Record","Builder"],"Builder"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r2"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r3"}]}}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Build by merging some disjoint set of fields from another record.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[199,1],"name":".spago/record/v3.0.0/src/Record.purs","end":[205,15]},"score":6,"packageInfo":{"values":["record"],"tag":"Package"},"name":"disjointUnion","moduleName":"Record","info":{"values":[{"type":{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r3",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"},{"tag":"TypeVar","contents":"r3"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Nub"],"constraintArgs":[{"tag":"TypeVar","contents":"r3"},{"tag":"TypeVar","contents":"r3"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r2"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r3"}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Merges two records where no labels overlap. This restriction exhibits\nbetter inference than `merge` when the resulting record type is known,\nbut one argument is not.\n\nFor example, hole `?help` is inferred to have type `{ b :: Int }` here:\n\n```purescript\ndisjointUnion { a: 5 } ?help :: { a :: Int, b :: Int }\n```\n"}],"tag":"SearchResult"}]],["disjover",[{"values":[{"sourceSpan":{"start":[80,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Setter.purs","end":[80,76]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"disjOver","moduleName":"Data.Lens.Setter","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Setter"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["disjrecord",[{"values":[{"sourceSpan":{"start":[116,3],"name":".spago/prelude/v5.0.1/src/Data/HeytingAlgebra.purs","end":[116,93]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"disjRecord","moduleName":"Data.HeytingAlgebra","info":{"values":[{"typeClassArguments":[["rowlist",null],["row",null],["subrow",null]],"typeClass":[["Data","HeytingAlgebra"],"HeytingAlgebraRecord"],"type":{"tag":"ForAll","contents":["rowlist",{"tag":"ForAll","contents":["row",{"tag":"ForAll","contents":["subrow",{"tag":"ForAll","contents":["rlproxy",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebraRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"rowlist"},{"tag":"TypeVar","contents":"row"},{"tag":"TypeVar","contents":"subrow"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"rlproxy"},{"tag":"TypeVar","contents":"rowlist"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"subrow"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["dispatcherror",[{"values":[{"sourceSpan":{"start":[963,1],"name":"src/QueryM.purs","end":[970,22]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"DispatchError","moduleName":"QueryM","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["dispatchevent",[{"values":[{"sourceSpan":{"start":[51,1],"name":".spago/web-events/v3.0.0/src/Web/Event/EventTarget.purs","end":[54,20]},"score":2,"packageInfo":{"values":["web-events"],"tag":"Package"},"name":"dispatchEvent","moduleName":"Web.Event.EventTarget","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","Event","Internal","Types"],"Event"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","Event","Internal","Types"],"EventTarget"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Dispatches an event from an event target.\n"}],"tag":"SearchResult"}]],["dispatchidmap",[{"values":[{"sourceSpan":{"start":[993,1],"name":"src/QueryM.purs","end":[994,71]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"DispatchIdMap","moduleName":"QueryM","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Ref"],"Ref"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Types","MultiMap"],"MultiMap"]},{"tag":"TypeConstructor","contents":[["QueryM","UniqueId"],"ListenerId"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["QueryM"],"DispatchError"]}]},{"tag":"TypeVar","contents":"response"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]}}]},"arguments":[["response",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["displays",[{"values":[{"sourceSpan":{"start":[893,1],"name":".spago/optparse/v4.1.0/src/Text/PrettyPrint/Leijen.purs","end":[893,32]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"displayS","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"@(displayS simpleDoc)@ takes the output @simpleDoc@ from a\nrendering function and transforms it to a 'ShowS' type (for use in\nthe 'Show' class).\n\n> showWidth :: Int -> Doc -> String\n> showWidth w x   = displayS (renderPretty 0.4 w x) \"\"\n\nANSI color information will be discarded by this function unless\nyou are running on a Unix-like operating system. This is due to\na technical limitation in Windows ANSI support.\n"}],"tag":"SearchResult"}]],["distribute",[{"values":[{"sourceSpan":{"start":[25,3],"name":".spago/distributive/v5.0.0/src/Data/Distributive.purs","end":[25,60]},"score":5,"packageInfo":{"values":["distributive"],"tag":"Package"},"name":"distribute","moduleName":"Data.Distributive","info":{"values":[{"typeClassArguments":[["f",null]],"typeClass":[["Data","Distributive"],"Distributive"],"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Distributive"],"Distributive"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["distributedefault",[{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/distributive/v5.0.0/src/Data/Distributive.purs","end":[46,13]},"score":5,"packageInfo":{"values":["distributive"],"tag":"Package"},"name":"distributeDefault","moduleName":"Data.Distributive","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Distributive"],"Distributive"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A default implementation of `distribute`, based on `collect`.\n"}],"tag":"SearchResult"}]],["distributive",[{"values":[{"sourceSpan":{"start":[64,1],"name":".spago/properties/v0.2.0/src/Control/Algebra/Properties.purs","end":[64,75]},"score":1,"packageInfo":{"values":["properties"],"tag":"Package"},"name":"distributive","moduleName":"Control.Algebra.Properties","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/distributive/v5.0.0/src/Data/Distributive.purs","end":[26,69]},"score":5,"packageInfo":{"values":["distributive"],"tag":"Package"},"name":"Distributive","moduleName":"Data.Distributive","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]}],"fundeps":[],"arguments":[["f",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Categorical dual of `Traversable`:\n\n- `distribute` is the dual of `sequence` - it zips an arbitrary collection\n  of containers.\n- `collect` is the dual of `traverse` - it traverses an arbitrary\n  collection of values.\n\nLaws:\n\n- `distribute = collect identity`\n- `distribute <<< distribute = identity`\n- `collect f = distribute <<< map f`\n- `map f = unwrap <<< collect (Identity <<< f)`\n- `map distribute <<< collect f = unwrap <<< collect (Compose <<< f)`\n"}],"tag":"SearchResult"}]],["div",[{"values":[{"sourceSpan":{"start":[65,3],"name":".spago/prelude/v5.0.1/src/Data/EuclideanRing.purs","end":[65,21]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"div","moduleName":"Data.EuclideanRing","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","EuclideanRing"],"EuclideanRing"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","EuclideanRing"],"EuclideanRing"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[105,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Ops.purs","end":[105,47]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"Div","moduleName":"Data.Typelevel.Num.Ops","info":{"values":[{"superclasses":[],"fundeps":[[["x","y"],["z"]],[["x","z"],["y"]],[["y","z"],["x"]]],"arguments":[["x",null],["y",null],["z",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[108,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Ops.purs","end":[108,46]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"div","moduleName":"Data.Typelevel.Num.Ops","info":{"values":[{"type":{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["y",{"tag":"ForAll","contents":["z",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Typelevel","Num","Ops"],"Div"],"constraintArgs":[{"tag":"TypeVar","contents":"x"},{"tag":"TypeVar","contents":"y"},{"tag":"TypeVar","contents":"z"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"y"}]},{"tag":"TypeVar","contents":"z"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["div10",[{"values":[{"sourceSpan":{"start":[150,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Ops.purs","end":[150,42]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"Div10","moduleName":"Data.Typelevel.Num.Ops","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"tag":"TypeVar","contents":"x"}]}],"fundeps":[[["x"],["q"]],[["q"],["x"]]],"arguments":[["x",null],["q",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[153,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Ops.purs","end":[153,41]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"div10","moduleName":"Data.Typelevel.Num.Ops","info":{"values":[{"type":{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["q",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Typelevel","Num","Ops"],"Div10"],"constraintArgs":[{"tag":"TypeVar","contents":"x"},{"tag":"TypeVar","contents":"q"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"q"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["div10dec",[{"values":[{"sourceSpan":{"start":[64,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Sets.purs","end":[64,52]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"div10Dec","moduleName":"Data.Typelevel.Num.Sets","info":{"values":[{"type":{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["d",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Typelevel","Num","Reps"],":*"]},{"tag":"TypeVar","contents":"x"},{"tag":"TypeVar","contents":"d"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Typelevel","Num","Reps"],":*"]},{"tag":"TypeVar","contents":"x"},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeVar","contents":"x"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["divide",[{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/contravariant/v5.0.0/src/Data/Divide.purs","end":[24,64]},"score":3,"packageInfo":{"values":["contravariant"],"tag":"Package"},"name":"Divide","moduleName":"Data.Divide","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Functor","Contravariant"],"Contravariant"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]}],"fundeps":[],"arguments":[["f",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"`Divide` is the contravariant analogue of `Apply`.\n\nFor example, to test equality of `Point`s, we can use the `Divide` instance\nfor `Equivalence`:\n\n```purescript\ntype Point = Tuple Int Int\n\npointEquiv :: Equivalence Point\npointEquiv = divided defaultEquivalence defaultEquivalence\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[24,3],"name":".spago/contravariant/v5.0.0/src/Data/Divide.purs","end":[24,64]},"score":3,"packageInfo":{"values":["contravariant"],"tag":"Package"},"name":"divide","moduleName":"Data.Divide","info":{"values":[{"typeClassArguments":[["f",null]],"typeClass":[["Data","Divide"],"Divide"],"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Divide"],"Divide"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["divided",[{"values":[{"sourceSpan":{"start":[45,1],"name":".spago/contravariant/v5.0.0/src/Data/Divide.purs","end":[45,65]},"score":3,"packageInfo":{"values":["contravariant"],"tag":"Package"},"name":"divided","moduleName":"Data.Divide","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Divide"],"Divide"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`divided = divide id`\n"}],"tag":"SearchResult"}]],["divisible",[{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/contravariant/v5.0.0/src/Data/Divisible.purs","end":[13,27]},"score":3,"packageInfo":{"values":["contravariant"],"tag":"Package"},"name":"Divisible","moduleName":"Data.Divisible","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Divide"],"Divide"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]}],"fundeps":[],"arguments":[["f",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"`Divisible` is the contravariant analogue of `Applicative`.\n"}],"tag":"SearchResult"}]],["divisionring",[{"values":[{"sourceSpan":{"start":[29,1],"name":".spago/prelude/v5.0.1/src/Data/DivisionRing.purs","end":[30,18]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"DivisionRing","moduleName":"Data.DivisionRing","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]}],"fundeps":[],"arguments":[["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `DivisionRing` class is for non-zero rings in which every non-zero\nelement has a multiplicative inverse. Division rings are sometimes also\ncalled *skew fields*.\n\nInstances must satisfy the following laws in addition to the `Ring` laws:\n\n- Non-zero ring: `one /= zero`\n- Non-zero multiplicative inverse: `recip a * a = a * recip a = one` for\n  all non-zero `a`\n\nThe result of `recip zero` is left undefined; individual instances may\nchoose how to handle this case.\n\nIf a type has both `DivisionRing` and `CommutativeRing` instances, then\nit is a field and should have a `Field` instance.\n"}],"tag":"SearchResult"}]],["divmod",[{"values":[{"sourceSpan":{"start":[94,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Ops.purs","end":[94,52]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"DivMod","moduleName":"Data.Typelevel.Num.Ops","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"tag":"TypeVar","contents":"x"}]},{"constraintClass":[["Data","Typelevel","Num","Sets"],"Pos"],"constraintArgs":[{"tag":"TypeVar","contents":"y"}]}],"fundeps":[[["x","y"],["q","r"]]],"arguments":[["x",null],["y",null],["q",null],["r",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[102,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Ops.purs","end":[102,64]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"divMod","moduleName":"Data.Typelevel.Num.Ops","info":{"values":[{"type":{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["y",{"tag":"ForAll","contents":["q",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Typelevel","Num","Ops"],"DivMod"],"constraintArgs":[{"tag":"TypeVar","contents":"x"},{"tag":"TypeVar","contents":"y"},{"tag":"TypeVar","contents":"q"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"y"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"q"}]},{"tag":"TypeVar","contents":"r"}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["divmod10",[{"values":[{"sourceSpan":{"start":[125,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Ops.purs","end":[125,60]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"DivMod10","moduleName":"Data.Typelevel.Num.Ops","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"tag":"TypeVar","contents":"i"}]},{"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"tag":"TypeVar","contents":"x"}]}],"fundeps":[[["i","l"],["x"]],[["x"],["i","l"]]],"arguments":[["x",null],["i",null],["l",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[147,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Ops.purs","end":[147,59]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"divMod10","moduleName":"Data.Typelevel.Num.Ops","info":{"values":[{"type":{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["q",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Typelevel","Num","Ops"],"DivMod10"],"constraintArgs":[{"tag":"TypeVar","contents":"x"},{"tag":"TypeVar","contents":"q"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"q"}]},{"tag":"TypeVar","contents":"r"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["divmodifying",[{"values":[{"sourceSpan":{"start":[111,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Setter.purs","end":[111,94]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"divModifying","moduleName":"Data.Lens.Setter","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","State","Class"],"MonadState"],"constraintArgs":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","EuclideanRing"],"EuclideanRing"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Setter'"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["divmodp",[{"values":[{"sourceSpan":{"start":[97,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Ops.purs","end":[97,93]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"DivModP","moduleName":"Data.Typelevel.Num.Ops","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Typelevel","Num","Sets"],"Nat"],"constraintArgs":[{"tag":"TypeVar","contents":"x"}]},{"constraintClass":[["Data","Typelevel","Num","Sets"],"Pos"],"constraintArgs":[{"tag":"TypeVar","contents":"y"}]}],"fundeps":[[["x","y","cmp"],["q","r"]],[["q","r","cmp","y"],["x"]],[["q","r","cmp","x"],["y"]]],"arguments":[["x",null],["y",null],["q",null],["r",null],["cmp",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["divover",[{"values":[{"sourceSpan":{"start":[77,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Setter.purs","end":[77,74]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"divOver","moduleName":"Data.Lens.Setter","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","EuclideanRing"],"EuclideanRing"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Setter"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["d7",[{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Reps.purs","end":[18,8]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"D7","moduleName":"Data.Typelevel.Num.Reps","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[52,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Reps.purs","end":[52,9]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"d7","moduleName":"Data.Typelevel.Num.Reps","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["d70",[{"values":[{"sourceSpan":{"start":[66,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[66,20]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"D70","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Typelevel","Num","Reps"],":*"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D0"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[218,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[218,11]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"d70","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Aliases"],"D70"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["d71",[{"values":[{"sourceSpan":{"start":[67,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[67,20]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"D71","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Typelevel","Num","Reps"],":*"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D1"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[220,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[220,11]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"d71","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Aliases"],"D71"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["d72",[{"values":[{"sourceSpan":{"start":[68,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[68,20]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"D72","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Typelevel","Num","Reps"],":*"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D2"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[222,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[222,11]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"d72","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Aliases"],"D72"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["d73",[{"values":[{"sourceSpan":{"start":[69,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[69,20]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"D73","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Typelevel","Num","Reps"],":*"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D3"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[224,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[224,11]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"d73","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Aliases"],"D73"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["d74",[{"values":[{"sourceSpan":{"start":[70,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[70,20]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"D74","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Typelevel","Num","Reps"],":*"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D4"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[226,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[226,11]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"d74","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Aliases"],"D74"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["d75",[{"values":[{"sourceSpan":{"start":[71,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[71,20]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"D75","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Typelevel","Num","Reps"],":*"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D5"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[228,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[228,11]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"d75","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Aliases"],"D75"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["d76",[{"values":[{"sourceSpan":{"start":[72,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[72,20]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"D76","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Typelevel","Num","Reps"],":*"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D6"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[230,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[230,11]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"d76","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Aliases"],"D76"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["d77",[{"values":[{"sourceSpan":{"start":[73,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[73,20]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"D77","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Typelevel","Num","Reps"],":*"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[232,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[232,11]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"d77","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Aliases"],"D77"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["d78",[{"values":[{"sourceSpan":{"start":[74,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[74,20]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"D78","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Typelevel","Num","Reps"],":*"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D8"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[234,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[234,11]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"d78","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Aliases"],"D78"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["d79",[{"values":[{"sourceSpan":{"start":[75,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[75,20]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"D79","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Typelevel","Num","Reps"],":*"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D7"]},{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Reps"],"D9"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[236,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Aliases.purs","end":[236,11]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"d79","moduleName":"Data.Typelevel.Num.Aliases","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Typelevel","Num","Aliases"],"D79"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["c8",[{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Coproduct/Nested.purs","end":[44,57]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"C8","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"C7"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"z"}]}}]},"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null],["f",null],["g",null],["z",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["ala",[{"values":[{"sourceSpan":{"start":[68,1],"name":".spago/newtype/v4.0.0/src/Data/Newtype.purs","end":[75,9]},"score":27,"packageInfo":{"values":["newtype"],"tag":"Package"},"name":"ala","moduleName":"Data.Newtype","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Coerce"],"Coercible"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"t"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"t"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"t"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"This combinator is for when you have a higher order function that you want\nto use in the context of some newtype - `foldMap` being a common example:\n\n``` purescript\nala Additive foldMap [1,2,3,4] -- 10\nala Multiplicative foldMap [1,2,3,4] -- 24\nala Conj foldMap [true, false] -- false\nala Disj foldMap [true, false] -- true\n```\n"}],"tag":"SearchResult"}]],["alaf",[{"values":[{"sourceSpan":{"start":[89,1],"name":".spago/newtype/v4.0.0/src/Data/Newtype.purs","end":[98,9]},"score":27,"packageInfo":{"values":["newtype"],"tag":"Package"},"name":"alaF","moduleName":"Data.Newtype","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Coerce"],"Coercible"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"t"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Coerce"],"Coercible"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"s"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"t"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"t"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"s"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Similar to `ala` but useful for cases where you want to use an additional\nprojection with the higher order function:\n\n``` purescript\nalaF Additive foldMap String.length [\"hello\", \"world\"] -- 10\nalaF Multiplicative foldMap Math.abs [1.0, -2.0, 3.0, -4.0] -- 24.0\n```\n\nThe type admits other possibilities due to the polymorphic `Functor`\nconstraints, but the case described above works because ((->) a) is a\n`Functor`.\n"}],"tag":"SearchResult"}]],["alens",[{"values":[{"sourceSpan":{"start":[108,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Types.purs","end":[108,46]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"ALens","moduleName":"Data.Lens.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Optic"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Internal","Shop"],"Shop"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},"arguments":[["s",null],["t",null],["a",null],["b",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["alens'",[{"values":[{"sourceSpan":{"start":[109,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Types.purs","end":[109,32]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"ALens'","moduleName":"Data.Lens.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"ALens"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]},"arguments":[["s",null],["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["alert",[{"values":[{"sourceSpan":{"start":[74,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Window.purs","end":[74,56]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"alert","moduleName":"Web.HTML.Window","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Window"],"Window"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["align",[{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/these/v5.0.0/src/Data/Align.purs","end":[28,63]},"score":1,"packageInfo":{"values":["these"],"tag":"Package"},"name":"Align","moduleName":"Data.Align","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]}],"fundeps":[],"arguments":[["f",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Align` type class represents an operation similar to `Apply` with\nslightly different semantics. For example:\n\n```purescript\n> align identity (Just 1) Nothing :: These Int Int\nThis 1\n```\n\nInstances are required to satisfy the following laws:\n\n- Idempotency: `join (align identity) == map (join These)`\n- Commutativity `align identity x y == swap <$> align identity y x`\n- Associativity `align identity x (align identity y z) == assoc <$> align identity (align identity x y) z`\n- Functoriality `align identity (f <$> x) (g <$> y) ≡ bimap f g <$> align identity x y`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[28,3],"name":".spago/these/v5.0.0/src/Data/Align.purs","end":[28,63]},"score":1,"packageInfo":{"values":["these"],"tag":"Package"},"name":"align","moduleName":"Data.Align","info":{"values":[{"typeClassArguments":[["f",null]],"typeClass":[["Data","Align"],"Align"],"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Align"],"Align"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"c"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[533,1],"name":".spago/optparse/v4.1.0/src/Text/PrettyPrint/Leijen.purs","end":[533,20]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"align","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The document @(align x)@ renders document @x@ with the nesting\nlevel set to the current column. It is used for example to\nimplement 'hang'.\n\nAs an example, we will put a document right above another one,\nregardless of the current nesting level:\n\n> x $$ y  = align (x <$> y)\n\n> test    = text \"hi\" <+> (text \"nice\" $$ text \"world\")\n\nwhich will be layed out as:\n\n@\nhi nice\n   world\n@\n"}],"tag":"SearchResult"}]],["alignable",[{"values":[{"sourceSpan":{"start":[67,1],"name":".spago/these/v5.0.0/src/Data/Align.purs","end":[68,23]},"score":1,"packageInfo":{"values":["these"],"tag":"Package"},"name":"Alignable","moduleName":"Data.Align","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Align"],"Align"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]}],"fundeps":[],"arguments":[["f",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"`Alignable` adds an identity value for the `align` operation.\n\nInstances are required to satisfy the following laws:\n\n- Left Identity: `align identity nil x == fmap That x`\n- Right Identity: `align identity x nil ≡ fmap This x`\n"}],"tag":"SearchResult"}]],["aligned",[{"values":[{"sourceSpan":{"start":[58,1],"name":".spago/these/v5.0.0/src/Data/Align.purs","end":[58,64]},"score":1,"packageInfo":{"values":["these"],"tag":"Package"},"name":"aligned","moduleName":"Data.Align","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Align"],"Align"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convenience combinator for `align identity`.\n"}],"tag":"SearchResult"}]],["all",[{"values":[{"sourceSpan":{"start":[549,1],"name":".spago/arrays/v6.0.1/src/Data/Array/NonEmpty.purs","end":[549,62]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"all","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[1256,1],"name":".spago/arrays/v6.0.1/src/Data/Array.purs","end":[1256,69]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"all","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns true if all the array elements satisfy the given predicate.\niterating the array only as necessary and stopping as soon as the predicate\nyields false.\n\n```purescript\nall (_ > 0) [] = True\nall (_ > 0) [1, 2, 3] = True\nall (_ > 0) [-1, -2, -3] = False\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[369,1],"name":".spago/foldable-traversable/v5.0.1/src/Data/Foldable.purs","end":[369,76]},"score":24,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"all","moduleName":"Data.Foldable","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`all f` is the same as `and <<< map f`; map a function over the structure,\nand then get the conjunction of the results.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[147,1],"name":".spago/foreign-object/v3.0.0/src/Foreign/Object.purs","end":[147,80]},"score":10,"packageInfo":{"values":["foreign-object"],"tag":"Package"},"name":"all","moduleName":"Foreign.Object","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Foreign","Object"],"Object"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether all key/value pairs in a `Object` satisfy a predicate.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[93,1],"name":".spago/node-fs/v6.1.0/src/Node/FS/Perms.purs","end":[93,12]},"score":3,"packageInfo":{"values":["node-fs"],"tag":"Package"},"name":"all","moduleName":"Node.FS.Perms","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Node","FS","Perms"],"Perm"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"All permissions: readable, writable, and executable. This is the identity\nof the `Semiring` operation `(*)` for `Perm`; that is, it is the same as\n`one`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[258,1],"name":".spago/pipes/v7.0.1/src/Pipes/Prelude.purs","end":[258,79]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"all","moduleName":"Pipes.Prelude","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Core"],"Producer"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"all determines whether all the elements of p satisfy the predicate.\n"}],"tag":"SearchResult"}]],["allchars",[{"values":[{"sourceSpan":{"start":[830,1],"name":".spago/unicode/v5.0.0/src/Data/CodePoint/Unicode/Internal.purs","end":[830,28]},"score":2,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"allchars","moduleName":"Data.CodePoint.Unicode.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Data","CodePoint","Unicode","Internal"],"CharBlock"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["allof",[{"values":[{"sourceSpan":{"start":[65,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Fold.purs","end":[65,91]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"allOf","moduleName":"Data.Lens.Fold","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Fold"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Conj"],"Conj"]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"r"}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Whether all foci of a `Fold` satisfy a predicate.\n"}],"tag":"SearchResult"}]],["allowerror",[{"values":[{"sourceSpan":{"start":[394,1],"name":"src/QueryM.purs","end":[395,77]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"allowError","moduleName":"QueryM","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["allpositionals",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"AllPositionals","moduleName":"Options.Applicative.Types","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["allunique2",[{"values":[{"sourceSpan":{"start":[215,1],"name":"src/Plutus/Types/DataSchema.purs","end":[215,23]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"AllUnique2","moduleName":"Plutus.Types.DataSchema","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["rList",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A class which ensures that the Nat indices of the RowListI are unique & that the Symbol\nlabels of both the RowListI and RowList in a RowListI (RowList k) all contain unique labels\n(relative to  their \"level\", i.e., two record arguments of *different* constructors can\nhave overlapping labels, but constructor names cannot overlap, nor can two labels or indices\nof the *same* record)\n"}],"tag":"SearchResult"}]],["alluniquelabels",[{"values":[{"sourceSpan":{"start":[12,1],"name":"src/TypeLevel/RowList.purs","end":[12,27]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"AllUniqueLabels","moduleName":"TypeLevel.RowList","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["list",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Uniqueness constraint on the labels of an unordered RowList\nCurrent implementation causes a compilation slowdown for complex types\nGH Issue: https://github.com/Plutonomicon/cardano-transaction-lib/issues/433\n"}],"tag":"SearchResult"}]],["alluniquelabelsi",[{"values":[{"sourceSpan":{"start":[58,1],"name":"src/TypeLevel/RowList/Unordered/Indexed.purs","end":[58,28]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"AllUniqueLabelsI","moduleName":"TypeLevel.RowList.Unordered.Indexed","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["list",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Uniqueness constraint on the labels of a RowListI which asserts that all labels are unique.\nAgain, this is needed so that the lookup functions perform in the expected manner.\n"}],"tag":"SearchResult"}]],["allwithindex",[{"values":[{"sourceSpan":{"start":[294,1],"name":".spago/foldable-traversable/v5.0.1/src/Data/FoldableWithIndex.purs","end":[300,7]},"score":24,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"allWithIndex","moduleName":"Data.FoldableWithIndex","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","FoldableWithIndex"],"FoldableWithIndex"],"constraintArgs":[{"tag":"TypeVar","contents":"i"},{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`allWithIndex f` is the same as `and <<< mapWithIndex f`; map a function over the\nstructure, and then get the conjunction of the results.\n"}],"tag":"SearchResult"}]],["alphanum",[{"values":[{"sourceSpan":{"start":[817,1],"name":".spago/parsing/v7.0.1/src/Text/Parsing/Parser/Token.purs","end":[817,56]},"score":0,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"alphaNum","moduleName":"Text.Parsing.Parser.Token","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parse an alphabetical or numerical character.\nMatches any char that satisfies `Data.CodePoint.Unicode.isAlphaNum`.\n"}],"tag":"SearchResult"}]],["alpnprotocols",[{"values":[{"sourceSpan":{"start":[142,1],"name":".spago/node-http/v6.0.0/src/Node/HTTP/Secure.purs","end":[142,19]},"score":1,"packageInfo":{"values":["node-http"],"tag":"Package"},"name":"ALPNProtocols","moduleName":"Node.HTTP.Secure","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The alpnProtocols option can be a String, a Buffer, a Uint8Array, or an\narray of any of those types.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[157,1],"name":".spago/node-http/v6.0.0/src/Node/HTTP/Secure.purs","end":[157,49]},"score":1,"packageInfo":{"values":["node-http"],"tag":"Package"},"name":"alpnProtocols","moduleName":"Node.HTTP.Secure","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"tag":"TypeConstructor","contents":[["Node","HTTP","Secure"],"SSLOptions"]}]},{"tag":"TypeConstructor","contents":[["Node","HTTP","Secure"],"ALPNProtocols"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"See the [node docs](https://nodejs.org/api/tls.html#tls_tls_createserver_options_secureconnectionlistener)\n"}],"tag":"SearchResult"}]],["alpnprotocolsbuffer",[{"values":[{"sourceSpan":{"start":[145,1],"name":".spago/node-http/v6.0.0/src/Node/HTTP/Secure.purs","end":[145,47]},"score":1,"packageInfo":{"values":["node-http"],"tag":"Package"},"name":"alpnProtocolsBuffer","moduleName":"Node.HTTP.Secure","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]},{"tag":"TypeConstructor","contents":[["Node","HTTP","Secure"],"ALPNProtocols"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["alpnprotocolsbufferarray",[{"values":[{"sourceSpan":{"start":[151,1],"name":".spago/node-http/v6.0.0/src/Node/HTTP/Secure.purs","end":[151,58]},"score":1,"packageInfo":{"values":["node-http"],"tag":"Package"},"name":"alpnProtocolsBufferArray","moduleName":"Node.HTTP.Secure","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]}]},{"tag":"TypeConstructor","contents":[["Node","HTTP","Secure"],"ALPNProtocols"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["alpnprotocolsstring",[{"values":[{"sourceSpan":{"start":[143,1],"name":".spago/node-http/v6.0.0/src/Node/HTTP/Secure.purs","end":[143,47]},"score":1,"packageInfo":{"values":["node-http"],"tag":"Package"},"name":"alpnProtocolsString","moduleName":"Node.HTTP.Secure","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Node","HTTP","Secure"],"ALPNProtocols"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["alpnprotocolsstringarray",[{"values":[{"sourceSpan":{"start":[149,1],"name":".spago/node-http/v6.0.0/src/Node/HTTP/Secure.purs","end":[149,58]},"score":1,"packageInfo":{"values":["node-http"],"tag":"Package"},"name":"alpnProtocolsStringArray","moduleName":"Node.HTTP.Secure","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeConstructor","contents":[["Node","HTTP","Secure"],"ALPNProtocols"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["alpnprotocolsuint8array",[{"values":[{"sourceSpan":{"start":[147,1],"name":".spago/node-http/v6.0.0/src/Node/HTTP/Secure.purs","end":[147,55]},"score":1,"packageInfo":{"values":["node-http"],"tag":"Package"},"name":"alpnProtocolsUint8Array","moduleName":"Node.HTTP.Secure","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"Uint8Array"]}]},{"tag":"TypeConstructor","contents":[["Node","HTTP","Secure"],"ALPNProtocols"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["alpnprotocolsuint8arrayarray",[{"values":[{"sourceSpan":{"start":[153,1],"name":".spago/node-http/v6.0.0/src/Node/HTTP/Secure.purs","end":[153,66]},"score":1,"packageInfo":{"values":["node-http"],"tag":"Package"},"name":"alpnProtocolsUint8ArrayArray","moduleName":"Node.HTTP.Secure","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"Uint8Array"]}]}]},{"tag":"TypeConstructor","contents":[["Node","HTTP","Secure"],"ALPNProtocols"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["alt",[{"values":[{"sourceSpan":{"start":[36,1],"name":".spago/control/v5.0.0/src/Control/Alt.purs","end":[37,37]},"score":25,"packageInfo":{"values":["control"],"tag":"Package"},"name":"Alt","moduleName":"Control.Alt","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]}],"fundeps":[],"arguments":[["f",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Alt` type class identifies an associative operation on a type\nconstructor.  It is similar to `Semigroup`, except that it applies to\ntypes of kind `* -> *`, like `Array` or `List`, rather than concrete types\n`String` or `Number`.\n\n`Alt` instances are required to satisfy the following laws:\n\n- Associativity: `(x <|> y) <|> z == x <|> (y <|> z)`\n- Distributivity: `f <$> (x <|> y) == (f <$> x) <|> (f <$> y)`\n\nFor example, the `Array` (`[]`) type is an instance of `Alt`, where\n`(<|>)` is defined to be concatenation.\n\nA common use case is to select the first \"valid\" item, or, if all items\nare \"invalid\", the last \"invalid\" item.\n\nFor example:\n\n```purescript\nimport Control.Alt ((<|>))\nimport Data.Maybe (Maybe(..)\nimport Data.Either (Either(..))\n\nNothing <|> Just 1 <|> Just 2 == Just 1\nLeft \"err\" <|> Right 1 <|> Right 2 == Right 1\nLeft \"err 1\" <|> Left \"err 2\" <|> Left \"err 3\" == Left \"err 3\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[37,3],"name":".spago/control/v5.0.0/src/Control/Alt.purs","end":[37,37]},"score":25,"packageInfo":{"values":["control"],"tag":"Package"},"name":"alt","moduleName":"Control.Alt","info":{"values":[{"typeClassArguments":[["f",null]],"typeClass":[["Control","Alt"],"Alt"],"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alt"],"Alt"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[57,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLAreaElement.purs","end":[57,55]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"alt","moduleName":"Web.HTML.HTMLAreaElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLAreaElement"],"HTMLAreaElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[117,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLImageElement.purs","end":[117,56]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"alt","moduleName":"Web.HTML.HTMLImageElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLImageElement"],"HTMLImageElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[178,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLInputElement.purs","end":[178,57]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"alt","moduleName":"Web.HTML.HTMLInputElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLInputElement"],"HTMLInputElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["alter",[{"values":[{"sourceSpan":{"start":[305,1],"name":".spago/unordered-collections/v2.1.4/src/Data/HashMap.purs","end":[305,91]},"score":0,"packageInfo":{"values":["unordered-collections"],"tag":"Package"},"name":"alter","moduleName":"Data.HashMap","info":{"values":[{"type":{"tag":"ForAll","contents":["k",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Hashable"],"Hashable"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"v"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","HashMap"],"HashMap"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Insert a value, delete a value, or update a value for a key in a map.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[562,1],"name":".spago/ordered-collections/v2.0.2/src/Data/Map/Internal.purs","end":[562,78]},"score":5,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"alter","moduleName":"Data.Map.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["k",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"v"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Insert the value, delete a value, or update a value for a key in a map\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[208,1],"name":".spago/foreign-object/v3.0.0/src/Foreign/Object.purs","end":[208,74]},"score":10,"packageInfo":{"values":["foreign-object"],"tag":"Package"},"name":"alter","moduleName":"Foreign.Object","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Foreign","Object"],"Object"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Foreign","Object"],"Object"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Insert, remove or update a value for a key in a map\n"}],"tag":"SearchResult"}]],["alterat",[{"values":[{"sourceSpan":{"start":[306,1],"name":".spago/arrays/v6.0.1/src/Data/Array/NonEmpty.purs","end":[306,81]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"alterAt","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[588,1],"name":".spago/arrays/v6.0.1/src/Data/Array.purs","end":[588,73]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"alterAt","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Update or delete the element at the specified index by applying a\nfunction to the current value, returning a new array or `Nothing` if the\nindex is out-of-bounds.\n\n```purescript\nalterAt 1 (stripSuffix $ Pattern \"!\") [\"Hello\", \"World!\"]\n   = Just [\"Hello\", \"World\"]\n\nalterAt 1 (stripSuffix $ Pattern \"!!!!!\") [\"Hello\", \"World!\"]\n   = Just [\"Hello\"]\n\nalterAt 10 (stripSuffix $ Pattern \"!\") [\"Hello\", \"World!\"] = Nothing\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[378,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy.purs","end":[378,63]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"alterAt","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Update or delete the element at the specified index by applying a\nfunction to the current value, returning a new list, or return the\noriginal list unchanged if the index is out-of-bounds.\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[354,1],"name":".spago/lists/v6.0.1/src/Data/List.purs","end":[354,71]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"alterAt","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Update or delete the element at the specified index by applying a\nfunction to the current value, returning a new list or `Nothing` if the\nindex is out-of-bounds.\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"}]],["alternate",[{"values":[{"sourceSpan":{"start":[19,1],"name":".spago/control/v5.0.0/src/Data/Monoid/Alternate.purs","end":[19,40]},"score":25,"packageInfo":{"values":["control"],"tag":"Package"},"name":"Alternate","moduleName":"Data.Monoid.Alternate","info":{"values":[{"typeArguments":[["f",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Monoid and semigroup instances corresponding to `Plus` and `Alt` instances\nfor `f`\n\n``` purescript\nAlternate fx <> Alternate fy == Alternate (fx <|> fy)\nmempty :: Alternate _ == Alternate empty\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":25,"packageInfo":{"values":["control"],"tag":"Package"},"name":"Alternate","moduleName":"Data.Monoid.Alternate","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["alternative",[{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/control/v5.0.0/src/Control/Alternative.purs","end":[27,47]},"score":25,"packageInfo":{"values":["control"],"tag":"Package"},"name":"Alternative","moduleName":"Control.Alternative","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"constraintClass":[["Control","Plus"],"Plus"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]}],"fundeps":[],"arguments":[["f",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Alternative` type class has no members of its own; it just specifies\nthat the type constructor has both `Applicative` and `Plus` instances.\n\nTypes which have `Alternative` instances should also satisfy the following\nlaws:\n\n- Distributivity: `(f <|> g) <*> x == (f <*> x) <|> (g <*> x)`\n- Annihilation: `empty <*> f = empty`\n"}],"tag":"SearchResult"}]],["alternativeidentity",[{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/properties/v0.2.0/src/Control/Algebra/Properties.purs","end":[15,64]},"score":1,"packageInfo":{"values":["properties"],"tag":"Package"},"name":"alternativeIdentity","moduleName":"Control.Algebra.Properties","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["altnode",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"AltNode","moduleName":"Options.Applicative.Types","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptTree"]},{"tag":"TypeVar","contents":"a"}]}}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["altp",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"AltP","moduleName":"Options.Applicative.Types","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"tag":"TypeVar","contents":"a"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["always",[{"values":[{"sourceSpan":{"start":[358,1],"name":"src/Types/Interval.purs","end":[358,41]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"always","moduleName":"Types.Interval","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Types","Interval"],"Interval"]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"An `Interval` that covers every slot.\n"}],"tag":"SearchResult"}]],["alwaysmintspolicy",[{"values":[{"sourceSpan":{"start":[68,1],"name":"examples/AlwaysMints.purs","end":[68,47]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"alwaysMintsPolicy","moduleName":"Examples.AlwaysMints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Monad"],"Contract"]},{"tag":"REmpty","contents":{}}]},{"tag":"TypeConstructor","contents":[["Types","Scripts"],"MintingPolicy"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["alwayssucceedsscript",[{"values":[{"sourceSpan":{"start":[120,1],"name":"examples/AlwaysSucceeds.purs","end":[120,46]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"alwaysSucceedsScript","moduleName":"Examples.AlwaysSucceeds","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Monad"],"Contract"]},{"tag":"REmpty","contents":{}}]},{"tag":"TypeConstructor","contents":[["Types","Scripts"],"Validator"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_nativescripts",[{"values":[{"sourceSpan":{"start":[723,1],"name":"src/Cardano/Types/Transaction.purs","end":[723,75]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"_nativeScripts","moduleName":"Cardano.Types.Transaction","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Transaction"],"TransactionWitnessSet"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Transaction"],"NativeScript"]}]}}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_networkid",[{"values":[{"sourceSpan":{"start":[672,1],"name":"src/Cardano/Types/Transaction.purs","end":[672,45]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"_networkId","moduleName":"Cardano.Types.Transaction","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Transaction"],"TxBody"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"NetworkId"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_newpage",[{"values":[{"sourceSpan":{"start":[334,1],"name":".spago/purescript-toppokki/6983e07bf0aa55ab779bcef12df3df339a2b5bd9/src/Toppoki.purs","end":[334,66]},"score":0,"packageInfo":{"values":["purescript-toppokki"],"tag":"Package"},"name":"_newPage","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn1"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Browser"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Promise"],"Promise"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Page"]}]}}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_newredeemertag",[{"values":[{"sourceSpan":{"start":[225,1],"name":"src/Serialization/WitnessSet.purs","end":[225,63]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"_newRedeemerTag","moduleName":"Serialization.WitnessSet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Serialization","Types"],"RedeemerTag"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_newtype",[{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Iso/Newtype.purs","end":[11,70]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"_Newtype","moduleName":"Data.Lens.Iso.Newtype","info":{"values":[{"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Iso"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"An Iso between a newtype and its inner type.\nSupports switching between different types that have instances of the\nNewtype type class.\nIf you don't need to change types, you may have a better experience with\ntype inference if you use `simple _Newtype`.\n"}],"tag":"SearchResult"}]],["_nothing",[{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Prism/Maybe.purs","end":[11,60]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"_Nothing","moduleName":"Data.Lens.Prism.Maybe","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Prism for the `Nothing` constructor of `Maybe`.\n"}],"tag":"SearchResult"}]],["_null",[{"values":[{"sourceSpan":{"start":[8,1],"name":".spago/argonaut-traversals/v9.0.0/src/Data/Argonaut/Prisms.purs","end":[8,26]},"score":1,"packageInfo":{"values":["argonaut-traversals"],"tag":"Package"},"name":"_Null","moduleName":"Data.Argonaut.Prisms","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_number",[{"values":[{"sourceSpan":{"start":[14,1],"name":".spago/argonaut-traversals/v9.0.0/src/Data/Argonaut/Prisms.purs","end":[14,30]},"score":1,"packageInfo":{"values":["argonaut-traversals"],"tag":"Package"},"name":"_Number","moduleName":"Data.Argonaut.Prisms","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],[">+>",[{"values":[{"sourceSpan":{"start":[117,1],"name":".spago/pipes/v7.0.1/src/Pipes/Core.purs","end":[117,40]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"(>+>)","moduleName":"Pipes.Core","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["<-/>",[{"values":[{"sourceSpan":{"start":[192,1],"name":".spago/parsing/v7.0.1/src/Text/Parsing/Parser/Indent.purs","end":[192,29]},"score":0,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"(<-/>)","moduleName":"Text.Parsing.Indent","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["<-<",[{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/pipes/v7.0.1/src/Pipes.purs","end":[16,35]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"(<-<)","moduleName":"Pipes","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["+>>",[{"values":[{"sourceSpan":{"start":[116,1],"name":".spago/pipes/v7.0.1/src/Pipes/Core.purs","end":[116,40]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"(+>>)","moduleName":"Pipes.Core","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]]]