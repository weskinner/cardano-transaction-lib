// This file was generated by purescript-docs-search.
window.DocsSearchIndex["45"] = [["back",[{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"Back","moduleName":"Ansi.Codes","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/History.purs","end":[26,46]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"back","moduleName":"Web.HTML.History","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","History"],"History"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["background",[{"values":[{"sourceSpan":{"start":[51,1],"name":".spago/ansi/v6.1.0/src/Ansi/Output.purs","end":[51,50]},"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"background","moduleName":"Ansi.Output","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"Color"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"GraphicsParam"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["backslash",[{"values":[{"sourceSpan":{"start":[332,1],"name":".spago/optparse/v4.1.0/src/Text/PrettyPrint/Leijen.purs","end":[332,17]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"backslash","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The document @backslash@ contains a back slash, \\\"\\\\\\\".\n"}],"tag":"SearchResult"}]],["backtrack",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"Backtrack","moduleName":"Options.Applicative.Types","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["backtracking",[{"values":[{"sourceSpan":{"start":[113,1],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Types.purs","end":[116,20]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"Backtracking","moduleName":"Options.Applicative.Types","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["badinput",[{"values":[{"sourceSpan":{"start":[45,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/ValidityState.purs","end":[45,44]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"badInput","moduleName":"Web.HTML.ValidityState","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","ValidityState"],"ValidityState"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["balanceandsigntx",[{"values":[{"sourceSpan":{"start":[487,1],"name":"src/Contract/Transaction.purs","end":[490,50]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"balanceAndSignTx","moduleName":"Contract.Transaction","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","ScriptLookups"],"UnattachedUnbalancedTx"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Monad"],"Contract"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Contract","Transaction"],"BalancedSignedTransaction"]}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A helper that wraps a few steps into: balance an unbalanced transaction\n(`balanceTx`), reindex script spend redeemers (not minting redeemers)\n(`reindexSpentScriptRedeemers`), attach datums and redeemers to the\ntransaction (`finalizeTx`), and finally sign (`signTransactionBytes`).\nThe return type includes the balanced (but unsigned) transaction for\nlogging and more importantly, the `ByteArray` to be used with `Submit` to\nsubmit the transaction.\nIf successful, transaction inputs will be locked afterwards.\nIf you want to re-use them in the same 'QueryM' context, call\n`unlockTransactionInputs`.\n"}],"tag":"SearchResult"}]],["balanceandsigntxe",[{"values":[{"sourceSpan":{"start":[466,1],"name":"src/Contract/Transaction.purs","end":[469,57]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"balanceAndSignTxE","moduleName":"Contract.Transaction","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","ScriptLookups"],"UnattachedUnbalancedTx"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Monad"],"Contract"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"tag":"TypeConstructor","contents":[["Contract","Transaction"],"BalancedSignedTransaction"]}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Balances an unbalanced transaction and signs it.\n\nThe return type includes the balanced (but unsigned) transaction for\nlogging and more importantly, the `ByteArray` to be used with `submit` to\nsubmit the transaction.\nIf successful, transaction inputs will be locked afterwards.\nIf you want to re-use them in the same 'QueryM' context, call\n`unlockTransactionInputs`.\n"}],"tag":"SearchResult"}]],["balanceandsigntxs",[{"values":[{"sourceSpan":{"start":[451,1],"name":"src/Contract/Transaction.purs","end":[454,50]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"balanceAndSignTxs","moduleName":"Contract.Transaction","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Types","ScriptLookups"],"UnattachedUnbalancedTx"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Monad"],"Contract"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Contract","Transaction"],"BalancedSignedTransaction"]}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Like `balanceAndSignTx`, but for more than one transaction.\nThis function may throw errors through the contract Monad.\nIf successful, transaction inputs will be locked afterwards.\nIf you want to re-use them in the same 'QueryM' context, call\n`unlockTransactionInputs`.\n"}],"tag":"SearchResult"}]],["balancedsignedtransaction",[{"values":[{"sourceSpan":{"start":[436,1],"name":"src/Contract/Transaction.purs","end":[436,74]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"BalancedSignedTransaction","moduleName":"Contract.Transaction","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"BalancedSignedTransaction","moduleName":"Contract.Transaction","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Cardano","Types","Transaction"],"Transaction"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["balancenonadaoutscannotminus",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"BalanceNonAdaOutsCannotMinus","moduleName":"BalanceTx","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["BalanceTx"],"CannotMinusError"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["balancenonadaoutserror",[{"values":[{"sourceSpan":{"start":[249,1],"name":"src/BalanceTx/BalanceTx.purs","end":[251,50]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"BalanceNonAdaOutsError","moduleName":"BalanceTx","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["balancenonadaoutserror'",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"BalanceNonAdaOutsError'","moduleName":"BalanceTx","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["BalanceTx"],"BalanceNonAdaOutsError"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["balancetx",[{"values":[{"sourceSpan":{"start":[623,1],"name":"src/BalanceTx/BalanceTx.purs","end":[625,57]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"balanceTx","moduleName":"BalanceTx","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","ScriptLookups"],"UnattachedUnbalancedTx"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["QueryM"],"QueryM"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["BalanceTx"],"BalanceTxError"]}]},{"tag":"TypeConstructor","contents":[["BalanceTx"],"FinalizedTransaction"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Balances an unbalanced transaction. For submitting a tx via Nami, the\nutxo set shouldn't include the collateral which is vital for balancing.\nIn particular, the transaction inputs must not include the collateral.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[261,1],"name":"src/Contract/Transaction.purs","end":[264,76]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"balanceTx","moduleName":"Contract.Transaction","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","ScriptLookups"],"UnattachedUnbalancedTx"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Monad"],"Contract"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["BalanceTx"],"BalanceTxError"]}]},{"tag":"TypeConstructor","contents":[["BalanceTx"],"FinalizedTransaction"]}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attempts to balance an `UnattachedUnbalancedTx`.\n"}],"tag":"SearchResult"}]],["balancetxerror",[{"values":[{"sourceSpan":{"start":[142,1],"name":"src/BalanceTx/BalanceTx.purs","end":[153,55]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"BalanceTxError","moduleName":"BalanceTx","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["balancetxinscannotminus",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"BalanceTxInsCannotMinus","moduleName":"BalanceTx","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["BalanceTx"],"CannotMinusError"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["balancetxinserror",[{"values":[{"sourceSpan":{"start":[216,1],"name":"src/BalanceTx/BalanceTx.purs","end":[219,41]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"BalanceTxInsError","moduleName":"BalanceTx","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["balancetxinserror'",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"BalanceTxInsError'","moduleName":"BalanceTx","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["BalanceTx"],"BalanceTxInsError"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["balancetxm",[{"values":[{"sourceSpan":{"start":[415,1],"name":"src/Contract/Transaction.purs","end":[418,45]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"balanceTxM","moduleName":"Contract.Transaction","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","ScriptLookups"],"UnattachedUnbalancedTx"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Monad"],"Contract"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["BalanceTx"],"FinalizedTransaction"]}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attempts to balance an `UnattachedUnbalancedTx` hushing the error.\n"}],"tag":"SearchResult"}]],["balancetxswithaddress",[{"values":[{"sourceSpan":{"start":[368,1],"name":"src/Contract/Transaction.purs","end":[375,41]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"balanceTxsWithAddress","moduleName":"Contract.Transaction","info":{"values":[{"type":{"tag":"ForAll","contents":["t",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Traversable"],"Traversable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Plutus","Types","Address"],"Address"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeConstructor","contents":[["Types","ScriptLookups"],"UnattachedUnbalancedTx"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Monad"],"Contract"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeConstructor","contents":[["BalanceTx"],"FinalizedTransaction"]}]}}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Like `balanceTxs`, but uses `balanceTxWithAddress` instead of `balanceTx`\ninternally.\n"}],"tag":"SearchResult"}]],["balancetxwithaddress",[{"values":[{"sourceSpan":{"start":[482,1],"name":"src/BalanceTx/BalanceTx.purs","end":[485,57]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"balanceTxWithAddress","moduleName":"BalanceTx","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"Address"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","ScriptLookups"],"UnattachedUnbalancedTx"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["QueryM"],"QueryM"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["BalanceTx"],"BalanceTxError"]}]},{"tag":"TypeConstructor","contents":[["BalanceTx"],"FinalizedTransaction"]}]}}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Like `balanceTx`, but allows to provide an address that is treated like\nuser's own (while `balanceTx` gets it from the wallet).\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[268,1],"name":"src/Contract/Transaction.purs","end":[272,76]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"balanceTxWithAddress","moduleName":"Contract.Transaction","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Plutus","Types","Address"],"Address"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","ScriptLookups"],"UnattachedUnbalancedTx"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Monad"],"Contract"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["BalanceTx"],"BalanceTxError"]}]},{"tag":"TypeConstructor","contents":[["BalanceTx"],"FinalizedTransaction"]}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attempts to balance an `UnattachedUnbalancedTx`.\n"}],"tag":"SearchResult"}]],["base36",[{"values":[{"sourceSpan":{"start":[188,1],"name":".spago/integers/v5.0.0/src/Data/Int.purs","end":[188,16]},"score":20,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"base36","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Int"],"Radix"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The base-36 system.\n"}],"tag":"SearchResult"}]],["base58string",[{"values":[{"sourceSpan":{"start":[11,1],"name":"src/Types/Aliases.purs","end":[11,27]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Base58String","moduleName":"Types.Aliases","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"IMPORTANT: All functions accepting `Base58String` should behave correctly in\ncase `Base58String` is not in expected base58 format.\nThe type alias is here to make the intention of code more readable.\n"}],"tag":"SearchResult"}]],["base64",[{"values":[{"sourceSpan":null,"score":7,"packageInfo":{"values":["node-buffer"],"tag":"Package"},"name":"Base64","moduleName":"Node.Encoding","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["baseaddress",[{"values":[{"sourceSpan":{"start":[209,1],"name":"src/Serialization/Address.purs","end":[209,40]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"BaseAddress","moduleName":"Serialization.Address","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[351,1],"name":"src/Serialization/Address.purs","end":[356,17]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"baseAddress","moduleName":"Serialization.Address","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["network",{"tag":"TypeConstructor","contents":[["Serialization","Address"],"NetworkId"]},{"tag":"RCons","contents":["paymentCred",{"tag":"TypeConstructor","contents":[["Serialization","Address"],"StakeCredential"]},{"tag":"RCons","contents":["delegationCred",{"tag":"TypeConstructor","contents":[["Serialization","Address"],"StakeCredential"]},{"tag":"REmpty","contents":{}}]}]}]}]}]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"BaseAddress"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["baseaddressbech32",[{"values":[{"sourceSpan":{"start":[459,1],"name":"src/Serialization/Address.purs","end":[459,49]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"baseAddressBech32","moduleName":"Serialization.Address","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"BaseAddress"]}]},{"tag":"TypeConstructor","contents":[["Types","Aliases"],"Bech32String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["baseaddressbytes",[{"values":[{"sourceSpan":{"start":[456,1],"name":"src/Serialization/Address.purs","end":[456,45]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"baseAddressBytes","moduleName":"Serialization.Address","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"BaseAddress"]}]},{"tag":"TypeConstructor","contents":[["Types","CborBytes"],"CborBytes"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["baseaddressdelegationcred",[{"values":[{"sourceSpan":{"start":[360,1],"name":"src/Serialization/Address.purs","end":[360,75]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"baseAddressDelegationCred","moduleName":"Serialization.Address","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"BaseAddress"]}]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"StakeCredential"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["baseaddressfromaddress",[{"values":[{"sourceSpan":{"start":[453,1],"name":"src/Serialization/Address.purs","end":[453,55]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"baseAddressFromAddress","moduleName":"Serialization.Address","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"Address"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"BaseAddress"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["baseaddressfrombech32",[{"values":[{"sourceSpan":{"start":[465,1],"name":"src/Serialization/Address.purs","end":[465,59]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"baseAddressFromBech32","moduleName":"Serialization.Address","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","Aliases"],"Bech32String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"BaseAddress"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["baseaddressfrombytes",[{"values":[{"sourceSpan":{"start":[462,1],"name":"src/Serialization/Address.purs","end":[462,55]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"baseAddressFromBytes","moduleName":"Serialization.Address","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","CborBytes"],"CborBytes"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"BaseAddress"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["baseaddressnetworkid",[{"values":[{"sourceSpan":{"start":[468,1],"name":"src/Serialization/Address.purs","end":[468,49]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"baseAddressNetworkId","moduleName":"Serialization.Address","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"BaseAddress"]}]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"NetworkId"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["baseaddresspaymentcred",[{"values":[{"sourceSpan":{"start":[359,1],"name":"src/Serialization/Address.purs","end":[359,72]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"baseAddressPaymentCred","moduleName":"Serialization.Address","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"BaseAddress"]}]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"StakeCredential"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["baseaddresstoaddress",[{"values":[{"sourceSpan":{"start":[364,1],"name":"src/Serialization/Address.purs","end":[364,62]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"baseAddressToAddress","moduleName":"Serialization.Address","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"BaseAddress"]}]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"Address"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["basedigits",[{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/bigints/v6.0.0/src/Data/BigInt.purs","end":[47,4]},"score":0,"packageInfo":{"values":["bigints"],"tag":"Package"},"name":"BaseDigits","moduleName":"Data.BigInt","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["value",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["isNegative",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"REmpty","contents":{}}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["basename",[{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/node-path/v4.0.0/src/Node/Path.purs","end":[27,48]},"score":2,"packageInfo":{"values":["node-path"],"tag":"Package"},"name":"basename","moduleName":"Node.Path","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Return the last portion of a path.\n"}],"tag":"SearchResult"}]],["basenamewithoutext",[{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/node-path/v4.0.0/src/Node/Path.purs","end":[31,70]},"score":2,"packageInfo":{"values":["node-path"],"tag":"Package"},"name":"basenameWithoutExt","moduleName":"Node.Path","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Return the last portion of a path, also dropping a specific file extension\nif it matches the end of the name.\n"}],"tag":"SearchResult"}]],["baseprops",[{"values":[{"sourceSpan":{"start":[159,1],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Builder/Internal.purs","end":[159,27]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"baseProps","moduleName":"Options.Applicative.Builder.Internal","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptProperties"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Base default properties.\n"}],"tag":"SearchResult"}]],["baseuri",[{"values":[{"sourceSpan":{"start":[72,1],"name":".spago/web-dom/v5.0.0/src/Web/DOM/Node.purs","end":[72,48]},"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"baseURI","moduleName":"Web.DOM.Node","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The node's base URL.\n"}],"tag":"SearchResult"}]],["bashcompleter",[{"values":[{"sourceSpan":{"start":[40,1],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Builder/Completer.purs","end":[40,37]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"bashCompleter","moduleName":"Options.Applicative.Builder.Completer","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Run a compgen completion action.\n"}],"tag":"SearchResult"}]],["bashcompletionparser",[{"values":[{"sourceSpan":{"start":[49,1],"name":".spago/optparse/v4.1.0/src/Options/Applicative/BashCompletion.purs","end":[49,89]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"bashCompletionParser","moduleName":"Options.Applicative.BashCompletion","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"CompletionResult"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["bazaar",[{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Internal/Bazaar.purs","end":[15,85]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"Bazaar","moduleName":"Data.Lens.Internal.Bazaar","info":{"values":[{"typeArguments":[["p",null],["a",null],["b",null],["s",null],["t",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"This is used to characterize a Traversal.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"Bazaar","moduleName":"Data.Lens.Internal.Bazaar","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"t"}]}]}]}]},null]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["abbr",[{"values":[{"sourceSpan":{"start":[66,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLTableHeaderCellElement.purs","end":[66,67]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"abbr","moduleName":"Web.HTML.HTMLTableHeaderCellElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLTableHeaderCellElement"],"HTMLTableHeaderCellElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["abort",[{"values":[{"sourceSpan":{"start":[48,1],"name":".spago/web-file/v3.0.0/src/Web/File/FileReader.purs","end":[48,50]},"score":2,"packageInfo":{"values":["web-file"],"tag":"Package"},"name":"abort","moduleName":"Web.File.FileReader","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","File","FileReader"],"FileReader"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[5,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Event/EventTypes.purs","end":[5,19]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"abort","moduleName":"Web.HTML.Event.EventTypes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/web-xhr/v4.1.0/src/Web/XHR/EventTypes.purs","end":[11,19]},"score":1,"packageInfo":{"values":["web-xhr"],"tag":"Package"},"name":"abort","moduleName":"Web.XHR.EventTypes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/web-xhr/v4.1.0/src/Web/XHR/XMLHttpRequest.purs","end":[63,55]},"score":1,"packageInfo":{"values":["web-xhr"],"tag":"Package"},"name":"abort","moduleName":"Web.XHR.XMLHttpRequest","info":{"values":[{"type":{"tag":"ForAll","contents":["res",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Web","XHR","XMLHttpRequest"],"XMLHttpRequest"]},{"tag":"TypeVar","contents":"res"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["abortoption",[{"values":[{"sourceSpan":{"start":[344,1],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Builder.purs","end":[344,84]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"abortOption","moduleName":"Options.Applicative.Builder","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParseError"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"OptionFields"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"An option that always fails.\n\nWhen this option is encountered, the option parser immediately aborts with\nthe given parse error.  If you simply want to output a message, use\n'infoOption' instead.\n"}],"tag":"SearchResult"}]],["above",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Above","moduleName":"Prim.TypeError","info":{"values":[{"kind":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim","TypeError"],"Doc"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim","TypeError"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Prim","TypeError"],"Doc"]}]}]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"The Above type constructor combines two Docs vertically\nin a custom type error.\n\nFor more information, see\n[the Custom Type Errors guide](https://github.com/purescript/documentation/blob/master/guides/Custom-Type-Errors.md).\n"}],"tag":"SearchResult"}]],["abs",[{"values":[{"sourceSpan":{"start":[85,1],"name":".spago/bigints/v6.0.0/src/Data/BigInt.purs","end":[85,39]},"score":0,"packageInfo":{"values":["bigints"],"tag":"Package"},"name":"abs","moduleName":"Data.BigInt","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The absolute value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[211,1],"name":".spago/prelude/v5.0.1/src/Data/Ord.purs","end":[211,43]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"abs","moduleName":"Data.Ord","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The absolute value function. `abs x` is defined as `if x >= zero then x\nelse negate x`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[9,1],"name":".spago/math/v3.0.0/src/Math.purs","end":[9,39]},"score":12,"packageInfo":{"values":["math"],"tag":"Package"},"name":"abs","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the absolute value of the argument.\n"}],"tag":"SearchResult"}]],["absorbtion",[{"values":[{"sourceSpan":{"start":[6,1],"name":".spago/properties/v0.2.0/src/Control/Algebra/Properties.purs","end":[6,69]},"score":1,"packageInfo":{"values":["properties"],"tag":"Package"},"name":"absorbtion","moduleName":"Control.Algebra.Properties","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["abstime",[{"values":[{"sourceSpan":{"start":[682,1],"name":"src/Types/Interval.purs","end":[682,33]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"AbsTime","moduleName":"Types.Interval","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Absolute time relative to System Start, not UNIX epoch.\nTreat as Milliseconds\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"AbsTime","moduleName":"Types.Interval","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["absurd",[{"values":[{"sourceSpan":{"start":[36,1],"name":".spago/prelude/v5.0.1/src/Data/Void.purs","end":[36,30]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"absurd","moduleName":"Data.Void","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Eliminator for the `Void` type.\nUseful for stating that some code branch is impossible because you've\n\"acquired\" a value of type `Void` (which you can't).\n\n```purescript\nrightOnly :: forall t . Either Void t -> t\nrightOnly (Left v) = absurd v\nrightOnly (Right t) = t\n```\n"}],"tag":"SearchResult"}]],["_2",[{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Lens/Product.purs","end":[16,71]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"_2","moduleName":"Data.Lens.Lens.Product","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Product"],"Product"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Product"],"Product"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"h"},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Lens for the second component of a `Product`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Lens/Tuple.purs","end":[16,53]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"_2","moduleName":"Data.Lens.Lens.Tuple","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Lens for the second component of a `Tuple`.\n"}],"tag":"SearchResult"}]],["<#>",[{"values":[{"sourceSpan":{"start":[38,1],"name":".spago/prelude/v5.0.1/src/Data/Functor.purs","end":[38,27]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"(<#>)","moduleName":"Data.Functor","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["-",[{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/prelude/v5.0.1/src/Data/Ring.purs","end":[26,18]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"(-)","moduleName":"Data.Ring","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[71,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Ops.purs","end":[71,18]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"(-)","moduleName":"Data.Typelevel.Num.Ops","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]]]