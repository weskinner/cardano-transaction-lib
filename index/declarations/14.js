// This file was generated by purescript-docs-search.
window.DocsSearchIndex["14"] = [["w_plus",[{"values":[{"sourceSpan":null,"score":3,"packageInfo":{"values":["node-fs"],"tag":"Package"},"name":"W_PLUS","moduleName":"Node.FS","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["tbodies",[{"values":[{"sourceSpan":{"start":[133,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLTableElement.purs","end":[133,68]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"tBodies","moduleName":"Web.HTML.HTMLTableElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLTableElement"],"HTMLTableElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"HTMLCollection"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["scale",[{"values":[{"sourceSpan":{"start":[176,1],"name":"src/Plutus/Types/Value.purs","end":[176,34]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"scale","moduleName":"Plutus.Types.Value","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Plutus","Types","Value"],"Value"]}]},{"tag":"TypeConstructor","contents":[["Plutus","Types","Value"],"Value"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns a new `Value` with all amounts multiplied by `s`.\n"}],"tag":"SearchResult"}]],["scan",[{"values":[{"sourceSpan":{"start":[152,1],"name":".spago/pipes/v7.0.1/src/Pipes/Prelude.purs","end":[155,52]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"scan","moduleName":"Pipes.Prelude","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"x"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Core"],"Pipe"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Left scan\n"}],"tag":"SearchResult"}]],["scanl",[{"values":[{"sourceSpan":{"start":[243,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/List/Trans.purs","end":[243,79]},"score":19,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"scanl","moduleName":"Control.Monad.List.Trans","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Fold a list from the left, accumulating the list of results using the specified function.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[366,1],"name":".spago/arrays/v6.0.1/src/Data/Array/NonEmpty.purs","end":[366,78]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"scanl","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[794,1],"name":".spago/arrays/v6.0.1/src/Data/Array.purs","end":[794,77]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"scanl","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Fold a data structure from the left, keeping all intermediate results\ninstead of only the final result. Note that the initial value does not\nappear in the result (unlike Haskell's `Prelude.scanl`).\n\n```\nscanl (+) 0  [1,2,3] = [1,3,6]\nscanl (-) 10 [1,2,3] = [9,7,4]\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[217,1],"name":".spago/foldable-traversable/v5.0.1/src/Data/Traversable.purs","end":[217,73]},"score":24,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"scanl","moduleName":"Data.Traversable","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Traversable"],"Traversable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Fold a data structure from the left, keeping all intermediate results\ninstead of only the final result. Note that the initial value does not\nappear in the result (unlike Haskell's `Prelude.scanl`).\n\n```purescript\nscanl (+) 0  [1,2,3] = [1,3,6]\nscanl (-) 10 [1,2,3] = [9,7,4]\n```\n"}],"tag":"SearchResult"}]],["scanllazy",[{"values":[{"sourceSpan":{"start":[773,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy.purs","end":[773,64]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"scanlLazy","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Perform a left scan lazily\n"}],"tag":"SearchResult"}]],["scanlwithindex",[{"values":[{"sourceSpan":{"start":[152,1],"name":".spago/foldable-traversable/v5.0.1/src/Data/TraversableWithIndex.purs","end":[158,9]},"score":24,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"scanlWithIndex","moduleName":"Data.TraversableWithIndex","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","TraversableWithIndex"],"TraversableWithIndex"],"constraintArgs":[{"tag":"TypeVar","contents":"i"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Fold a data structure from the left with access to the indices, keeping\nall intermediate results instead of only the final result. Note that the\ninitial value does not appear in the result (unlike Haskell's\n`Prelude.scanl`).\n\n```purescript\nscanlWithIndex (\\i y x -> i + y + x) 0 [1, 2, 3] = [1, 4, 9]\n```\n"}],"tag":"SearchResult"}]],["scanm",[{"values":[{"sourceSpan":{"start":[165,1],"name":".spago/pipes/v7.0.1/src/Pipes/Prelude.purs","end":[168,58]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"scanM","moduleName":"Pipes.Prelude","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"x"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Core"],"Pipe"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Monadic left scan\n"}],"tag":"SearchResult"}]],["scanr",[{"values":[{"sourceSpan":{"start":[369,1],"name":".spago/arrays/v6.0.1/src/Data/Array/NonEmpty.purs","end":[369,78]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"scanr","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[804,1],"name":".spago/arrays/v6.0.1/src/Data/Array.purs","end":[804,77]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"scanr","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Fold a data structure from the right, keeping all intermediate results\ninstead of only the final result. Note that the initial value does not\nappear in the result (unlike Haskell's `Prelude.scanr`).\n\n```\nscanr (+) 0 [1,2,3] = [6,5,3]\nscanr (flip (-)) 10 [1,2,3] = [4,5,7]\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[242,1],"name":".spago/foldable-traversable/v5.0.1/src/Data/Traversable.purs","end":[242,73]},"score":24,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"scanr","moduleName":"Data.Traversable","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Traversable"],"Traversable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Fold a data structure from the right, keeping all intermediate results\ninstead of only the final result. Note that the initial value does not\nappear in the result (unlike Haskell's `Prelude.scanr`).\n\n```purescript\nscanr (+) 0 [1,2,3] = [6,5,3]\nscanr (flip (-)) 10 [1,2,3] = [4,5,7]\n```\n"}],"tag":"SearchResult"}]],["scanrwithindex",[{"values":[{"sourceSpan":{"start":[183,1],"name":".spago/foldable-traversable/v5.0.1/src/Data/TraversableWithIndex.purs","end":[189,9]},"score":24,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"scanrWithIndex","moduleName":"Data.TraversableWithIndex","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","TraversableWithIndex"],"TraversableWithIndex"],"constraintArgs":[{"tag":"TypeVar","contents":"i"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"b"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Fold a data structure from the right with access to the indices, keeping\nall intermediate results instead of only the final result. Note that the\ninitial value does not appear in the result (unlike Haskell's `Prelude.scanr`).\n\n```purescript\nscanrWithIndex (\\i x y -> i + x + y) 0 [1, 2, 3] = [9, 8, 5]\n```\n"}],"tag":"SearchResult"}]],["schar",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"SChar","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Char"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["schar'",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"SChar'","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Char"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"LazySimpleDoc"]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["schema",[{"values":[{"sourceSpan":{"start":[9,1],"name":".spago/medea/8b215851959aa8bbf33e6708df6bd683c89d1a5a/src/Data/Medea/Schema.purs","end":[10,43]},"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"Schema","moduleName":"Data.Medea.Schema","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"Schema","moduleName":"Data.Medea.Schema","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeConstructor","contents":[["Data","Medea","Parser","Primitive"],"Identifier"]}]},{"tag":"TypeConstructor","contents":[["Data","Medea","Analysis"],"CompiledSchema"]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["schemainformation",[{"values":[{"sourceSpan":{"start":[38,1],"name":".spago/medea/8b215851959aa8bbf33e6708df6bd683c89d1a5a/src/Data/Medea.purs","end":[47,23]},"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"SchemaInformation","moduleName":"Data.Medea","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The schema-derived information attached to the current node.\n"}],"tag":"SearchResult"}]],["schemanamereserved",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"SchemaNameReserved","moduleName":"Data.Medea.Loader","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":"A schema with non-start reserved naming identifier. \n"}],"tag":"SearchResult"}]],["schematorowlist",[{"values":[{"sourceSpan":{"start":[245,1],"name":"src/Plutus/Types/DataSchema.purs","end":[245,51]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"SchemaToRowList","moduleName":"Plutus.Types.DataSchema","info":{"values":[{"superclasses":[],"fundeps":[[["schema"],["list"]]],"arguments":[["schema",null],["list",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Helper type classes used to convert a PlutusSchema to a RowListI (RowList k). Should not need to be used outside of this module.\n"}],"tag":"SearchResult"}]],["scope",[{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLTableHeaderCellElement.purs","end":[63,68]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"scope","moduleName":"Web.HTML.HTMLTableHeaderCellElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLTableHeaderCellElement"],"HTMLTableHeaderCellElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["screenshot",[{"values":[{"sourceSpan":{"start":[105,1],"name":".spago/purescript-toppokki/6983e07bf0aa55ab779bcef12df3df339a2b5bd9/src/Toppoki.purs","end":[110,16]},"score":0,"packageInfo":{"values":["purescript-toppokki"],"tag":"Package"},"name":"screenshot","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"ForAll","contents":["options",{"tag":"ForAll","contents":["trash",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"options"},{"tag":"TypeVar","contents":"trash"},{"tag":"TypeConstructor","contents":[["Toppokki"],"ScreenshotOptions"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"options"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Page"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["screenshotoptions",[{"values":[{"sourceSpan":{"start":[91,1],"name":".spago/purescript-toppokki/6983e07bf0aa55ab779bcef12df3df339a2b5bd9/src/Toppoki.purs","end":[103,4]},"score":0,"packageInfo":{"values":["purescript-toppokki"],"tag":"Package"},"name":"ScreenshotOptions","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"RCons","contents":["path",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["type",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["quality",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["fullPage",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["clip",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["x",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["y",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["width",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["height",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"REmpty","contents":{}}]}]}]}]}]},{"tag":"RCons","contents":["omitBackground",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["screenx",[{"values":[{"sourceSpan":{"start":[110,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Window.purs","end":[110,47]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"screenX","moduleName":"Web.HTML.Window","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Window"],"Window"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["screeny",[{"values":[{"sourceSpan":{"start":[112,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Window.purs","end":[112,47]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"screenY","moduleName":"Web.HTML.Window","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Window"],"Window"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["scriptaddress",[{"values":[{"sourceSpan":{"start":[420,1],"name":"src/Serialization/Address.purs","end":[420,56]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"scriptAddress","moduleName":"Serialization.Address","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Hash"],"ScriptHash"]}]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"BaseAddress"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["scriptall",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ScriptAll","moduleName":"Cardano.Types.Transaction","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Transaction"],"NativeScript"]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[149,1],"name":"src/Serialization/Types.purs","end":[149,38]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ScriptAll","moduleName":"Serialization.Types","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["scriptany",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ScriptAny","moduleName":"Cardano.Types.Transaction","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Transaction"],"NativeScript"]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[150,1],"name":"src/Serialization/Types.purs","end":[150,38]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ScriptAny","moduleName":"Serialization.Types","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["scriptcredential",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ScriptCredential","moduleName":"Plutus.Types.Credential","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Types","Scripts"],"ValidatorHash"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":"The transaction that spends this output must include the validator\nscript and be accepted by the validator.\n"}],"tag":"SearchResult"}]],["scriptcurrencysymbol",[{"values":[{"sourceSpan":{"start":[100,1],"name":"src/Scripts.purs","end":[100,68]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"scriptCurrencySymbol","moduleName":"Scripts","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","Scripts"],"MintingPolicy"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Plutus","Types","CurrencySymbol"],"CurrencySymbol"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Converts a `MintingPolicy` to a `CurrencySymbol`.\n"}],"tag":"SearchResult"}]],["scriptdatahash",[{"values":[{"sourceSpan":{"start":[280,1],"name":"src/Cardano/Types/Transaction.purs","end":[280,50]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ScriptDataHash","moduleName":"Cardano.Types.Transaction","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ScriptDataHash","moduleName":"Cardano.Types.Transaction","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Types","ByteArray"],"ByteArray"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[151,1],"name":"src/Serialization/Types.purs","end":[151,43]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ScriptDataHash","moduleName":"Serialization.Types","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["scripthash",[{"values":[{"sourceSpan":{"start":[91,1],"name":"src/Scripts.purs","end":[96,19]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"scriptHash","moduleName":"Scripts","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ForAll","contents":["n",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Types","Scripts"],"PlutusScript"]}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"tag":"TypeVar","contents":"n"},{"tag":"TypeConstructor","contents":[["Serialization","Hash"],"ScriptHash"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"n"}]}}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Converts any newtype wrapper of `PlutusScript` to a newtype wrapper\nof `ScriptHash`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[119,1],"name":"src/Serialization/Hash.purs","end":[119,39]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ScriptHash","moduleName":"Serialization.Hash","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"blake2b-224 hash digests of serialized monetary scripts\n"}],"tag":"SearchResult"}]],["scripthashaddress",[{"values":[{"sourceSpan":{"start":[125,1],"name":"src/Plutus/Types/Address.purs","end":[125,46]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"scriptHashAddress","moduleName":"Plutus.Types.Address","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","Scripts"],"ValidatorHash"]}]},{"tag":"TypeConstructor","contents":[["Plutus","Types","Address"],"Address"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The address that should be used by a transaction output locked\nby the given validator script hash.\n"}],"tag":"SearchResult"}]],["scripthashascurrencysymbol",[{"values":[{"sourceSpan":{"start":[681,1],"name":"src/Cardano/Types/Value.purs","end":[681,59]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"scriptHashAsCurrencySymbol","moduleName":"Cardano.Types.Value","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Hash"],"ScriptHash"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"CurrencySymbol"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[60,1],"name":"src/Plutus/Types/CurrencySymbol.purs","end":[60,59]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"scriptHashAsCurrencySymbol","moduleName":"Plutus.Types.CurrencySymbol","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Hash"],"ScriptHash"]}]},{"tag":"TypeConstructor","contents":[["Plutus","Types","CurrencySymbol"],"CurrencySymbol"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["scripthashcredential",[{"values":[{"sourceSpan":{"start":[332,1],"name":"src/Serialization/Address.purs","end":[332,69]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"scriptHashCredential","moduleName":"Serialization.Address","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Hash"],"ScriptHash"]}]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"StakeCredential"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["scripthashenterpriseaddress",[{"values":[{"sourceSpan":{"start":[524,1],"name":"src/Serialization/Address.purs","end":[525,50]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"scriptHashEnterpriseAddress","moduleName":"Serialization.Address","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Hash"],"ScriptHash"]}]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"EnterpriseAddress"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["scripthashfrombech32",[{"values":[{"sourceSpan":{"start":[186,1],"name":"src/Serialization/Hash.purs","end":[186,57]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"scriptHashFromBech32","moduleName":"Serialization.Hash","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","Aliases"],"Bech32String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Serialization","Hash"],"ScriptHash"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Decodes a script hash from its Bech32 representation\n"}],"tag":"SearchResult"}]],["scripthashfrombytes",[{"values":[{"sourceSpan":{"start":[182,1],"name":"src/Serialization/Hash.purs","end":[182,52]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"scriptHashFromBytes","moduleName":"Serialization.Hash","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","RawBytes"],"RawBytes"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Serialization","Hash"],"ScriptHash"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Decodes a script hash from its CBOR bytes encoding\nNOTE. It does _not_ compute hash of given bytes.\n"}],"tag":"SearchResult"}]],["scripthashpointeraddress",[{"values":[{"sourceSpan":{"start":[581,1],"name":"src/Serialization/Address.purs","end":[582,58]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"scriptHashPointerAddress","moduleName":"Serialization.Address","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Hash"],"ScriptHash"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"Pointer"]}]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"PointerAddress"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["scripthashscripthashaddress",[{"values":[{"sourceSpan":{"start":[412,1],"name":"src/Serialization/Address.purs","end":[413,58]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"scriptHashScriptHashAddress","moduleName":"Serialization.Address","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Hash"],"ScriptHash"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Hash"],"ScriptHash"]}]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"BaseAddress"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["scripthashstakekeyhashaddress",[{"values":[{"sourceSpan":{"start":[396,1],"name":"src/Serialization/Address.purs","end":[397,62]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"scriptHashStakeKeyHashAddress","moduleName":"Serialization.Address","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Hash"],"ScriptHash"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Hash"],"Ed25519KeyHash"]}]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"BaseAddress"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["scripthashtobech32",[{"values":[{"sourceSpan":{"start":[192,1],"name":"src/Serialization/Hash.purs","end":[192,65]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"scriptHashToBech32","moduleName":"Serialization.Hash","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Hash"],"ScriptHash"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Types","Aliases"],"Bech32String"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert scriptHash to Bech32 representation with given prefix.\nWill return `Nothing` if prefix is invalid (length, mixed-case, etc)\nMore on prefixes: https://cips.cardano.org/cips/cip5\n"}],"tag":"SearchResult"}]],["scripthashtobech32unsafe",[{"values":[{"sourceSpan":{"start":[169,1],"name":"src/Serialization/Hash.purs","end":[172,18]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"scriptHashToBech32Unsafe","moduleName":"Serialization.Hash","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Hash"],"ScriptHash"]}]},{"tag":"TypeConstructor","contents":[["Types","Aliases"],"Bech32String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert scriptHash to Bech32 representation with given prefix.\nWill crash if prefix is invalid (length, mixed-case, etc)\nMore on prefixes: https://cips.cardano.org/cips/cip5\n"}],"tag":"SearchResult"}]],["scripthashtobytes",[{"values":[{"sourceSpan":{"start":[164,1],"name":"src/Serialization/Hash.purs","end":[164,59]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"scriptHashToBytes","moduleName":"Serialization.Hash","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Hash"],"ScriptHash"]}]},{"tag":"TypeConstructor","contents":[["Types","RawBytes"],"RawBytes"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Encodes the hash to Cbor bytes\n"}],"tag":"SearchResult"}]],["scriptlookups",[{"values":[{"sourceSpan":{"start":[216,1],"name":"src/Types/ScriptLookups.purs","end":[234,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ScriptLookups","moduleName":"Types.ScriptLookups","info":{"values":[{"typeArguments":[["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ScriptLookups","moduleName":"Types.ScriptLookups","info":{"values":[{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["mps",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Types","Scripts"],"MintingPolicy"]}]},{"tag":"RCons","contents":["txOutputs",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeConstructor","contents":[["Types","Transaction"],"TransactionInput"]}]},{"tag":"TypeConstructor","contents":[["Plutus","Types","Transaction"],"TransactionOutput"]}]},{"tag":"RCons","contents":["scripts",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Types","Scripts"],"Validator"]}]},{"tag":"RCons","contents":["datums",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeConstructor","contents":[["Types","Transaction"],"DataHash"]}]},{"tag":"TypeConstructor","contents":[["Types","Datum"],"Datum"]}]},{"tag":"RCons","contents":["paymentPubKeyHashes",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeConstructor","contents":[["Types","PubKeyHash"],"PaymentPubKeyHash"]}]},{"tag":"TypeConstructor","contents":[["Types","UnbalancedTransaction"],"PaymentPubKey"]}]},{"tag":"RCons","contents":["typedValidator",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Types","TypedValidator"],"TypedValidator"]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"RCons","contents":["ownPaymentPubKeyHash",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Types","PubKeyHash"],"PaymentPubKeyHash"]}]},{"tag":"RCons","contents":["ownStakePubKeyHash",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Types","PubKeyHash"],"StakePubKeyHash"]}]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]}]}]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["scriptnofk",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ScriptNOfK","moduleName":"Cardano.Types.Transaction","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Transaction"],"NativeScript"]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[152,1],"name":"src/Serialization/Types.purs","end":[152,39]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ScriptNOfK","moduleName":"Serialization.Types","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["scriptoutput",[{"values":[{"sourceSpan":{"start":[52,1],"name":"src/Types/UnbalancedTransaction.purs","end":[56,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ScriptOutput","moduleName":"Types.UnbalancedTransaction","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ScriptOutput","moduleName":"Types.UnbalancedTransaction","info":{"values":[{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["validatorHash",{"tag":"TypeConstructor","contents":[["Types","Scripts"],"ValidatorHash"]},{"tag":"RCons","contents":["value",{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"Value"]},{"tag":"RCons","contents":["datumHash",{"tag":"TypeConstructor","contents":[["Types","Transaction"],"DataHash"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["scriptoutputtoogmiostxout",[{"values":[{"sourceSpan":{"start":[101,1],"name":"src/TxOutput.purs","end":[102,57]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"scriptOutputToOgmiosTxOut","moduleName":"TxOutput","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","UnbalancedTransaction"],"ScriptOutput"]}]},{"tag":"TypeConstructor","contents":[["QueryM","Ogmios"],"OgmiosTxOut"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Converts an `ScriptOutput` to Ogmios Transaction output.\n"}],"tag":"SearchResult"}]],["scriptoutputtotransactionoutput",[{"values":[{"sourceSpan":{"start":[493,1],"name":"src/Contract/Transaction.purs","end":[496,42]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"scriptOutputToTransactionOutput","moduleName":"Contract.Transaction","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","UnbalancedTransaction"],"ScriptOutput"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Plutus","Types","Transaction"],"TransactionOutput"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[130,1],"name":"src/TxOutput.purs","end":[131,68]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"scriptOutputToTransactionOutput","moduleName":"TxOutput","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","UnbalancedTransaction"],"ScriptOutput"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Transaction"],"TransactionOutput"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Converts `ScriptOutput` to an internal transaction output.\n"}],"tag":"SearchResult"}]],["scriptpubkey",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ScriptPubkey","moduleName":"Cardano.Types.Transaction","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Serialization","Hash"],"Ed25519KeyHash"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[153,1],"name":"src/Serialization/Types.purs","end":[153,41]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ScriptPubkey","moduleName":"Serialization.Types","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["scripttoaeson",[{"values":[{"sourceSpan":{"start":[613,1],"name":"src/QueryM.purs","end":[613,39]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"scriptToAeson","moduleName":"QueryM","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","Scripts"],"PlutusScript"]}]},{"tag":"TypeConstructor","contents":[["Aeson"],"Aeson"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["scroll",[{"values":[{"sourceSpan":{"start":[114,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Window.purs","end":[114,61]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"scroll","moduleName":"Web.HTML.Window","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Window"],"Window"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["scrollby",[{"values":[{"sourceSpan":{"start":[116,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Window.purs","end":[116,63]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"scrollBy","moduleName":"Web.HTML.Window","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Window"],"Window"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["scrolldown",[{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"ScrollDown","moduleName":"Ansi.Codes","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["scrollheight",[{"values":[{"sourceSpan":{"start":[141,1],"name":".spago/web-dom/v5.0.0/src/Web/DOM/Element.purs","end":[141,56]},"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"scrollHeight","moduleName":"Web.DOM.Element","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Element"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["scrollleft",[{"values":[{"sourceSpan":{"start":[137,1],"name":".spago/web-dom/v5.0.0/src/Web/DOM/Element.purs","end":[137,54]},"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"scrollLeft","moduleName":"Web.DOM.Element","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Element"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["scrolltop",[{"values":[{"sourceSpan":{"start":[134,1],"name":".spago/web-dom/v5.0.0/src/Web/DOM/Element.purs","end":[134,53]},"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"scrollTop","moduleName":"Web.DOM.Element","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Element"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["scrollup",[{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"ScrollUp","moduleName":"Ansi.Codes","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["scrollwidth",[{"values":[{"sourceSpan":{"start":[140,1],"name":".spago/web-dom/v5.0.0/src/Web/DOM/Element.purs","end":[140,55]},"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"scrollWidth","moduleName":"Web.DOM.Element","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Element"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["scrollx",[{"values":[{"sourceSpan":{"start":[118,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Window.purs","end":[118,50]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"scrollX","moduleName":"Web.HTML.Window","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Window"],"Window"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["scrolly",[{"values":[{"sourceSpan":{"start":[120,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Window.purs","end":[120,50]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"scrollY","moduleName":"Web.HTML.Window","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Window"],"Window"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["r",[{"values":[{"sourceSpan":null,"score":3,"packageInfo":{"values":["node-fs"],"tag":"Package"},"name":"R","moduleName":"Node.FS","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["pforeground",[{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"PForeground","moduleName":"Ansi.Codes","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"Color"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["pfx",[{"values":[{"sourceSpan":{"start":[169,1],"name":".spago/node-http/v6.0.0/src/Node/HTTP/Secure.purs","end":[169,9]},"score":1,"packageInfo":{"values":["node-http"],"tag":"Package"},"name":"PFX","moduleName":"Node.HTTP.Secure","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The PFX option can take either a String or a Buffer\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[176,1],"name":".spago/node-http/v6.0.0/src/Node/HTTP/Secure.purs","end":[176,29]},"score":1,"packageInfo":{"values":["node-http"],"tag":"Package"},"name":"pfx","moduleName":"Node.HTTP.Secure","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"tag":"TypeConstructor","contents":[["Node","HTTP","Secure"],"SSLOptions"]}]},{"tag":"TypeConstructor","contents":[["Node","HTTP","Secure"],"PFX"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"See the [node docs](https://nodejs.org/api/tls.html#tls_tls_createsecurecontext_options)\n"}],"tag":"SearchResult"}]],["pfxbuffer",[{"values":[{"sourceSpan":{"start":[172,1],"name":".spago/node-http/v6.0.0/src/Node/HTTP/Secure.purs","end":[172,27]},"score":1,"packageInfo":{"values":["node-http"],"tag":"Package"},"name":"pfxBuffer","moduleName":"Node.HTTP.Secure","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]},{"tag":"TypeConstructor","contents":[["Node","HTTP","Secure"],"PFX"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["pfxstring",[{"values":[{"sourceSpan":{"start":[170,1],"name":".spago/node-http/v6.0.0/src/Node/HTTP/Secure.purs","end":[170,27]},"score":1,"packageInfo":{"values":["node-http"],"tag":"Package"},"name":"pfxString","moduleName":"Node.HTTP.Secure","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Node","HTTP","Secure"],"PFX"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["ogmiosaddress",[{"values":[{"sourceSpan":{"start":[192,1],"name":"src/QueryM/Ogmios.purs","end":[192,28]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"OgmiosAddress","moduleName":"QueryM.Ogmios","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["ogmiosaddresstoaddress",[{"values":[{"sourceSpan":{"start":[40,1],"name":"src/Address.purs","end":[40,64]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ogmiosAddressToAddress","moduleName":"Address","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["QueryM","Ogmios"],"OgmiosAddress"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"Address"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A module for address related helpers\nConverts an `JsonWsp.Address` (bech32string) to internal `Address`\n"}],"tag":"SearchResult"}]],["ogmiosblockheaderhash",[{"values":[{"sourceSpan":{"start":[1015,1],"name":"src/QueryM/Ogmios.purs","end":[1015,61]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"OgmiosBlockHeaderHash","moduleName":"QueryM.Ogmios","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A Blake2b 32-byte digest of an era-independent block header, serialised as\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"OgmiosBlockHeaderHash","moduleName":"QueryM.Ogmios","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["ogmiosdatumhashtodatumhash",[{"values":[{"sourceSpan":{"start":[145,1],"name":"src/TxOutput.purs","end":[145,55]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ogmiosDatumHashToDatumHash","moduleName":"TxOutput","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Types","Transaction"],"DataHash"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Converts an Ogmios datum hash `String` to an internal `DataHash`\n"}],"tag":"SearchResult"}]],["ogmiosevaluatetxinvalidpointerformatfixture",[{"values":[{"sourceSpan":{"start":[1217,1],"name":"test/Fixtures.purs","end":[1217,60]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ogmiosEvaluateTxInvalidPointerFormatFixture","moduleName":"Test.Fixtures","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Aeson"],"Aeson"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["ogmiosevaluatetxvalidrespfixture",[{"values":[{"sourceSpan":{"start":[1212,1],"name":"test/Fixtures.purs","end":[1212,49]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ogmiosEvaluateTxValidRespFixture","moduleName":"Test.Fixtures","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Aeson"],"Aeson"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["ogmioslisteners",[{"values":[{"sourceSpan":{"start":[827,1],"name":"src/QueryM.purs","end":[836,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"OgmiosListeners","moduleName":"QueryM","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["utxo",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["QueryM"],"ListenerSet"]},{"tag":"TypeConstructor","contents":[["QueryM","Ogmios"],"OgmiosAddress"]}]},{"tag":"TypeConstructor","contents":[["QueryM","Ogmios"],"UtxoQR"]}]},{"tag":"RCons","contents":["chainTip",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["QueryM"],"ListenerSet"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeConstructor","contents":[["QueryM","Ogmios"],"ChainTipQR"]}]},{"tag":"RCons","contents":["submit",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["QueryM"],"ListenerSet"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["txCbor",{"tag":"TypeConstructor","contents":[["Types","ByteArray"],"ByteArray"]},{"tag":"REmpty","contents":{}}]}]}]},{"tag":"TypeConstructor","contents":[["QueryM","Ogmios"],"SubmitTxR"]}]},{"tag":"RCons","contents":["evaluate",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["QueryM"],"ListenerSet"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["txCbor",{"tag":"TypeConstructor","contents":[["Types","ByteArray"],"ByteArray"]},{"tag":"REmpty","contents":{}}]}]}]},{"tag":"TypeConstructor","contents":[["QueryM","Ogmios"],"TxEvaluationR"]}]},{"tag":"RCons","contents":["getProtocolParameters",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["QueryM"],"ListenerSet"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeConstructor","contents":[["QueryM","Ogmios"],"ProtocolParameters"]}]},{"tag":"RCons","contents":["eraSummaries",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["QueryM"],"ListenerSet"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeConstructor","contents":[["QueryM","Ogmios"],"EraSummaries"]}]},{"tag":"RCons","contents":["currentEpoch",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["QueryM"],"ListenerSet"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeConstructor","contents":[["QueryM","Ogmios"],"CurrentEpoch"]}]},{"tag":"RCons","contents":["systemStart",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["QueryM"],"ListenerSet"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeConstructor","contents":[["QueryM","Ogmios"],"SystemStart"]}]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["ogmiostxout",[{"values":[{"sourceSpan":{"start":[1108,1],"name":"src/QueryM/Ogmios.purs","end":[1112,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"OgmiosTxOut","moduleName":"QueryM.Ogmios","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["address",{"tag":"TypeConstructor","contents":[["QueryM","Ogmios"],"OgmiosAddress"]},{"tag":"RCons","contents":["value",{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"Value"]},{"tag":"RCons","contents":["datum",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"REmpty","contents":{}}]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["ogmiostxoutref",[{"values":[{"sourceSpan":{"start":[1060,1],"name":"src/QueryM/Ogmios.purs","end":[1063,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"OgmiosTxOutRef","moduleName":"QueryM.Ogmios","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["txId",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["index",{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]},{"tag":"REmpty","contents":{}}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["ogmiostxouttoscriptoutput",[{"values":[{"sourceSpan":{"start":[88,1],"name":"src/TxOutput.purs","end":[88,74]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ogmiosTxOutToScriptOutput","moduleName":"TxOutput","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["QueryM","Ogmios"],"OgmiosTxOut"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Types","UnbalancedTransaction"],"ScriptOutput"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Converts an Ogmios Transaction output to a `ScriptOutput`.\n"}],"tag":"SearchResult"}]],["ogmiostxouttotransactionoutput",[{"values":[{"sourceSpan":{"start":[63,1],"name":"src/TxOutput.purs","end":[64,63]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ogmiosTxOutToTransactionOutput","moduleName":"TxOutput","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["QueryM","Ogmios"],"OgmiosTxOut"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Transaction"],"TransactionOutput"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Converts an Ogmios transaction output to (internal) `TransactionOutput`\n"}],"tag":"SearchResult"}]],["ogmioswebsocket",[{"values":[{"sourceSpan":{"start":[630,1],"name":"src/QueryM.purs","end":[630,49]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"OgmiosWebSocket","moduleName":"QueryM","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["QueryM"],"WebSocket"]},{"tag":"TypeConstructor","contents":[["QueryM"],"OgmiosListeners"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["millisecond",[{"values":[{"sourceSpan":{"start":[69,1],"name":".spago/datetime/v5.0.2/src/Data/Interval/Duration.purs","end":[69,34]},"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"millisecond","moduleName":"Data.Interval.Duration","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Data","Interval","Duration"],"Duration"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[107,1],"name":".spago/datetime/v5.0.2/src/Data/Time/Component.purs","end":[107,38]},"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"Millisecond","moduleName":"Data.Time.Component","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"An millisecond component for a time value.\n\nThe constructor is private as values for the type are restricted to the\nrange 0 to 999, inclusive. The `toEnum` function can be used to safely\nacquire an `Millisecond` value from an integer. Correspondingly, a\n`Millisecond` can be lowered to a plain integer with the `fromEnum`\nfunction.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[61,1],"name":".spago/datetime/v5.0.2/src/Data/Time.purs","end":[61,35]},"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"millisecond","moduleName":"Data.Time","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Time"]}]},{"tag":"TypeConstructor","contents":[["Data","Time","Component"],"Millisecond"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The millisecond component of a time value.\n"}],"tag":"SearchResult"}]],["milliseconds",[{"values":[{"sourceSpan":{"start":[8,1],"name":".spago/datetime/v5.0.2/src/Data/Time/Duration.purs","end":[8,43]},"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"Milliseconds","moduleName":"Data.Time.Duration","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A duration measured in milliseconds.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"Milliseconds","moduleName":"Data.Time.Duration","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["min",[{"values":[{"sourceSpan":{"start":[13,1],"name":".spago/orders/v5.0.0/src/Data/Ord/Min.purs","end":[13,22]},"score":1,"packageInfo":{"values":["orders"],"tag":"Package"},"name":"Min","moduleName":"Data.Ord.Min","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Provides a `Semigroup` based on the `min` function. If the type has a\n`Bounded` instance, then a `Monoid` instance is provided too. For example:\n\n    unwrap (Min 5 <> Min 6) = 5\n    mempty :: Min Ordering = Min GT\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["orders"],"tag":"Package"},"name":"Min","moduleName":"Data.Ord.Min","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[165,1],"name":".spago/prelude/v5.0.1/src/Data/Ord.purs","end":[165,38]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"min","moduleName":"Data.Ord","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Take the minimum of two values. If they are considered equal, the first\nargument is chosen.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[125,1],"name":".spago/ordered-collections/v2.0.2/src/Data/Set/NonEmpty.purs","end":[125,36]},"score":5,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"min","moduleName":"Data.Set.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set","NonEmpty"],"NonEmptySet"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The minimum value in the set.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[363,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Ops.purs","end":[363,27]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"Min","moduleName":"Data.Typelevel.Num.Ops","info":{"values":[{"superclasses":[],"fundeps":[[["x","y"],["z"]]],"arguments":[["x",null],["y",null],["z",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[366,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Ops.purs","end":[366,46]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"min","moduleName":"Data.Typelevel.Num.Ops","info":{"values":[{"type":{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["y",{"tag":"ForAll","contents":["z",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Typelevel","Num","Ops"],"Min"],"constraintArgs":[{"tag":"TypeVar","contents":"x"},{"tag":"TypeVar","contents":"y"},{"tag":"TypeVar","contents":"z"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"y"}]},{"tag":"TypeVar","contents":"z"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[49,1],"name":".spago/math/v3.0.0/src/Math.purs","end":[49,49]},"score":12,"packageInfo":{"values":["math"],"tag":"Package"},"name":"min","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the smallest of two numbers.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[241,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLInputElement.purs","end":[241,56]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"min","moduleName":"Web.HTML.HTMLInputElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLInputElement"],"HTMLInputElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[61,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLMeterElement.purs","end":[61,56]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"min","moduleName":"Web.HTML.HTMLMeterElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLMeterElement"],"HTMLMeterElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["minimum",[{"values":[{"sourceSpan":{"start":[445,1],"name":".spago/foldable-traversable/v5.0.1/src/Data/Foldable.purs","end":[445,61]},"score":24,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"minimum","moduleName":"Data.Foldable","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Find the smallest element of a structure, according to its `Ord` instance.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[144,1],"name":".spago/foldable-traversable/v5.0.1/src/Data/Semigroup/Foldable.purs","end":[144,56]},"score":24,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"minimum","moduleName":"Data.Semigroup.Foldable","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semigroup","Foldable"],"Foldable1"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[332,1],"name":".spago/pipes/v7.0.1/src/Pipes/Prelude.purs","end":[332,76]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"minimum","moduleName":"Pipes.Prelude","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Core"],"Producer"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Find the minimum element of a `Producer`\n"}],"tag":"SearchResult"}]],["minimumby",[{"values":[{"sourceSpan":{"start":[451,1],"name":".spago/foldable-traversable/v5.0.1/src/Data/Foldable.purs","end":[451,78]},"score":24,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"minimumBy","moduleName":"Data.Foldable","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Find the smallest element of a structure, according to a given comparison\nfunction. The comparison function should represent a total ordering (see\nthe `Ord` type class laws); if it does not, the behaviour is undefined.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[147,1],"name":".spago/foldable-traversable/v5.0.1/src/Data/Semigroup/Foldable.purs","end":[147,73]},"score":24,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"minimumBy","moduleName":"Data.Semigroup.Foldable","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semigroup","Foldable"],"Foldable1"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["minimumlengthgreaterthanmaximum",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"MinimumLengthGreaterThanMaximum","moduleName":"Data.Medea.Loader","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":"Minimum length specification was more than maximum. \n"}],"tag":"SearchResult"}]],["minimumlevel",[{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/monad-logger/v1.3.1/src/Data/Log/Filter.purs","end":[26,67]},"score":0,"packageInfo":{"values":["monad-logger"],"tag":"Package"},"name":"minimumLevel","moduleName":"Data.Log.Filter","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Log","Level"],"LogLevel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Log","Filter"],"LogFilter"]},{"tag":"TypeVar","contents":"m"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["minimumof",[{"values":[{"sourceSpan":{"start":[114,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Fold.purs","end":[114,89]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"minimumOf","moduleName":"Data.Lens.Fold","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Fold"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Endo"],"Endo"]},{"tag":"TypeConstructor","contents":[["Prim"],"Function"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The minimum of all foci of a `Fold`, if there is any.\n"}],"tag":"SearchResult"}]],["minlength",[{"values":[{"sourceSpan":{"start":[244,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLInputElement.purs","end":[244,59]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"minLength","moduleName":"Web.HTML.HTMLInputElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLInputElement"],"HTMLInputElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[153,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLTextAreaElement.purs","end":[153,62]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"minLength","moduleName":"Web.HTML.HTMLTextAreaElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLTextAreaElement"],"HTMLTextAreaElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["minmorethanmax",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"MinMoreThanMax","moduleName":"Data.Medea.Analysis","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Data","Medea","Parser","Primitive"],"Identifier"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["mint",[{"values":[{"sourceSpan":{"start":[290,1],"name":"src/Cardano/Types/Transaction.purs","end":[290,32]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Mint","moduleName":"Cardano.Types.Transaction","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Mint","moduleName":"Cardano.Types.Transaction","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"NonAdaAsset"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[122,1],"name":"src/Serialization/Types.purs","end":[122,33]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Mint","moduleName":"Serialization.Types","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Mint","moduleName":"Types.RedeemerTag","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["mintassets",[{"values":[{"sourceSpan":{"start":[123,1],"name":"src/Serialization/Types.purs","end":[123,39]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"MintAssets","moduleName":"Serialization.Types","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["mintingpolicy",[{"values":[{"sourceSpan":{"start":[327,1],"name":"src/Types/ScriptLookups.purs","end":[327,70]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"mintingPolicy","moduleName":"Types.ScriptLookups","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","Scripts"],"MintingPolicy"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Types","ScriptLookups"],"ScriptLookups"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A script lookups value with a minting policy script.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[63,1],"name":"src/Types/Scripts.purs","end":[63,51]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"MintingPolicy","moduleName":"Types.Scripts","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"`MintingPolicy` is a wrapper around `PlutusScript`s which are used as\nvalidators for minting constraints.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"MintingPolicy","moduleName":"Types.Scripts","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Types","Scripts"],"PlutusScript"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["mintingpolicyhash",[{"values":[{"sourceSpan":{"start":[61,1],"name":"src/Scripts.purs","end":[61,68]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"mintingPolicyHash","moduleName":"Scripts","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","Scripts"],"MintingPolicy"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Types","Scripts"],"MintingPolicyHash"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Converts a Plutus-style `MintingPolicy` to an `MintingPolicyHash`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[119,1],"name":"src/Types/Scripts.purs","end":[119,57]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"MintingPolicyHash","moduleName":"Types.Scripts","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"MintingPolicyHash","moduleName":"Types.Scripts","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Serialization","Hash"],"ScriptHash"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["mintingpolicyhashnotcurrencysymbol",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"MintingPolicyHashNotCurrencySymbol","moduleName":"Types.ScriptLookups","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Types","Scripts"],"MintingPolicyHash"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["mintingpolicym",[{"values":[{"sourceSpan":{"start":[332,1],"name":"src/Types/ScriptLookups.purs","end":[332,79]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"mintingPolicyM","moduleName":"Types.ScriptLookups","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","Scripts"],"MintingPolicy"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Types","ScriptLookups"],"ScriptLookups"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Same as `mintingPolicy` but in `Maybe` context for convenience. This\nshould not fail.\n"}],"tag":"SearchResult"}]],["mintingpolicynotfound",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"MintingPolicyNotFound","moduleName":"Types.ScriptLookups","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Types","Scripts"],"MintingPolicyHash"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["mintingpolicyrdmrint1",[{"values":[{"sourceSpan":{"start":[101,1],"name":"examples/MintsMultipleTokens.purs","end":[101,51]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"mintingPolicyRdmrInt1","moduleName":"Examples.MintsMultipleTokens","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Monad"],"Contract"]},{"tag":"REmpty","contents":{}}]},{"tag":"TypeConstructor","contents":[["Types","Scripts"],"MintingPolicy"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["mintingpolicyrdmrint2",[{"values":[{"sourceSpan":{"start":[105,1],"name":"examples/MintsMultipleTokens.purs","end":[105,51]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"mintingPolicyRdmrInt2","moduleName":"Examples.MintsMultipleTokens","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Monad"],"Contract"]},{"tag":"REmpty","contents":{}}]},{"tag":"TypeConstructor","contents":[["Types","Scripts"],"MintingPolicy"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["mintingpolicyrdmrint3",[{"values":[{"sourceSpan":{"start":[109,1],"name":"examples/MintsMultipleTokens.purs","end":[109,51]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"mintingPolicyRdmrInt3","moduleName":"Examples.MintsMultipleTokens","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Monad"],"Contract"]},{"tag":"REmpty","contents":{}}]},{"tag":"TypeConstructor","contents":[["Types","Scripts"],"MintingPolicy"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["minus",[{"values":[{"sourceSpan":{"start":[525,1],"name":"src/Cardano/Types/Value.purs","end":[525,39]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"minus","moduleName":"Cardano.Types.Value","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"Value"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"Value"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"Value"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[59,1],"name":".spago/naturals/v3.0.0/src/Data/Natural.purs","end":[59,39]},"score":0,"packageInfo":{"values":["naturals"],"tag":"Package"},"name":"minus","moduleName":"Data.Natural","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Natural"],"Natural"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Natural"],"Natural"]}]},{"tag":"TypeConstructor","contents":[["Data","Natural"],"Natural"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Subtract a natural number from another.\nWhen `l < r` then `l +- r = 0`.\nThis is provided due to Natural not being a Ring as it violates the\nadditive inverse law: `a - a = (zero - a) + a = zero`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[108,1],"name":"src/Types/Natural.purs","end":[108,39]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"minus","moduleName":"Types.Natural","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","Natural"],"Natural"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Types","Natural"],"Natural"]}]},{"tag":"TypeConstructor","contents":[["Types","Natural"],"Natural"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Subtracts one natural number from another via `BigInt`. If the number\nbecomes negative, we return zero.\n"}],"tag":"SearchResult"}]],["minute",[{"values":[{"sourceSpan":null,"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"Minute","moduleName":"Data.Interval.Duration","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/datetime/v5.0.2/src/Data/Interval/Duration.purs","end":[63,29]},"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"minute","moduleName":"Data.Interval.Duration","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Data","Interval","Duration"],"Duration"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[48,1],"name":".spago/datetime/v5.0.2/src/Data/Time/Component.purs","end":[48,28]},"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"Minute","moduleName":"Data.Time.Component","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"An minute component for a time value.\n\nThe constructor is private as values for the type are restricted to the\nrange 0 to 59, inclusive. The `toEnum` function can be used to safely\nacquire an `Minute` value from an integer. Correspondingly, a `Minute` can\nbe lowered to a plain integer with the `fromEnum` function.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[45,1],"name":".spago/datetime/v5.0.2/src/Data/Time.purs","end":[45,25]},"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"minute","moduleName":"Data.Time","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Time"]}]},{"tag":"TypeConstructor","contents":[["Data","Time","Component"],"Minute"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The minute component of a time value.\n"}],"tag":"SearchResult"}]],["minutes",[{"values":[{"sourceSpan":{"start":[40,1],"name":".spago/datetime/v5.0.2/src/Data/Time/Duration.purs","end":[40,33]},"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"Minutes","moduleName":"Data.Time.Duration","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A duration measured in minutes.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"Minutes","moduleName":"Data.Time.Duration","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["mirtostakecredentials",[{"values":[{"sourceSpan":{"start":[548,1],"name":"src/Cardano/Types/Transaction.purs","end":[549,32]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"MIRToStakeCredentials","moduleName":"Cardano.Types.Transaction","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"MIRToStakeCredentials","moduleName":"Cardano.Types.Transaction","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"StakeCredential"]}]},{"tag":"TypeConstructor","contents":[["Types","Int"],"Int"]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[119,1],"name":"src/Serialization/Types.purs","end":[119,50]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"MIRToStakeCredentials","moduleName":"Serialization.Types","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["missingargp",[{"values":[{"sourceSpan":{"start":[61,3],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Internal.purs","end":[61,58]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"missingArgP","moduleName":"Options.Applicative.Internal","info":{"values":[{"typeClassArguments":[["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}]],"typeClass":[["Options","Applicative","Internal"],"MonadP"],"type":{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Options","Applicative","Internal"],"MonadP"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParseError"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["missingdesc",[{"values":[{"sourceSpan":{"start":[102,1],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Help/Core.purs","end":[102,62]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"missingDesc","moduleName":"Options.Applicative.Help.Core","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Generate a brief help text for a parser, only including mandatory\n"}],"tag":"SearchResult"}]],["missingerror",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"MissingError","moduleName":"Options.Applicative.Types","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"IsCmdStart"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"SomeParser"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["missinglistschemadefinition",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"MissingListSchemaDefinition","moduleName":"Data.Medea.Loader","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":"name of undefined list element type and the schema that references it. \n"}],"tag":"SearchResult"}]],["missingpropschemadefinition",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"MissingPropSchemaDefinition","moduleName":"Data.Medea.Loader","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":"name of undefined property schema and the schema that references it \n"}],"tag":"SearchResult"}]],["missingschemadefinition",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"MissingSchemaDefinition","moduleName":"Data.Medea.Loader","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":"name of the undefined schema  and the schema that references it. \n"}],"tag":"SearchResult"}]],["missingtupleschemadefinition",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"MissingTupleSchemaDefinition","moduleName":"Data.Medea.Loader","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":"name of the underfined tuple positional schema and the schema that references it \n"}],"tag":"SearchResult"}]],["missingvalue",[{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["argonaut-codecs"],"tag":"Package"},"name":"MissingValue","moduleName":"Data.Argonaut.Decode.Error","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["misuseofshellbuiltins",[{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["exitcodes"],"tag":"Package"},"name":"MisuseOfShellBuiltins","moduleName":"ExitCodes","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["imagegif",[{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/media-types/v5.0.0/src/Data/MediaType/Common.purs","end":[26,22]},"score":2,"packageInfo":{"values":["media-types"],"tag":"Package"},"name":"imageGIF","moduleName":"Data.MediaType.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","MediaType"],"MediaType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The `image/gif` media type.\n"}],"tag":"SearchResult"}]],["imagejpeg",[{"values":[{"sourceSpan":{"start":[30,1],"name":".spago/media-types/v5.0.0/src/Data/MediaType/Common.purs","end":[30,23]},"score":2,"packageInfo":{"values":["media-types"],"tag":"Package"},"name":"imageJPEG","moduleName":"Data.MediaType.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","MediaType"],"MediaType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The `image/jpeg` media type.\n"}],"tag":"SearchResult"}]],["imagepng",[{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/media-types/v5.0.0/src/Data/MediaType/Common.purs","end":[34,22]},"score":2,"packageInfo":{"values":["media-types"],"tag":"Package"},"name":"imagePNG","moduleName":"Data.MediaType.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","MediaType"],"MediaType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The `image/png` media type.\n"}],"tag":"SearchResult"}]],["images",[{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLMapElement.purs","end":[63,65]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"images","moduleName":"Web.HTML.HTMLMapElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLMapElement"],"HTMLMapElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"HTMLCollection"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["imap",[{"values":[{"sourceSpan":{"start":[24,3],"name":".spago/invariant/v5.0.0/src/Data/Functor/Invariant.purs","end":[24,57]},"score":9,"packageInfo":{"values":["invariant"],"tag":"Package"},"name":"imap","moduleName":"Data.Functor.Invariant","info":{"values":[{"typeClassArguments":[["f",null]],"typeClass":[["Data","Functor","Invariant"],"Invariant"],"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor","Invariant"],"Invariant"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["imapc",[{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/contravariant/v5.0.0/src/Data/Functor/Contravariant.purs","end":[31,77]},"score":3,"packageInfo":{"values":["contravariant"],"tag":"Package"},"name":"imapC","moduleName":"Data.Functor.Contravariant","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor","Contravariant"],"Contravariant"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"As all `Contravariant` functors are also trivially `Invariant`, this function can be used as the `imap` implementation for any types that have an existing `Contravariant` instance.\n"}],"tag":"SearchResult"}]],["imapf",[{"values":[{"sourceSpan":{"start":[56,1],"name":".spago/invariant/v5.0.0/src/Data/Functor/Invariant.purs","end":[56,71]},"score":9,"packageInfo":{"values":["invariant"],"tag":"Package"},"name":"imapF","moduleName":"Data.Functor.Invariant","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"As all `Functor`s are also trivially `Invariant`, this function can be\nused as the `imap` implementation for any types that has an existing\n`Functor` instance.\n"}],"tag":"SearchResult"}]],["immutablebuffer",[{"values":[{"sourceSpan":{"start":[28,1],"name":".spago/node-buffer/v7.0.1/src/Node/Buffer/Immutable.purs","end":[28,44]},"score":7,"packageInfo":{"values":["node-buffer"],"tag":"Package"},"name":"ImmutableBuffer","moduleName":"Node.Buffer.Immutable","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"An immutable buffer that exists independently of any memory region or effect.\n"}],"tag":"SearchResult"}]],["imp",[{"values":[{"sourceSpan":{"start":[123,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Bool.purs","end":[123,67]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"Imp","moduleName":"Data.Typelevel.Bool","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Typelevel","Bool"],"BoolI"],"constraintArgs":[{"tag":"TypeVar","contents":"b1"}]},{"constraintClass":[["Data","Typelevel","Bool"],"BoolI"],"constraintArgs":[{"tag":"TypeVar","contents":"b2"}]},{"constraintClass":[["Data","Typelevel","Bool"],"BoolI"],"constraintArgs":[{"tag":"TypeVar","contents":"b3"}]}],"fundeps":[[["b1","b2"],["b3"]]],"arguments":[["b1",null],["b2",null],["b3",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Type level logical implication.\n\n`(Imp a b c) => a -> b -> c` applies the constraint that `c` must be\nthe result of applying a logical implication operation to `a` and `b`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[129,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Bool.purs","end":[129,55]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"imp","moduleName":"Data.Typelevel.Bool","info":{"values":[{"type":{"tag":"ForAll","contents":["b1",{"tag":"ForAll","contents":["b2",{"tag":"ForAll","contents":["b3",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Typelevel","Bool"],"Imp"],"constraintArgs":[{"tag":"TypeVar","contents":"b1"},{"tag":"TypeVar","contents":"b2"},{"tag":"TypeVar","contents":"b3"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b1"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b2"}]},{"tag":"TypeVar","contents":"b3"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["implementationerror",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"ImplementationError","moduleName":"Data.Medea","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["implies",[{"values":[{"sourceSpan":{"start":[41,3],"name":".spago/prelude/v5.0.1/src/Data/HeytingAlgebra.purs","end":[41,25]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"implies","moduleName":"Data.HeytingAlgebra","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/quickcheck-combinators/v0.1.3/src/Test/QuickCheck/Combinators.purs","end":[63,38]},"score":0,"packageInfo":{"values":["quickcheck-combinators"],"tag":"Package"},"name":"implies","moduleName":"Test.QuickCheck.Combinators","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Uses the second failure message as the result failure message\n"}],"tag":"SearchResult"}]],["impliesrecord",[{"values":[{"sourceSpan":{"start":[115,3],"name":".spago/prelude/v5.0.1/src/Data/HeytingAlgebra.purs","end":[115,96]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"impliesRecord","moduleName":"Data.HeytingAlgebra","info":{"values":[{"typeClassArguments":[["rowlist",null],["row",null],["subrow",null]],"typeClass":[["Data","HeytingAlgebra"],"HeytingAlgebraRecord"],"type":{"tag":"ForAll","contents":["rowlist",{"tag":"ForAll","contents":["row",{"tag":"ForAll","contents":["subrow",{"tag":"ForAll","contents":["rlproxy",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebraRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"rowlist"},{"tag":"TypeVar","contents":"row"},{"tag":"TypeVar","contents":"subrow"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"rlproxy"},{"tag":"TypeVar","contents":"rowlist"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"subrow"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["importnode",[{"values":[{"sourceSpan":{"start":[121,1],"name":".spago/web-dom/v5.0.0/src/Web/DOM/Document.purs","end":[121,72]},"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"importNode","moduleName":"Web.DOM.Document","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Document"],"Document"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["impossible",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Impossible","moduleName":"BalanceTx","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[275,1],"name":".spago/variant/v7.0.3/src/Data/Variant/Internal.purs","end":[275,29]},"score":1,"packageInfo":{"values":["variant"],"tag":"Package"},"name":"impossible","moduleName":"Data.Variant.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["impossibleerror",[{"values":[{"sourceSpan":{"start":[273,1],"name":"src/BalanceTx/BalanceTx.purs","end":[273,34]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ImpossibleError","moduleName":"BalanceTx","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Represents that an error reason should be impossible\n"}],"tag":"SearchResult"}]],["imul",[{"values":[{"sourceSpan":{"start":[40,1],"name":".spago/math/v3.0.0/src/Math.purs","end":[40,41]},"score":12,"packageInfo":{"values":["math"],"tag":"Package"},"name":"imul","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the result of the C-like 32-bit multiplication of the two arguments.\n"}],"tag":"SearchResult"}]],["go",[{"values":[{"sourceSpan":{"start":[28,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/History.purs","end":[28,53]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"go","moduleName":"Web.HTML.History","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","History"],"Delta"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","History"],"History"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["goto",[{"values":[{"sourceSpan":{"start":[82,1],"name":".spago/purescript-toppokki/6983e07bf0aa55ab779bcef12df3df339a2b5bd9/src/Toppoki.purs","end":[82,32]},"score":0,"packageInfo":{"values":["purescript-toppokki"],"tag":"Package"},"name":"goto","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"URL"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Page"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["eq",[{"values":[{"sourceSpan":{"start":[595,1],"name":"src/Cardano/Types/Value.purs","end":[595,32]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"eq","moduleName":"Cardano.Types.Value","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"Value"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"Value"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Check whether one `Value` is equal to another. See `Value` for an explanation of how operations on `Value`s work.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[28,1],"name":".spago/prelude/v5.0.1/src/Data/Eq.purs","end":[29,26]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Eq","moduleName":"Data.Eq","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Eq` type class represents types which support decidable equality.\n\n`Eq` instances should satisfy the following laws:\n\n- Reflexivity: `x == x = true`\n- Symmetry: `x == y = y == x`\n- Transitivity: if `x == y` and `y == z` then `x == z`\n\n**Note:** The `Number` type is not an entirely law abiding member of this\nclass due to the presence of `NaN`, since `NaN /= NaN`. Additionally,\ncomputing with `Number` can result in a loss of precision, so sometimes\nvalues that should be equivalent are not.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[29,3],"name":".spago/prelude/v5.0.1/src/Data/Eq.purs","end":[29,26]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"eq","moduleName":"Data.Eq","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Eq"],"Eq"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"EQ","moduleName":"Data.Ordering","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[136,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Bool.purs","end":[136,66]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"Eq","moduleName":"Data.Typelevel.Bool","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Typelevel","Bool"],"BoolI"],"constraintArgs":[{"tag":"TypeVar","contents":"b1"}]},{"constraintClass":[["Data","Typelevel","Bool"],"BoolI"],"constraintArgs":[{"tag":"TypeVar","contents":"b2"}]},{"constraintClass":[["Data","Typelevel","Bool"],"BoolI"],"constraintArgs":[{"tag":"TypeVar","contents":"b3"}]}],"fundeps":[[["b1","b2"],["b3"]]],"arguments":[["b1",null],["b2",null],["b3",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Boolean equality check.\n\n`(Eq a b c) => a -> b -> c` applies the constraint that `c` must be\nthe result of testing whether `a` and `b` are equal.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[142,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Bool.purs","end":[142,53]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"eq","moduleName":"Data.Typelevel.Bool","info":{"values":[{"type":{"tag":"ForAll","contents":["b1",{"tag":"ForAll","contents":["b2",{"tag":"ForAll","contents":["b3",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Typelevel","Bool"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"b1"},{"tag":"TypeVar","contents":"b2"},{"tag":"TypeVar","contents":"b3"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b1"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b2"}]},{"tag":"TypeVar","contents":"b3"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[167,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Ops.purs","end":[167,8]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"EQ","moduleName":"Data.Typelevel.Num.Ops","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[316,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Ops.purs","end":[316,13]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"Eq","moduleName":"Data.Typelevel.Num.Ops","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["x",null],["y",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[319,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Ops.purs","end":[319,43]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"eq","moduleName":"Data.Typelevel.Num.Ops","info":{"values":[{"type":{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["y",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Typelevel","Num","Ops"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"x"},{"tag":"TypeVar","contents":"y"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"y"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"EQ","moduleName":"Prim.Ordering","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim","Ordering"],"Ordering"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"The 'equal to' ordering type.\n"}],"tag":"SearchResult"}]],["eq1",[{"values":[{"sourceSpan":{"start":[85,1],"name":".spago/prelude/v5.0.1/src/Data/Eq.purs","end":[86,49]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Eq1","moduleName":"Data.Eq","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["f",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Eq1` type class represents type constructors with decidable equality.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[86,3],"name":".spago/prelude/v5.0.1/src/Data/Eq.purs","end":[86,49]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"eq1","moduleName":"Data.Eq","info":{"values":[{"typeClassArguments":[["f",null]],"typeClass":[["Data","Eq"],"Eq1"],"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq1"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["eqabsolute",[{"values":[{"sourceSpan":{"start":[94,1],"name":".spago/numbers/v8.0.0/src/Data/Number/Approximate.purs","end":[94,55]},"score":5,"packageInfo":{"values":["numbers"],"tag":"Package"},"name":"eqAbsolute","moduleName":"Data.Number.Approximate","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Number","Approximate"],"Tolerance"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Compare two `Number`s and return `true` if they are equal up to the given\n(absolute) tolerance value. Note that this type of comparison is *not*\nscale-invariant. The relation induced by `(eqAbsolute (Tolerance eps))` is\nsymmetric and reflexive, but not transitive.\n\nExample:\n``` purs\n> (eqAbsolute (Tolerance 1.0)) 133.7 133.0\ntrue\n\n> (eqAbsolute (Tolerance 0.1)) 133.7 133.0\nfalse\n```\n"}],"tag":"SearchResult"}]],["eqapproximate",[{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/numbers/v8.0.0/src/Data/Number/Approximate.purs","end":[63,45]},"score":5,"packageInfo":{"values":["numbers"],"tag":"Package"},"name":"eqApproximate","moduleName":"Data.Number.Approximate","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test if two numbers are approximately equal, up to a relative difference\nof one part in a million:\n``` purs\neqApproximate = eqRelative (Fraction 1.0e-6)\n```\n\nExample\n``` purs\n> 0.1 + 0.2 == 0.3\nfalse\n\n> 0.1 + 0.2 ≅ 0.3\ntrue\n```\n"}],"tag":"SearchResult"}]],["eqfingertree",[{"values":[{"sourceSpan":{"start":[150,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree.purs","end":[151,46]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"eqFingerTree","moduleName":"Data.FingerTree","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"v"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Sequence","Internal"],"Measured"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"v"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree"],"FingerTree"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["eqrecord",[{"values":[{"sourceSpan":{"start":[97,1],"name":".spago/prelude/v5.0.1/src/Data/Eq.purs","end":[98,85]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"EqRecord","moduleName":"Data.Eq","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["rowlist",null],["row",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A class for records where all fields have `Eq` instances, used to implement\nthe `Eq` instance for records.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[98,3],"name":".spago/prelude/v5.0.1/src/Data/Eq.purs","end":[98,85]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"eqRecord","moduleName":"Data.Eq","info":{"values":[{"typeClassArguments":[["rowlist",null],["row",null]],"typeClass":[["Data","Eq"],"EqRecord"],"type":{"tag":"ForAll","contents":["rowlist",{"tag":"ForAll","contents":["row",{"tag":"ForAll","contents":["rlproxy",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"EqRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"rowlist"},{"tag":"TypeVar","contents":"row"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"rlproxy"},{"tag":"TypeVar","contents":"rowlist"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["eqrelative",[{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/numbers/v8.0.0/src/Data/Number/Approximate.purs","end":[44,54]},"score":5,"packageInfo":{"values":["numbers"],"tag":"Package"},"name":"eqRelative","moduleName":"Data.Number.Approximate","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Number","Approximate"],"Fraction"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Compare two `Number`s and return `true` if they are equal up to the\ngiven *relative* error (`Fraction` parameter).\n\nThis comparison is scale-invariant, i.e. if `eqRelative frac x y`, then\n`eqRelative frac (s * x) (s * y)` for a given scale factor `s > 0.0`\n(unless one of x, y is exactly `0.0`).\n\nNote that the relation that `eqRelative frac` induces on `Number` is\nnot an equivalence relation. It is reflexive and symmetric, but not\ntransitive.\n\nExample:\n``` purs\n> (eqRelative (Fraction 0.01)) 133.7 133.0\ntrue\n\n> (eqRelative (Fraction 0.001)) 133.7 133.0\nfalse\n\n> (eqRelative (Fraction 0.01)) (0.1 + 0.2) 0.3\ntrue\n```\n"}],"tag":"SearchResult"}]],["equal",[{"values":[{"sourceSpan":{"start":[217,1],"name":".spago/record/v3.0.0/src/Record.purs","end":[223,13]},"score":6,"packageInfo":{"values":["record"],"tag":"Package"},"name":"equal","moduleName":"Record","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["rs",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"rs"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Record"],"EqualFields"],"constraintArgs":[{"tag":"TypeVar","contents":"rs"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Check two records of the same type for equality.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[38,1],"name":".spago/test-unit/v16.0.0/src/Test/Unit/Assert.purs","end":[38,52]},"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"equal","moduleName":"Test.Unit.Assert","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Assert that two printable values are equal.\n"}],"tag":"SearchResult"}]],["equal'",[{"values":[{"sourceSpan":{"start":[46,1],"name":".spago/test-unit/v16.0.0/src/Test/Unit/Assert.purs","end":[46,55]},"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"equal'","moduleName":"Test.Unit.Assert","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Assert that two non-printable values are equal, using a provided failure\nstring instead of generating one.\n"}],"tag":"SearchResult"}]],["equalfields",[{"values":[{"sourceSpan":{"start":[226,1],"name":".spago/record/v3.0.0/src/Record.purs","end":[227,83]},"score":6,"packageInfo":{"values":["record"],"tag":"Package"},"name":"EqualFields","moduleName":"Record","info":{"values":[{"superclasses":[],"fundeps":[[["rs"],["row"]]],"arguments":[["rs",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","RowList"],"RowList"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}],["row",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[227,3],"name":".spago/record/v3.0.0/src/Record.purs","end":[227,83]},"score":6,"packageInfo":{"values":["record"],"tag":"Package"},"name":"equalFields","moduleName":"Record","info":{"values":[{"typeClassArguments":[["rs",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","RowList"],"RowList"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}],["row",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}]],"typeClass":[["Record"],"EqualFields"],"type":{"tag":"ForAll","contents":["rs",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","RowList"],"RowList"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"ForAll","contents":["row",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"ForAll","contents":["rlproxy",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Record"],"EqualFields"],"constraintArgs":[{"tag":"TypeVar","contents":"rs"},{"tag":"TypeVar","contents":"row"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"rlproxy"},{"tag":"TypeVar","contents":"rs"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["equals",[{"values":[{"sourceSpan":{"start":[335,1],"name":".spago/optparse/v4.1.0/src/Text/PrettyPrint/Leijen.purs","end":[335,14]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"equals","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The document @equals@ contains an equal sign, \\\"=\\\".\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[62,1],"name":".spago/typelevel-prelude/v6.0.0/src/Type/Data/Ordering.purs","end":[62,42]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"Equals","moduleName":"Type.Data.Ordering","info":{"values":[{"superclasses":[],"fundeps":[[["lhs","rhs"],["out"]]],"arguments":[["lhs",null],["rhs",null],["out",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[74,1],"name":".spago/typelevel-prelude/v6.0.0/src/Type/Data/Ordering.purs","end":[74,76]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"equals","moduleName":"Type.Data.Ordering","info":{"values":[{"type":{"tag":"ForAll","contents":["proxy",{"tag":"ForAll","contents":["l",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["o",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Type","Data","Ordering"],"Equals"],"constraintArgs":[{"tag":"TypeVar","contents":"l"},{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"proxy"},{"tag":"TypeVar","contents":"l"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"proxy"},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"o"}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/typelevel-prelude/v6.0.0/src/Type/Data/Symbol.purs","end":[27,42]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"Equals","moduleName":"Type.Data.Symbol","info":{"values":[{"superclasses":[],"fundeps":[[["lhs","rhs"],["out"]]],"arguments":[["lhs",null],["rhs",null],["out",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/typelevel-prelude/v6.0.0/src/Type/Data/Symbol.purs","end":[34,76]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"equals","moduleName":"Type.Data.Symbol","info":{"values":[{"type":{"tag":"ForAll","contents":["proxy",{"tag":"ForAll","contents":["l",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["o",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Type","Data","Symbol"],"Equals"],"constraintArgs":[{"tag":"TypeVar","contents":"l"},{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"proxy"},{"tag":"TypeVar","contents":"l"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"proxy"},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"o"}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["equivalence",[{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/contravariant/v5.0.0/src/Data/Equivalence.purs","end":[12,56]},"score":3,"packageInfo":{"values":["contravariant"],"tag":"Package"},"name":"Equivalence","moduleName":"Data.Equivalence","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"An adaptor allowing `>$<` to map over the inputs of an equivalence\nrelation.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":3,"packageInfo":{"values":["contravariant"],"tag":"Package"},"name":"Equivalence","moduleName":"Data.Equivalence","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["drag",[{"values":[{"sourceSpan":{"start":[8,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Event/DragEvent/EventTypes.purs","end":[8,18]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"drag","moduleName":"Web.HTML.Event.DragEvent.EventTypes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["dragend",[{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Event/DragEvent/EventTypes.purs","end":[26,21]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"dragend","moduleName":"Web.HTML.Event.DragEvent.EventTypes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["dragenter",[{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Event/DragEvent/EventTypes.purs","end":[11,23]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"dragenter","moduleName":"Web.HTML.Event.DragEvent.EventTypes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["dragevent",[{"values":[{"sourceSpan":{"start":[9,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Event/DragEvent.purs","end":[9,38]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"DragEvent","moduleName":"Web.HTML.Event.DragEvent","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["dragexit",[{"values":[{"sourceSpan":{"start":[14,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Event/DragEvent/EventTypes.purs","end":[14,22]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"dragexit","moduleName":"Web.HTML.Event.DragEvent.EventTypes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["draggable",[{"values":[{"sourceSpan":{"start":[122,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLElement.purs","end":[122,58]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"draggable","moduleName":"Web.HTML.HTMLElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLElement"],"HTMLElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["dragleave",[{"values":[{"sourceSpan":{"start":[17,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Event/DragEvent/EventTypes.purs","end":[17,23]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"dragleave","moduleName":"Web.HTML.Event.DragEvent.EventTypes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["dragover",[{"values":[{"sourceSpan":{"start":[20,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Event/DragEvent/EventTypes.purs","end":[20,22]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"dragover","moduleName":"Web.HTML.Event.DragEvent.EventTypes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["dragstart",[{"values":[{"sourceSpan":{"start":[5,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Event/DragEvent/EventTypes.purs","end":[5,23]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"dragstart","moduleName":"Web.HTML.Event.DragEvent.EventTypes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["drain",[{"values":[{"sourceSpan":{"start":[40,1],"name":".spago/pipes/v7.0.1/src/Pipes/Prelude.purs","end":[40,50]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"drain","moduleName":"Pipes.Prelude","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Core"],"Consumer_"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`discard` all incoming values\n"}],"tag":"SearchResult"}]],["drop",[{"values":[{"sourceSpan":{"start":[159,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/List/Trans.purs","end":[159,67]},"score":19,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"drop","moduleName":"Control.Monad.List.Trans","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Drop a number of elements from the front of a list.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[393,1],"name":".spago/arrays/v6.0.1/src/Data/Array/NonEmpty.purs","end":[393,52]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"drop","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[911,1],"name":".spago/arrays/v6.0.1/src/Data/Array.purs","end":[911,44]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"drop","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Drop a number of elements from the start of an array, creating a new array.\n\n```purescript\nletters = [\"a\", \"b\", \"c\", \"d\"]\n\ndrop 2 letters = [\"c\", \"d\"]\ndrop 10 letters = []\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[521,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy.purs","end":[521,42]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"drop","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Drop the specified number of elements from the front of a list.\n\nRunning time: `O(n)` where `n` is the number of elements to drop.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[256,1],"name":".spago/lists/v6.0.1/src/Data/List/NonEmpty.purs","end":[256,52]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"drop","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[547,1],"name":".spago/lists/v6.0.1/src/Data/List.purs","end":[547,42]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"drop","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Drop the specified number of elements from the front of a list.\n\nRunning time: `O(n)` where `n` is the number of elements to drop.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[140,1],"name":".spago/sequences/v3.0.2/src/Data/Sequence/NonEmpty.purs","end":[140,42]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"drop","moduleName":"Data.Sequence.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","NonEmpty"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"O(log(min(i,n-i))). Discard a given number of elements from the left end\nof a sequence, returning a possibly empty sequence.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[257,1],"name":".spago/sequences/v3.0.2/src/Data/Sequence.purs","end":[257,40]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"drop","moduleName":"Data.Sequence","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence"],"Seq"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"O(log(min(i,n-i))). Discard a given number of elements from the left side\nof a Seq.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[363,1],"name":".spago/strings/v5.0.0/src/Data/String/CodePoints.purs","end":[363,32]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"drop","moduleName":"Data.String.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Drops the given number of code points from the beginning of the string. If\nthe string does not have that many code points, returns the empty string.\nOperates in constant space and in time linear to the given number.\n\n```purescript\n>>> drop 5 \"𝐀𝐀 b c\"\n\"c\"\n-- compared to Data.String:\n>>> drop 5 \"𝐀𝐀 b c\"\n\"b c\" -- because \"𝐀\" occupies 2 code units\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[279,1],"name":".spago/strings/v5.0.0/src/Data/String/CodeUnits.purs","end":[279,47]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"drop","moduleName":"Data.String.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the string without the first `n` characters.\n\n```purescript\ndrop 6 \"Hello World\" == \"World\"\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[117,1],"name":".spago/strings/v5.0.0/src/Data/String/NonEmpty/CodePoints.purs","end":[117,54]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"drop","moduleName":"Data.String.NonEmpty.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[253,1],"name":".spago/strings/v5.0.0/src/Data/String/NonEmpty/CodeUnits.purs","end":[253,54]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"drop","moduleName":"Data.String.NonEmpty.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the string without the first `n` characters. Returns `Nothing` if\nmore characters are dropped than the string is long.\n\n```purescript\ndrop 6 (NonEmptyString \"Hello World\") == Just (NonEmptyString \"World\")\ndrop 20 (NonEmptyString \"Hello World\") == Nothing\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[116,1],"name":".spago/pipes/v7.0.1/src/Pipes/Prelude.purs","end":[116,53]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"drop","moduleName":"Pipes.Prelude","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Core"],"Pipe"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"drop discards n values going downstream\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Event/DragEvent/EventTypes.purs","end":[23,18]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"drop","moduleName":"Web.HTML.Event.DragEvent.EventTypes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["dropdigit",[{"values":[{"sourceSpan":{"start":[95,1],"name":".spago/sequences/v3.0.2/src/Data/FingerTree/Digit.purs","end":[95,49]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"dropDigit","moduleName":"Data.FingerTree.Digit","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","FingerTree","Digit"],"Digit"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["dropeffect",[{"values":[{"sourceSpan":{"start":[77,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Event/DataTransfer.purs","end":[77,44]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"DropEffect","moduleName":"Web.HTML.Event.DataTransfer","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[83,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Event/DataTransfer.purs","end":[83,48]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"dropEffect","moduleName":"Web.HTML.Event.DataTransfer","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Event","DataTransfer"],"DataTransfer"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Event","DataTransfer"],"DropEffect"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Gets the data transfer object's drop effect.\n"}],"tag":"SearchResult"}]],["dropend",[{"values":[{"sourceSpan":{"start":[396,1],"name":".spago/arrays/v6.0.1/src/Data/Array/NonEmpty.purs","end":[396,55]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"dropEnd","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[923,1],"name":".spago/arrays/v6.0.1/src/Data/Array.purs","end":[923,47]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"dropEnd","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Drop a number of elements from the end of an array, creating a new array.\n\n```purescript\nletters = [\"a\", \"b\", \"c\", \"d\"]\n\ndropEnd 2 letters = [\"a\", \"b\"]\ndropEnd 10 letters = []\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[556,1],"name":".spago/lists/v6.0.1/src/Data/List.purs","end":[556,45]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"dropEnd","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Drop the specified number of elements from the end of a list.\n\nRunning time: `O(2n - m)` where `n` is the number of elements in list\nand `m` is number of elements to drop.\n"}],"tag":"SearchResult"}]],["dropright",[{"values":[{"sourceSpan":{"start":[287,1],"name":".spago/strings/v5.0.0/src/Data/String/CodeUnits.purs","end":[287,37]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"dropRight","moduleName":"Data.String.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the string without the last `n` characters.\n\n```purescript\ndropRight 6 \"Hello World\" == \"Hello\"\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[269,1],"name":".spago/strings/v5.0.0/src/Data/String/NonEmpty/CodeUnits.purs","end":[269,59]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"dropRight","moduleName":"Data.String.NonEmpty.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the string without the last `n` characters. Returns `Nothing` if\nmore characters are dropped than the string is long.\n\n```purescript\ndropRight 6 (NonEmptyString \"Hello World\") == Just (NonEmptyString \"Hello\")\ndropRight 20 (NonEmptyString \"Hello World\") == Nothing\n```\n"}],"tag":"SearchResult"}]],["dropwhile",[{"values":[{"sourceSpan":{"start":[167,1],"name":".spago/transformers/v5.2.0/src/Control/Monad/List/Trans.purs","end":[167,83]},"score":19,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"dropWhile","moduleName":"Control.Monad.List.Trans","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Drop elements from the front of a list while a predicate holds.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[399,1],"name":".spago/arrays/v6.0.1/src/Data/Array/NonEmpty.purs","end":[399,68]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"dropWhile","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[933,1],"name":".spago/arrays/v6.0.1/src/Data/Array.purs","end":[933,60]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"dropWhile","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Remove the longest initial subarray for which all element satisfy the\nspecified predicate, creating a new array.\n\n```purescript\ndropWhile (_ < 0) [-3, -1, 0, 4, -6] = [0, 4, -6]\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[531,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy.purs","end":[531,58]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"dropWhile","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Drop those elements from the front of a list which match a predicate.\n\nRunning time (worst case): `O(n)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[259,1],"name":".spago/lists/v6.0.1/src/Data/List/NonEmpty.purs","end":[259,68]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"dropWhile","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[562,1],"name":".spago/lists/v6.0.1/src/Data/List.purs","end":[562,58]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"dropWhile","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Drop those elements from the front of a list which match a predicate.\n\nRunning time (worst case): `O(n)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[375,1],"name":".spago/strings/v5.0.0/src/Data/String/CodePoints.purs","end":[375,56]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"dropWhile","moduleName":"Data.String.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Drops the leading sequence of code points which all match the given\npredicate from the string. Operates in constant space and in time linear\nto the length of the string.\n\n```purescript\n>>> dropWhile (\\c -> fromEnum c == 0x1D400) \"𝐀𝐀 b c 𝐀\"\n\" b c 𝐀\"\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[296,1],"name":".spago/strings/v5.0.0/src/Data/String/CodeUnits.purs","end":[296,51]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"dropWhile","moduleName":"Data.String.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the suffix remaining after `takeWhile`.\n\n```purescript\ndropWhile (_ /= '.') \"Test.purs\" == \".purs\"\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[126,1],"name":".spago/strings/v5.0.0/src/Data/String/NonEmpty/CodePoints.purs","end":[126,78]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"dropWhile","moduleName":"Data.String.NonEmpty.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[283,1],"name":".spago/strings/v5.0.0/src/Data/String/NonEmpty/CodeUnits.purs","end":[283,73]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"dropWhile","moduleName":"Data.String.NonEmpty.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the suffix remaining after `takeWhile`.\n\n```purescript\ndropWhile (_ /= '.') (NonEmptyString \"Test.purs\") == Just (NonEmptyString \".purs\")\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[127,1],"name":".spago/pipes/v7.0.1/src/Pipes/Prelude.purs","end":[127,69]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"dropWhile","moduleName":"Pipes.Prelude","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Core"],"Pipe"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"dropWhile discards values going downstream until one violates the\n"}],"tag":"SearchResult"}]],["cs",[{"values":[{"sourceSpan":{"start":[311,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Ops.purs","end":[311,32]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"CS","moduleName":"Data.Typelevel.Num.Ops","info":{"values":[{"superclasses":[],"fundeps":[[["r1","r2"],["r3"]]],"arguments":[["r1",null],["r2",null],["r3",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["cslinttouint",[{"values":[{"sourceSpan":{"start":[637,1],"name":"src/Deserialization/Transaction.purs","end":[638,75]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"cslIntToUInt","moduleName":"Deserialization.Transaction","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Error"],"E"]},{"tag":"ParensInType","contents":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Type","Row"],"+"]},{"tag":"TypeConstructor","contents":[["Deserialization","Error"],"FromCslRepError"]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["cslnumbertouint",[{"values":[{"sourceSpan":{"start":[632,1],"name":"src/Deserialization/Transaction.purs","end":[633,78]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"cslNumberToUInt","moduleName":"Deserialization.Transaction","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Error"],"E"]},{"tag":"ParensInType","contents":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Type","Row"],"+"]},{"tag":"TypeConstructor","contents":[["Deserialization","Error"],"FromCslRepError"]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["cslratiotorational",[{"values":[{"sourceSpan":{"start":[642,1],"name":"src/Deserialization/Transaction.purs","end":[646,44]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"cslRatioToRational","moduleName":"Deserialization.Transaction","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["denominator",{"tag":"TypeConstructor","contents":[["Types","BigNum"],"BigNum"]},{"tag":"RCons","contents":["numerator",{"tag":"TypeConstructor","contents":[["Types","BigNum"],"BigNum"]},{"tag":"REmpty","contents":{}}]}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Error"],"E"]},{"tag":"ParensInType","contents":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Type","Row"],"+"]},{"tag":"TypeConstructor","contents":[["Deserialization","Error"],"FromCslRepError"]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Ratio"],"Ratio"]},{"tag":"TypeConstructor","contents":[["Data","BigInt"],"BigInt"]}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["au",[{"values":[{"sourceSpan":{"start":[32,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Iso.purs","end":[32,72]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"au","moduleName":"Data.Lens.Iso","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"AnIso"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"t"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"s"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["auf",[{"values":[{"sourceSpan":{"start":[35,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Iso.purs","end":[35,99]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"auf","moduleName":"Data.Lens.Iso","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["p",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Profunctor"],"Profunctor"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"AnIso"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"s"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"t"}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["august",[{"values":[{"sourceSpan":null,"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"August","moduleName":"Data.Date.Component","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["auth",[{"values":[{"sourceSpan":{"start":[84,1],"name":".spago/node-http/v6.0.0/src/Node/HTTP/Client.purs","end":[84,37]},"score":1,"packageInfo":{"values":["node-http"],"tag":"Package"},"name":"auth","moduleName":"Node.HTTP.Client","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"tag":"TypeConstructor","contents":[["Node","HTTP","Client"],"RequestOptions"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Basic authentication\n"}],"tag":"SearchResult"}]],["auto",[{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"Auto","moduleName":"Web.HTML.HTMLImageElement.DecodingHint","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["autocomplete",[{"values":[{"sourceSpan":{"start":[62,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLFormElement.purs","end":[62,64]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"autocomplete","moduleName":"Web.HTML.HTMLFormElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLFormElement"],"HTMLFormElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[181,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLInputElement.purs","end":[181,66]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"autocomplete","moduleName":"Web.HTML.HTMLInputElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLInputElement"],"HTMLInputElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[130,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLTextAreaElement.purs","end":[130,68]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"autocomplete","moduleName":"Web.HTML.HTMLTextAreaElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLTextAreaElement"],"HTMLTextAreaElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["autofocus",[{"values":[{"sourceSpan":{"start":[105,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLButtonElement.purs","end":[105,64]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"autofocus","moduleName":"Web.HTML.HTMLButtonElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLButtonElement"],"HTMLButtonElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[184,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLInputElement.purs","end":[184,63]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"autofocus","moduleName":"Web.HTML.HTMLInputElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLInputElement"],"HTMLInputElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[97,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLKeygenElement.purs","end":[97,64]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"autofocus","moduleName":"Web.HTML.HTMLKeygenElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLKeygenElement"],"HTMLKeygenElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[106,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLSelectElement.purs","end":[106,64]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"autofocus","moduleName":"Web.HTML.HTMLSelectElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLSelectElement"],"HTMLSelectElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[133,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLTextAreaElement.purs","end":[133,66]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"autofocus","moduleName":"Web.HTML.HTMLTextAreaElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLTextAreaElement"],"HTMLTextAreaElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["autoplay",[{"values":[{"sourceSpan":{"start":[174,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLMediaElement.purs","end":[174,62]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"autoplay","moduleName":"Web.HTML.HTMLMediaElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLMediaElement"],"HTMLMediaElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["auxiliarydata",[{"values":[{"sourceSpan":{"start":[821,1],"name":"src/Cardano/Types/Transaction.purs","end":[825,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"AuxiliaryData","moduleName":"Cardano.Types.Transaction","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"AuxiliaryData","moduleName":"Cardano.Types.Transaction","info":{"values":[{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["metadata",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Types","TransactionMetadata"],"GeneralTransactionMetadata"]}]},{"tag":"RCons","contents":["nativeScripts",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Transaction"],"NativeScript"]}]}}]},{"tag":"RCons","contents":["plutusScripts",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Types","Scripts"],"PlutusScript"]}]}}]},{"tag":"REmpty","contents":{}}]}]}]}]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[95,1],"name":"src/Serialization/Types.purs","end":[95,42]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"AuxiliaryData","moduleName":"Serialization.Types","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["auxiliarydatahash",[{"values":[{"sourceSpan":{"start":[302,1],"name":"src/Cardano/Types/Transaction.purs","end":[302,56]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"AuxiliaryDataHash","moduleName":"Cardano.Types.Transaction","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"AuxiliaryDataHash","moduleName":"Cardano.Types.Transaction","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Types","ByteArray"],"ByteArray"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[96,1],"name":"src/Serialization/Types.purs","end":[96,46]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"AuxiliaryDataHash","moduleName":"Serialization.Types","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["_waitfornavigation",[{"values":[{"sourceSpan":{"start":[348,1],"name":".spago/purescript-toppokki/6983e07bf0aa55ab779bcef12df3df339a2b5bd9/src/Toppoki.purs","end":[348,97]},"score":0,"packageInfo":{"values":["purescript-toppokki"],"tag":"Package"},"name":"_waitForNavigation","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"ForAll","contents":["options",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn2"]},{"tag":"TypeVar","contents":"options"}]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Page"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Promise"],"Promise"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_withdrawals",[{"values":[{"sourceSpan":{"start":[647,1],"name":"src/Cardano/Types/Transaction.purs","end":[647,62]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"_withdrawals","moduleName":"Cardano.Types.Transaction","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Transaction"],"TxBody"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeConstructor","contents":[["Serialization","Address"],"RewardAddress"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"Coin"]}]}}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_witnessset",[{"values":[{"sourceSpan":{"start":[190,1],"name":"src/Cardano/Types/Transaction.purs","end":[190,55]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"_witnessSet","moduleName":"Cardano.Types.Transaction","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Transaction"],"Transaction"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Transaction"],"TransactionWitnessSet"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_wsclose",[{"values":[{"sourceSpan":{"start":[62,1],"name":"src/JsWebSocket.purs","end":[62,54]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"_wsClose","moduleName":"JsWebSocket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["JsWebSocket"],"JsWebSocket"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_wsreconnect",[{"values":[{"sourceSpan":{"start":[59,1],"name":"src/JsWebSocket.purs","end":[60,32]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"_wsReconnect","moduleName":"JsWebSocket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["JsWebSocket"],"JsWebSocket"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_wssend",[{"values":[{"sourceSpan":{"start":[56,1],"name":"src/JsWebSocket.purs","end":[57,69]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"_wsSend","moduleName":"JsWebSocket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["JsWebSocket"],"JsWebSocket"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_wssetbootstraps",[{"values":[{"sourceSpan":{"start":[203,1],"name":"src/Serialization/WitnessSet.purs","end":[207,17]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"_wsSetBootstraps","moduleName":"Serialization.WitnessSet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["FfiHelpers"],"ContainerHelper"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Types"],"TransactionWitnessSet"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Serialization","Types"],"BootstrapWitness"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_wssetplutusdata",[{"values":[{"sourceSpan":{"start":[216,1],"name":"src/Serialization/WitnessSet.purs","end":[220,17]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"_wsSetPlutusData","moduleName":"Serialization.WitnessSet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["FfiHelpers"],"ContainerHelper"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Types"],"TransactionWitnessSet"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Serialization","Types"],"PlutusData"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_wssetplutusscripts",[{"values":[{"sourceSpan":{"start":[231,1],"name":"src/Serialization/WitnessSet.purs","end":[235,17]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"_wsSetPlutusScripts","moduleName":"Serialization.WitnessSet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["FfiHelpers"],"ContainerHelper"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Types"],"TransactionWitnessSet"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Serialization","Types"],"PlutusScript"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_wssetredeemers",[{"values":[{"sourceSpan":{"start":[227,1],"name":"src/Serialization/WitnessSet.purs","end":[228,79]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"_wsSetRedeemers","moduleName":"Serialization.WitnessSet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["FfiHelpers"],"ContainerHelper"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Serialization","Types"],"TransactionWitnessSet"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Serialization","Types"],"Redeemer"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_wswatch",[{"values":[{"sourceSpan":{"start":[64,1],"name":"src/JsWebSocket.purs","end":[65,74]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"_wsWatch","moduleName":"JsWebSocket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["JsWebSocket"],"JsWebSocket"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]]]