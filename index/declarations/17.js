// This file was generated by purescript-docs-search.
window.DocsSearchIndex["17"] = [["|+|",[{"values":[{"sourceSpan":{"start":[45,1],"name":".spago/untagged-union/v0.3.0/src/Untagged/Union.purs","end":[45,27]},"score":0,"packageInfo":{"values":["untagged-union"],"tag":"Package"},"name":"type (|+|)","moduleName":"Untagged.Union","info":{"values":[],"tag":"TypeAliasResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["vcat",[{"values":[{"sourceSpan":{"start":[196,1],"name":".spago/optparse/v4.1.0/src/Text/PrettyPrint/Leijen.purs","end":[196,25]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"vcat","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The document @(vcat xs)@ concatenates all documents @xs@\nvertically with @(\\<$$\\>)@. If a 'group' undoes the line breaks\ninserted by @vcat@, all documents are directly concatenated.\n"}],"tag":"SearchResult"}]],["vcatchunks",[{"values":[{"sourceSpan":{"start":[107,1],"name":".spago/optparse/v4.1.0/src/Options/Applicative/Help/Chunk.purs","end":[107,45]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"vcatChunks","moduleName":"Options.Applicative.Help.Chunk","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Concatenate 'Chunk's vertically.\n"}],"tag":"SearchResult"}]],["tell",[{"values":[{"sourceSpan":{"start":[20,3],"name":".spago/transformers/v5.2.0/src/Control/Monad/Writer/Class.purs","end":[20,22]},"score":19,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"tell","moduleName":"Control.Monad.Writer.Class","info":{"values":[{"typeClassArguments":[["w",null],["m",null]],"typeClass":[["Control","Monad","Writer","Class"],"MonadTell"],"type":{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Writer","Class"],"MonadTell"],"constraintArgs":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["tellln",[{"values":[{"sourceSpan":{"start":[20,1],"name":".spago/spec/v5.0.1/src/Test/Spec/Console.purs","end":[24,12]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"tellLn","moduleName":"Test.Spec.Console","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Writer","Class"],"MonadWriter"],"constraintArgs":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["telllns",[{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/spec/v5.0.1/src/Test/Spec/Console.purs","end":[31,12]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"tellLns","moduleName":"Test.Spec.Console","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Writer","Class"],"MonadWriter"],"constraintArgs":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["temporaryfailure",[{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["exitcodes"],"tag":"Package"},"name":"TemporaryFailure","moduleName":"ExitCodes","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["test",[{"values":[{"sourceSpan":{"start":[82,1],"name":".spago/strings/v5.0.0/src/Data/String/Regex.purs","end":[82,50]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"test","moduleName":"Data.String.Regex","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"Regex"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns `true` if the `Regex` matches the string. In contrast to\n`RegExp.prototype.test()` in JavaScript, `test` does not affect\nthe `lastIndex` property of the Regex.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["mote"],"tag":"Package"},"name":"Test","moduleName":"Mote.Description","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Mote","Description"],"RunMode"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Mote","Entry"],"Entry"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"t"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[17,1],"name":".spago/mote/v1.1.0/src/Mote/Description.purs","end":[17,51]},"score":0,"packageInfo":{"values":["mote"],"tag":"Package"},"name":"test","moduleName":"Mote.Description","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["t",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Mote","Description"],"Description"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"t"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Basic constructor for `Test` with a label and value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[87,1],"name":".spago/mote/v1.1.0/src/Mote/Monad.purs","end":[92,31]},"score":0,"packageInfo":{"values":["mote"],"tag":"Package"},"name":"test","moduleName":"Mote.Monad","info":{"values":[{"type":{"tag":"ForAll","contents":["bracket",{"tag":"ForAll","contents":["test",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"test"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Mote","Monad"],"MoteT"]},{"tag":"TypeVar","contents":"bracket"}]},{"tag":"TypeVar","contents":"test"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Describes a new test.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["mote"],"tag":"Package"},"name":"Test","moduleName":"Mote.Plan","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Mote","Entry"],"Entry"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"t"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[204,3],"name":".spago/quickcheck/v7.1.0/src/Test/QuickCheck.purs","end":[204,29]},"score":17,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"test","moduleName":"Test.QuickCheck","info":{"values":[{"typeClassArguments":[["prop",null]],"typeClass":[["Test","QuickCheck"],"Testable"],"type":{"tag":"ForAll","contents":["prop",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","QuickCheck"],"Testable"],"constraintArgs":[{"tag":"TypeVar","contents":"prop"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"prop"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"Test","moduleName":"Test.Spec.Runner.Event","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Test","Spec","Runner","Event"],"Execution"]},{"tag":"TypeConstructor","contents":[["Test","Spec","Tree"],"Path"]},{"tag":"TypeConstructor","contents":[["Test","Spec","Runner","Event"],"Name"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[47,1],"name":".spago/test-unit/v16.0.0/src/Test/Unit.purs","end":[47,21]},"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"Test","moduleName":"Test.Unit","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[117,1],"name":".spago/test-unit/v16.0.0/src/Test/Unit.purs","end":[117,36]},"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"test","moduleName":"Test.Unit","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Define a labelled test.\n"}],"tag":"SearchResult"}]],["testable",[{"values":[{"sourceSpan":{"start":[203,1],"name":".spago/quickcheck/v7.1.0/src/Test/QuickCheck.purs","end":[204,29]},"score":17,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"Testable","moduleName":"Test.QuickCheck","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["prop",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Testable` class represents _testable properties_.\n\nA testable property is a function of zero or more `Arbitrary` arguments,\nreturning a `Boolean` or `Result`.\n\nTestable properties can be passed to the `quickCheck` function.\n"}],"tag":"SearchResult"}]],["testend",[{"values":[{"sourceSpan":null,"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"TestEnd","moduleName":"Test.Spec.Runner.Event","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Test","Spec","Tree"],"Path"]},{"tag":"TypeConstructor","contents":[["Test","Spec","Runner","Event"],"Name"]},{"tag":"TypeConstructor","contents":[["Test","Spec","Result"],"Result"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["testevents",[{"values":[{"sourceSpan":{"start":[161,1],"name":".spago/spec/v5.0.1/src/Test/Spec/Runner.purs","end":[161,64]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"TestEvents","moduleName":"Test.Spec.Runner","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Core"],"Producer"]},{"tag":"TypeConstructor","contents":[["Test","Spec","Runner","Event"],"Event"]}]},{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec","Tree"],"Tree"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]},{"tag":"TypeConstructor","contents":[["Test","Spec","Result"],"Result"]}]}}]}}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["testf",[{"values":[{"sourceSpan":{"start":[89,1],"name":".spago/test-unit/v16.0.0/src/Test/Unit.purs","end":[91,38]},"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"TestF","moduleName":"Test.Unit","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["testfeedbackistrue",[{"values":[{"sourceSpan":{"start":[35,1],"name":"src/Contract/Test/E2E/Feedback.purs","end":[35,51]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"testFeedbackIsTrue","moduleName":"Contract.Test.E2E.Feedback","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Page"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convenience function for boolean feedback\n"}],"tag":"SearchResult"}]],["testgroup",[{"values":[{"sourceSpan":null,"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"TestGroup","moduleName":"Test.Unit","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Test","Unit"],"Group"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Skip"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Only"]},{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["testlist",[{"values":[{"sourceSpan":{"start":[197,1],"name":".spago/test-unit/v16.0.0/src/Test/Unit.purs","end":[197,50]},"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"TestList","moduleName":"Test.Unit","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}}]}}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A list of collected tests, represented as a tuple of each test's path\nand the `Test` itself. The path, in this case, means the name of the\ntest preceded by the name of each parent test suite, in top down order.\n"}],"tag":"SearchResult"}]],["testnetconfig",[{"values":[{"sourceSpan":{"start":[42,1],"name":"src/Contract/Config.purs","end":[42,33]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"testnetConfig","moduleName":"Contract.Config","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Monad"],"ConfigParams"]},{"tag":"REmpty","contents":{}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["testnetgeroconfig",[{"values":[{"sourceSpan":{"start":[57,1],"name":"src/Contract/Config.purs","end":[57,37]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"testnetGeroConfig","moduleName":"Contract.Config","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Monad"],"ConfigParams"]},{"tag":"REmpty","contents":{}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["testnetid",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"TestnetId","moduleName":"Serialization.Address","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["testnetnamiconfig",[{"values":[{"sourceSpan":{"start":[54,1],"name":"src/Contract/Config.purs","end":[54,37]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"testnetNamiConfig","moduleName":"Contract.Config","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Monad"],"ConfigParams"]},{"tag":"REmpty","contents":{}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["testnetqueryconfig",[{"values":[{"sourceSpan":{"start":[27,1],"name":"src/QueryM/Config.purs","end":[27,34]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"testnetQueryConfig","moduleName":"QueryM.Config","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["QueryM"],"QueryConfig"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["testnettracequeryconfig",[{"values":[{"sourceSpan":{"start":[16,1],"name":"src/QueryM/Config.purs","end":[16,39]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"testnetTraceQueryConfig","moduleName":"QueryM.Config","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["QueryM"],"QueryConfig"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["testonly",[{"values":[{"sourceSpan":{"start":[121,1],"name":".spago/test-unit/v16.0.0/src/Test/Unit.purs","end":[121,40]},"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"testOnly","moduleName":"Test.Unit","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Run only this test.\n"}],"tag":"SearchResult"}]],["testoptions",[{"values":[{"sourceSpan":{"start":[45,1],"name":"src/Contract/Test/E2E/Browser.purs","end":[51,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"TestOptions","moduleName":"Contract.Test.E2E.Browser","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Parameters for E2E tests\n'chromeExe' should point to a chromium or google-chrome binary.\n'namiDir' should point to a directory where Nami is unpacked.\n'geroDir' should point to a directory where Gero is unpacked.\n   both Nami and Gero must be provided to run the full suite of tests.\n'chromeUserDataDir' should point to a chromium profile directory. If\n   not provided, test-data/chrome-user-data is used.\n   'make e2e-test' then takes care to unpack Nami and Gero settings to there,\n   so that wallet data is available.\n'noHeadless' is a flag to display the browser during the tests.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"TestOptions","moduleName":"Contract.Test.E2E.Browser","info":{"values":[{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["chromeExe",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"RCons","contents":["namiDir",{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]},{"tag":"RCons","contents":["geroDir",{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]},{"tag":"RCons","contents":["chromeUserDataDir",{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]},{"tag":"RCons","contents":["noHeadless",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["testplan",[{"values":[{"sourceSpan":{"start":[34,1],"name":"test/Unit.purs","end":[34,27]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"testPlan","moduleName":"Ctl.Test.Unit","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["TestM"],"TestPlanM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[18,1],"name":"test/Integration.purs","end":[18,27]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"testPlan","moduleName":"Test.Integration","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["TestM"],"TestPlanM"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["testplanm",[{"values":[{"sourceSpan":{"start":[22,1],"name":"test/TestM.purs","end":[22,55]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"TestPlanM","moduleName":"TestM","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Mote","Monad"],"MoteT"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]},{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]}]},{"tag":"TypeVar","contents":"a"}]},"arguments":[["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["tests",[{"values":[{"sourceSpan":{"start":[572,1],"name":"test/Data.purs","end":[572,22]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"tests","moduleName":"Test.Data","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Poor man's type level tests\n"}],"tag":"SearchResult"}]],["testskip",[{"values":[{"sourceSpan":{"start":[125,1],"name":".spago/test-unit/v16.0.0/src/Test/Unit.purs","end":[125,40]},"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"testSkip","moduleName":"Test.Unit","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Skip a test.\n"}],"tag":"SearchResult"}]],["testsuite",[{"values":[{"sourceSpan":{"start":[93,1],"name":".spago/test-unit/v16.0.0/src/Test/Unit.purs","end":[93,33]},"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"TestSuite","moduleName":"Test.Unit","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestF"]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["testunit",[{"values":[{"sourceSpan":null,"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"TestUnit","moduleName":"Test.Unit","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Skip"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Only"]},{"tag":"ParensInType","contents":{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}},{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["testwithname",[{"values":[{"sourceSpan":null,"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"TestWithName","moduleName":"Test.Spec","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["text",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Text","moduleName":"Prim.TypeError","info":{"values":[{"kind":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}]},{"tag":"TypeConstructor","contents":[["Prim","TypeError"],"Doc"]}]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"The Text type constructor makes a Doc from a Symbol\nto be used in a custom type error.\n\nFor more information, see\n[the Custom Type Errors guide](https://github.com/purescript/documentation/blob/master/guides/Custom-Type-Errors.md).\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"Text","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[634,1],"name":".spago/optparse/v4.1.0/src/Text/PrettyPrint/Leijen.purs","end":[634,22]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"text","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The document @(text s)@ contains the literal string @s@. The\nstring shouldn't contain any newline (@'\\n'@) characters. If the\nstring contains newline characters, the function 'string' should be\nused.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Text","moduleName":"Types.TransactionMetadata","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[13,1],"name":".spago/web-dom/v5.0.0/src/Web/DOM/Text.purs","end":[13,33]},"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"Text","moduleName":"Web.DOM.Text","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"Text","moduleName":"Web.HTML.Event.DataTransfer.DataTransferItem","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[81,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLAnchorElement.purs","end":[81,58]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"text","moduleName":"Web.HTML.HTMLAnchorElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLAnchorElement"],"HTMLAnchorElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[111,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLOptionElement.purs","end":[111,58]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"text","moduleName":"Web.HTML.HTMLOptionElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLOptionElement"],"HTMLOptionElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[74,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLScriptElement.purs","end":[74,58]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"text","moduleName":"Web.HTML.HTMLScriptElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLScriptElement"],"HTMLScriptElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[57,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLTitleElement.purs","end":[57,57]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"text","moduleName":"Web.HTML.HTMLTitleElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLTitleElement"],"HTMLTitleElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["textcontent",[{"values":[{"sourceSpan":{"start":[138,1],"name":".spago/web-dom/v5.0.0/src/Web/DOM/Node.purs","end":[138,52]},"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"textContent","moduleName":"Web.DOM.Node","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"If the node type is document fragment, element, text, processing\ninstruction, or comment this is the node's data, or null in all other\ncases.\n"}],"tag":"SearchResult"}]],["textcss",[{"values":[{"sourceSpan":{"start":[58,1],"name":".spago/media-types/v5.0.0/src/Data/MediaType/Common.purs","end":[58,21]},"score":2,"packageInfo":{"values":["media-types"],"tag":"Package"},"name":"textCSS","moduleName":"Data.MediaType.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","MediaType"],"MediaType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The `text/css` media type.\n"}],"tag":"SearchResult"}]],["textcsv",[{"values":[{"sourceSpan":{"start":[42,1],"name":".spago/media-types/v5.0.0/src/Data/MediaType/Common.purs","end":[42,21]},"score":2,"packageInfo":{"values":["media-types"],"tag":"Package"},"name":"textCSV","moduleName":"Data.MediaType.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","MediaType"],"MediaType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The `text/csv` media type.\n"}],"tag":"SearchResult"}]],["textenvelope",[{"values":[{"sourceSpan":{"start":[63,1],"name":"src/Cardano/TextEnvelope.purs","end":[68,6]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"TextEnvelope","moduleName":"Cardano.TextEnvelope","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"We only support `TextEnvelope`s whose cborHex represents the cbor type byte string\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"TextEnvelope","moduleName":"Cardano.TextEnvelope","info":{"values":[{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["type_",{"tag":"TypeConstructor","contents":[["Cardano","TextEnvelope"],"TextEnvelopeType"]},{"tag":"RCons","contents":["description",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["bytes",{"tag":"TypeConstructor","contents":[["Types","ByteArray"],"ByteArray"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["textenvelopebytes",[{"values":[{"sourceSpan":{"start":[93,1],"name":"src/Cardano/TextEnvelope.purs","end":[93,65]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"textEnvelopeBytes","moduleName":"Cardano.TextEnvelope","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","TextEnvelope"],"TextEnvelopeType"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Types","ByteArray"],"ByteArray"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[23,1],"name":"src/Contract/TextEnvelope.purs","end":[23,76]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"textEnvelopeBytes","moduleName":"Contract.TextEnvelope","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","TextEnvelope"],"TextEnvelopeType"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Monad"],"Contract"]},{"tag":"REmpty","contents":{}}]},{"tag":"TypeConstructor","contents":[["Types","ByteArray"],"ByteArray"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["textenvelopedecodeerror",[{"values":[{"sourceSpan":{"start":[72,1],"name":"src/Cardano/TextEnvelope.purs","end":[74,34]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"TextEnvelopeDecodeError","moduleName":"Cardano.TextEnvelope","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["textenvelopetype",[{"values":[{"sourceSpan":{"start":[33,1],"name":"src/Cardano/TextEnvelope.purs","end":[36,34]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"TextEnvelopeType","moduleName":"Cardano.TextEnvelope","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["texthtml",[{"values":[{"sourceSpan":{"start":[46,1],"name":".spago/media-types/v5.0.0/src/Data/MediaType/Common.purs","end":[46,22]},"score":2,"packageInfo":{"values":["media-types"],"tag":"Package"},"name":"textHTML","moduleName":"Data.MediaType.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","MediaType"],"MediaType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The `text/html` media type.\n"}],"tag":"SearchResult"}]],["textify",[{"values":[{"sourceSpan":{"start":[356,1],"name":".spago/medea/8b215851959aa8bbf33e6708df6bd683c89d1a5a/src/Data/Medea.purs","end":[356,32]},"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"textify","moduleName":"Data.Medea","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Medea","Parser","Primitive"],"Identifier"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["textlength",[{"values":[{"sourceSpan":{"start":[182,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLTextAreaElement.purs","end":[182,63]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"textLength","moduleName":"Web.HTML.HTMLTextAreaElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLTextAreaElement"],"HTMLTextAreaElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["textnode",[{"values":[{"sourceSpan":null,"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"TextNode","moduleName":"Web.DOM.NodeType","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["textplain",[{"values":[{"sourceSpan":{"start":[50,1],"name":".spago/media-types/v5.0.0/src/Data/MediaType/Common.purs","end":[50,23]},"score":2,"packageInfo":{"values":["media-types"],"tag":"Package"},"name":"textPlain","moduleName":"Data.MediaType.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","MediaType"],"MediaType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The `text/plain` media type.\n"}],"tag":"SearchResult"}]],["textxml",[{"values":[{"sourceSpan":{"start":[54,1],"name":".spago/media-types/v5.0.0/src/Data/MediaType/Common.purs","end":[54,21]},"score":2,"packageInfo":{"values":["media-types"],"tag":"Package"},"name":"textXML","moduleName":"Data.MediaType.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","MediaType"],"MediaType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The `text/xml` media type.\n"}],"tag":"SearchResult"}]],["t3",[{"values":[{"sourceSpan":{"start":[33,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Product/Nested.purs","end":[33,35]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"T3","moduleName":"Data.Functor.Product.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Product"],"Product"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Product","Nested"],"T2"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"z"}]}}]},"arguments":[["a",null],["b",null],["z",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[86,1],"name":".spago/tuples/v6.0.1/src/Data/Tuple/Nested.purs","end":[86,33]},"score":34,"packageInfo":{"values":["tuples"],"tag":"Package"},"name":"T3","moduleName":"Data.Tuple.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"T2"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"z"}]}}]},"arguments":[["a",null],["b",null],["z",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["sfail",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"SFail","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["sfail'",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"SFail'","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["pi",[{"values":[{"sourceSpan":{"start":[91,1],"name":".spago/math/v3.0.0/src/Math.purs","end":[91,28]},"score":12,"packageInfo":{"values":["math"],"tag":"Package"},"name":"pi","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The ratio of the circumference of a circle to its diameter, around 3.14159.\n"}],"tag":"SearchResult"}]],["pid",[{"values":[{"sourceSpan":{"start":[7,1],"name":".spago/posix-types/v5.0.0/src/Data/Posix.purs","end":[7,22]},"score":2,"packageInfo":{"values":["posix-types"],"tag":"Package"},"name":"Pid","moduleName":"Data.Posix","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A process ID.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["posix-types"],"tag":"Package"},"name":"Pid","moduleName":"Data.Posix","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[120,1],"name":".spago/node-child-process/v7.1.0/src/Node/ChildProcess.purs","end":[120,27]},"score":0,"packageInfo":{"values":["node-child-process"],"tag":"Package"},"name":"pid","moduleName":"Node.ChildProcess","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","ChildProcess"],"ChildProcess"]}]},{"tag":"TypeConstructor","contents":[["Data","Posix"],"Pid"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The process ID of a child process. Note that if the process has already\nexited, another process may have taken the same ID, so be careful!\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[127,1],"name":".spago/node-process/v8.2.0/src/Node/Process.purs","end":[127,11]},"score":2,"packageInfo":{"values":["node-process"],"tag":"Package"},"name":"pid","moduleName":"Node.Process","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Posix"],"Pid"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["pipe",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["node-child-process"],"tag":"Package"},"name":"Pipe","moduleName":"Node.ChildProcess","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[493,1],"name":".spago/node-child-process/v7.1.0/src/Node/ChildProcess.purs","end":[493,37]},"score":0,"packageInfo":{"values":["node-child-process"],"tag":"Package"},"name":"pipe","moduleName":"Node.ChildProcess","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Node","ChildProcess"],"StdIOBehaviour"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create pipes for each of the three standard IO streams.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[233,1],"name":".spago/node-streams/v5.0.0/src/Node/Stream.purs","end":[237,25]},"score":5,"packageInfo":{"values":["node-streams"],"tag":"Package"},"name":"pipe","moduleName":"Node.Stream","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","Stream"],"Readable"]},{"tag":"TypeVar","contents":"w"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","Stream"],"Writable"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","Stream"],"Writable"]},{"tag":"TypeVar","contents":"r"}]}}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Read chunks from a readable stream and write them to a writable stream.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[81,1],"name":".spago/pipes/v7.0.1/src/Pipes/Core.purs","end":[81,39]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"Pipe","moduleName":"Pipes.Core","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"b"}]},"arguments":[["a",null],["b",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["lmap",[{"values":[{"sourceSpan":{"start":[25,1],"name":".spago/bifunctors/v5.0.0/src/Data/Bifunctor.purs","end":[25,66]},"score":9,"packageInfo":{"values":["bifunctors"],"tag":"Package"},"name":"lmap","moduleName":"Data.Bifunctor","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Bifunctor"],"Bifunctor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Map a function over the first type argument of a `Bifunctor`.\n"}],"tag":"SearchResult"}]],["knownnat",[{"values":[{"sourceSpan":{"start":[24,1],"name":"src/TypeLevel/Nat.purs","end":[25,27]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"KnownNat","moduleName":"TypeLevel.Nat","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["n",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"PureScript version of the Haskell class defined in GHC.TypeLits. This is the Nat version of IsSymbol, more or less.\n"}],"tag":"SearchResult"}]],["join",[{"values":[{"sourceSpan":{"start":[117,1],"name":".spago/prelude/v5.0.1/src/Control/Bind.purs","end":[117,45]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"join","moduleName":"Control.Bind","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Bind"],"Bind"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Collapse two applications of a monadic type constructor into one.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[30,3],"name":".spago/fork/v5.0.0/src/Control/Monad/Fork/Class.purs","end":[30,24]},"score":1,"packageInfo":{"values":["fork"],"tag":"Package"},"name":"join","moduleName":"Control.Monad.Fork.Class","info":{"values":[{"typeClassArguments":[["f",null],["m",null]],"typeClass":[["Control","Monad","Fork","Class"],"MonadFork"],"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Fork","Class"],"MonadFork"],"constraintArgs":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[38,1],"name":".spago/medea/8b215851959aa8bbf33e6708df6bd683c89d1a5a/src/Data/AcyclicAdjacencyMap.purs","end":[38,121]},"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"join","moduleName":"Data.AcyclicAdjacencyMap","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","AcyclicAdjacencyMap"],"AcyclicAdjacencyMap"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","AcyclicAdjacencyMap"],"AcyclicAdjacencyMap"]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","AcyclicAdjacencyMap"],"AcyclicAdjacencyMap"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[13,1],"name":".spago/bifunctors/v5.0.0/src/Data/Bifunctor/Join.purs","end":[13,32]},"score":9,"packageInfo":{"values":["bifunctors"],"tag":"Package"},"name":"Join","moduleName":"Data.Bifunctor.Join","info":{"values":[{"typeArguments":[["p",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Turns a `Bifunctor` into a `Functor` by equating the two type arguments.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":9,"packageInfo":{"values":["bifunctors"],"tag":"Package"},"name":"Join","moduleName":"Data.Bifunctor.Join","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[16,3],"name":".spago/lattice/v0.3.0/src/Data/Lattice.purs","end":[16,21]},"score":0,"packageInfo":{"values":["lattice"],"tag":"Package"},"name":"join","moduleName":"Data.Lattice","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Lattice"],"JoinSemilattice"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Lattice"],"JoinSemilattice"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/profunctor/v5.0.0/src/Data/Profunctor/Join.purs","end":[12,32]},"score":4,"packageInfo":{"values":["profunctor"],"tag":"Package"},"name":"Join","moduleName":"Data.Profunctor.Join","info":{"values":[{"typeArguments":[["p",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Turns a `Profunctor` into a `Invariant` functor by equating the two type\narguments.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":4,"packageInfo":{"values":["profunctor"],"tag":"Package"},"name":"Join","moduleName":"Data.Profunctor.Join","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["join1with",[{"values":[{"sourceSpan":{"start":[215,1],"name":".spago/strings/v5.0.0/src/Data/String/NonEmpty/Internal.purs","end":[215,83]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"join1With","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semigroup","Foldable"],"Foldable1"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Joins non-empty strings in a non-empty container together as a new\nnon-empty string, inserting a possibly empty string as separator between\nthem. The result is guaranteed to be non-empty.\n\n```purescript\n-- array syntax is used for demonstration here, it would need to be a real `Foldable1`\njoin1With \", \" [NonEmptyString \"apple\", NonEmptyString \"banana\"] == NonEmptyString \"apple, banana\"\njoin1With \"\" [NonEmptyString \"apple\", NonEmptyString \"banana\"] == NonEmptyString \"applebanana\"\n```\n"}],"tag":"SearchResult"}]],["joinfiber",[{"values":[{"sourceSpan":{"start":[188,1],"name":".spago/aff/v6.0.0/src/Effect/Aff.purs","end":[188,25]},"score":13,"packageInfo":{"values":["aff"],"tag":"Package"},"name":"joinFiber","moduleName":"Effect.Aff","info":{"values":[{"type":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Fiber"]},{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Blocks until the fiber completes, yielding the result. If the fiber\nthrows an exception, it is rethrown in the current fiber.\n"}],"tag":"SearchResult"}]],["joinsemilattice",[{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/lattice/v0.3.0/src/Data/Lattice.purs","end":[16,21]},"score":0,"packageInfo":{"values":["lattice"],"tag":"Package"},"name":"JoinSemilattice","moduleName":"Data.Lattice","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A `JoinSemilattice` must satisfy the following laws:\n\n+ Associativity of join:\n    forall a b c, join a (join b c) == join (join a b) c\n+ Commutativity of join:\n    forall a b,   join a b          == join b a\n+ Idempotency of join:\n    forall a,     join a a          == a\n\nJoin semilattices capture the notion of sets with a \"least upper bound\".\n"}],"tag":"SearchResult"}]],["jointhisthat",[{"values":[{"sourceSpan":{"start":[235,1],"name":".spago/medea/8b215851959aa8bbf33e6708df6bd683c89d1a5a/src/Data/Medea.purs","end":[235,64]},"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"joinThisThat","moduleName":"Data.Medea","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["jointhisthat'",[{"values":[{"sourceSpan":{"start":[238,1],"name":".spago/medea/8b215851959aa8bbf33e6708df6bd683c89d1a5a/src/Data/Medea.purs","end":[238,76]},"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"joinThisThat'","moduleName":"Data.Medea","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"Partial"],"constraintArgs":[]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["joinwith",[{"values":[{"sourceSpan":{"start":[96,1],"name":".spago/strings/v5.0.0/src/Data/String/Common.purs","end":[96,60]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"joinWith","moduleName":"Data.String.Common","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Joins the strings in the array together, inserting the first argument\nas separator between them.\n\n```purescript\njoinWith \", \" [\"apple\", \"banana\", \"orange\"] == \"apple, banana, orange\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[200,1],"name":".spago/strings/v5.0.0/src/Data/String/NonEmpty/Internal.purs","end":[200,73]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"joinWith","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Joins the strings in a container together as a new string, inserting the\nfirst argument as separator between them. The result is not guaranteed to\nbe non-empty.\n\n```purescript\njoinWith \", \" [NonEmptyString \"apple\", NonEmptyString \"banana\"] == \"apple, banana\"\njoinWith \", \" [] == \"\"\n```\n"}],"tag":"SearchResult"}]],["joinwith1",[{"values":[{"sourceSpan":{"start":[227,1],"name":".spago/strings/v5.0.0/src/Data/String/NonEmpty/Internal.purs","end":[227,83]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"joinWith1","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semigroup","Foldable"],"Foldable1"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Joins possibly empty strings in a non-empty container together as a new\nnon-empty string, inserting a non-empty string as a separator between them.\nThe result is guaranteed to be non-empty.\n\n```purescript\n-- array syntax is used for demonstration here, it would need to be a real `Foldable1`\njoinWith1 (NonEmptyString \", \") [\"apple\", \"banana\"] == NonEmptyString \"apple, banana\"\njoinWith1 (NonEmptyString \"/\") [\"a\", \"b\", \"\", \"c\", \"\"] == NonEmptyString \"a/b//c/\"\n```\n"}],"tag":"SearchResult"}]],["joker",[{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/functors/v4.1.1/src/Data/Functor/Joker.purs","end":[18,34]},"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Joker","moduleName":"Data.Functor.Joker","info":{"values":[{"typeArguments":[["g",null],["a",null],["b",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"This advanced type's usage and its relation to `Clown` is best understood\nby reading through \"Clowns to the Left, Jokers to the Right (Functional\nPearl)\"\nhttps://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.475.6134&rep=rep1&type=pdf\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":5,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Joker","moduleName":"Data.Functor.Joker","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"b"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["jordanidentity",[{"values":[{"sourceSpan":{"start":[95,1],"name":".spago/properties/v0.2.0/src/Control/Algebra/Properties.purs","end":[95,59]},"score":1,"packageInfo":{"values":["properties"],"tag":"Package"},"name":"jordanIdentity","moduleName":"Control.Algebra.Properties","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["ipv4",[{"values":[{"sourceSpan":{"start":[460,1],"name":"src/Cardano/Types/Transaction.purs","end":[460,30]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Ipv4","moduleName":"Cardano.Types.Transaction","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Ipv4","moduleName":"Cardano.Types.Transaction","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Types","ByteArray"],"ByteArray"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["node-http"],"tag":"Package"},"name":"IPV4","moduleName":"Node.HTTP.Client","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[116,1],"name":"src/Serialization/Types.purs","end":[116,33]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Ipv4","moduleName":"Serialization.Types","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["ipv6",[{"values":[{"sourceSpan":{"start":[471,1],"name":"src/Cardano/Types/Transaction.purs","end":[471,30]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Ipv6","moduleName":"Cardano.Types.Transaction","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Ipv6","moduleName":"Cardano.Types.Transaction","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Types","ByteArray"],"ByteArray"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["node-http"],"tag":"Package"},"name":"IPV6","moduleName":"Node.HTTP.Client","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[117,1],"name":"src/Serialization/Types.purs","end":[117,33]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Ipv6","moduleName":"Serialization.Types","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["graphics",[{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"Graphics","moduleName":"Ansi.Codes","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"GraphicsParam"]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["graphicsparam",[{"values":[{"sourceSpan":{"start":[102,1],"name":".spago/ansi/v6.1.0/src/Ansi/Codes.purs","end":[106,22]},"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"GraphicsParam","moduleName":"Ansi.Codes","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A graphics parameter, controls how text appears; for example, bold,\nunderlined, foreground color, background color.\n"}],"tag":"SearchResult"}]],["graphicsparamtostring",[{"values":[{"sourceSpan":{"start":[114,1],"name":".spago/ansi/v6.1.0/src/Ansi/Codes.purs","end":[114,49]},"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"graphicsParamToString","moduleName":"Ansi.Codes","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"GraphicsParam"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["grate",[{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Grate.purs","end":[26,65]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"grate","moduleName":"Data.Lens.Grate","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"t"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Grate"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[129,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Types.purs","end":[129,59]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"Grate","moduleName":"Data.Lens.Types","info":{"values":[{"type":{"tag":"ForAll","contents":["p",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Profunctor","Closed"],"Closed"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Optic"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},"arguments":[["s",null],["t",null],["a",null],["b",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A grate (http://r6research.livejournal.com/28050.html)\n"}],"tag":"SearchResult"}]],["grate'",[{"values":[{"sourceSpan":{"start":[130,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Types.purs","end":[130,32]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"Grate'","moduleName":"Data.Lens.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Grate"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]},"arguments":[["s",null],["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["grating",[{"values":[{"sourceSpan":{"start":[8,1],"name":".spago/profunctor-lenses/v7.0.1/src/Data/Lens/Internal/Grating.purs","end":[8,57]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"Grating","moduleName":"Data.Lens.Internal.Grating","info":{"values":[{"typeArguments":[["a",null],["b",null],["s",null],["t",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"Grating","moduleName":"Data.Lens.Internal.Grating","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"t"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["greaterthan",[{"values":[{"sourceSpan":{"start":[137,1],"name":".spago/prelude/v5.0.1/src/Data/Ord.purs","end":[137,52]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"greaterThan","moduleName":"Data.Ord","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether one value is _strictly greater than_ another.\n"}],"tag":"SearchResult"}]],["greaterthanoreq",[{"values":[{"sourceSpan":{"start":[149,1],"name":".spago/prelude/v5.0.1/src/Data/Ord.purs","end":[149,56]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"greaterThanOrEq","moduleName":"Data.Ord","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether one value is _non-strictly greater than_ another.\n"}],"tag":"SearchResult"}]],["greatest",[{"values":[{"sourceSpan":{"start":[209,1],"name":".spago/sequences/v3.0.2/src/Data/Sequence/Ordered.purs","end":[209,51]},"score":0,"packageInfo":{"values":["sequences"],"tag":"Package"},"name":"greatest","moduleName":"Data.Sequence.Ordered","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Sequence","Ordered"],"OrdSeq"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"O(1). Access the greatest element of the sequence, or Nothing if the\nsequence is empty.\n"}],"tag":"SearchResult"}]],["green",[{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"Green","moduleName":"Ansi.Codes","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/spec/v5.0.1/src/Test/Spec/Style.purs","end":[27,15]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"green","moduleName":"Test.Spec.Style","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Test","Spec","Style"],"Style"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["group",[{"values":[{"sourceSpan":{"start":[415,1],"name":".spago/arrays/v6.0.1/src/Data/Array/NonEmpty.purs","end":[415,78]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"group","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Group equal, consecutive elements of an array into arrays.\n\n```purescript\ngroup (NonEmptyArray [1, 1, 2, 2, 1]) ==\n  NonEmptyArray [NonEmptyArray [1, 1], NonEmptyArray [2, 2], NonEmptyArray [1]]\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[975,1],"name":".spago/arrays/v6.0.1/src/Data/Array.purs","end":[975,62]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"group","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Group equal, consecutive elements of an array into arrays.\n\n```purescript\ngroup [1, 1, 2, 2, 1] == [NonEmptyArray [1, 1], NonEmptyArray [2, 2], NonEmptyArray [1]]\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[566,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy.purs","end":[566,63]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"group","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Group equal, consecutive elements of a list into lists.\n\nFor example,\n\n```purescript\ngroup (1 : 1 : 2 : 2 : 1 : Nil) == (1 : 1 : Nil) : (2 : 2 : Nil) : (1 : Nil) : Nil\n```\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[265,1],"name":".spago/lists/v6.0.1/src/Data/List/NonEmpty.purs","end":[265,75]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"group","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[595,1],"name":".spago/lists/v6.0.1/src/Data/List.purs","end":[595,63]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"group","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Group equal, consecutive elements of a list into lists.\n\nFor example,\n\n```purescript\ngroup (1 : 1 : 2 : 2 : 1 : Nil) ==\n  (NonEmptyList (NonEmpty 1 (1 : Nil))) : (NonEmptyList (NonEmpty 2 (2 : Nil))) : (NonEmptyList (NonEmpty 1 Nil)) : Nil\n```\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["mote"],"tag":"Package"},"name":"Group","moduleName":"Mote.Description","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Mote","Description"],"RunMode"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Mote","Entry"],"Entry"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Mote","Description"],"Description"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"t"}]}}]}}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/mote/v1.1.0/src/Mote/Description.purs","end":[25,21]},"score":0,"packageInfo":{"values":["mote"],"tag":"Package"},"name":"group","moduleName":"Mote.Description","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["t",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Mote","Description"],"Description"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"t"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Mote","Description"],"Description"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"t"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Basic constructor for `Group` with a label and inner entries.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[78,1],"name":".spago/mote/v1.1.0/src/Mote/Monad.purs","end":[83,28]},"score":0,"packageInfo":{"values":["mote"],"tag":"Package"},"name":"group","moduleName":"Mote.Monad","info":{"values":[{"type":{"tag":"ForAll","contents":["bracket",{"tag":"ForAll","contents":["test",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Mote","Monad"],"MoteT"]},{"tag":"TypeVar","contents":"bracket"}]},{"tag":"TypeVar","contents":"test"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Mote","Monad"],"MoteT"]},{"tag":"TypeVar","contents":"bracket"}]},{"tag":"TypeVar","contents":"test"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Describes a new group. Groups can contain further groups or tests, or a\ncombination of both.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["mote"],"tag":"Package"},"name":"Group","moduleName":"Mote.Plan","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Mote","Entry"],"Entry"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Mote","Plan"],"Plan"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"t"}]}}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[87,1],"name":".spago/test-unit/v16.0.0/src/Test/Unit.purs","end":[87,36]},"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"Group","moduleName":"Test.Unit","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":4,"packageInfo":{"values":["test-unit"],"tag":"Package"},"name":"Group","moduleName":"Test.Unit","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"TestSuite"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[688,1],"name":".spago/optparse/v4.1.0/src/Text/PrettyPrint/Leijen.purs","end":[688,20]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"group","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The @group@ combinator is used to specify alternative\nlayouts. The document @(group x)@ undoes all line breaks in\ndocument @x@. The resulting line is added to the current line if\nthat fits the page. Otherwise, the document @x@ is rendered without\nany changes.\n"}],"tag":"SearchResult"}]],["group'",[{"values":[{"sourceSpan":{"start":[428,1],"name":".spago/arrays/v6.0.1/src/Data/Array/NonEmpty.purs","end":[428,145]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"group'","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","TypeError"],"Warn"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","TypeError"],"Text"]},{"tag":"TypeLevelString","contents":"'group'' is deprecated, use 'groupAll' instead"}]}}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Deprecated previous name of `groupAll`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[987,1],"name":".spago/arrays/v6.0.1/src/Data/Array.purs","end":[987,129]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"group'","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","TypeError"],"Warn"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","TypeError"],"Text"]},{"tag":"TypeLevelString","contents":"'group'' is deprecated, use 'groupAll' instead"}]}}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Deprecated previous name of `groupAll`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[271,1],"name":".spago/lists/v6.0.1/src/Data/List/NonEmpty.purs","end":[271,140]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"group'","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","TypeError"],"Warn"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","TypeError"],"Text"]},{"tag":"TypeLevelString","contents":"'group'' is deprecated, use groupAll instead"}]}}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[610,1],"name":".spago/lists/v6.0.1/src/Data/List.purs","end":[610,128]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"group'","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","TypeError"],"Warn"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","TypeError"],"Text"]},{"tag":"TypeLevelString","contents":"'group'' is deprecated, use groupAll instead"}]}}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Deprecated previous name of `groupAll`.\n"}],"tag":"SearchResult"}]],["groupall",[{"values":[{"sourceSpan":{"start":[424,1],"name":".spago/arrays/v6.0.1/src/Data/Array/NonEmpty.purs","end":[424,82]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"groupAll","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Group equal elements of an array into arrays.\n\n```purescript\ngroupAll (NonEmptyArray [1, 1, 2, 2, 1]) ==\n  NonEmptyArray [NonEmptyArray [1, 1, 1], NonEmptyArray [2, 2]]\n`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[983,1],"name":".spago/arrays/v6.0.1/src/Data/Array.purs","end":[983,66]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"groupAll","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Group equal elements of an array into arrays.\n\n```purescript\ngroupAll [1, 1, 2, 2, 1] == [NonEmptyArray [1, 1, 1], NonEmptyArray [2, 2]]\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[268,1],"name":".spago/lists/v6.0.1/src/Data/List/NonEmpty.purs","end":[268,79]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"groupAll","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[606,1],"name":".spago/lists/v6.0.1/src/Data/List.purs","end":[606,67]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"groupAll","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Group equal elements of a list into lists.\n\nFor example,\n\n```purescript\ngroupAll (1 : 1 : 2 : 2 : 1 : Nil) ==\n  (NonEmptyList (NonEmpty 1 (1 : 1 : Nil))) : (NonEmptyList (NonEmpty 2 (2 : Nil))) : Nil\n```\n"}],"tag":"SearchResult"}]],["groupallby",[{"values":[{"sourceSpan":{"start":[449,1],"name":".spago/arrays/v6.0.1/src/Data/Array/NonEmpty.purs","end":[449,99]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"groupAllBy","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Group equal elements of an array into arrays, using the specified\ncomparison function to determine equality.\n\n```purescript\ngroupAllBy (comparing Down) (NonEmptyArray [1, 3, 2, 4, 3, 3])\n   = NonEmptyArray [NonEmptyArray [4], NonEmptyArray [3, 3, 3], NonEmptyArray [2], NonEmptyArray [1]]\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[1019,1],"name":".spago/arrays/v6.0.1/src/Data/Array.purs","end":[1019,83]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"groupAllBy","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Group equal elements of an array into arrays, using the specified\ncomparison function to determine equality.\n\n```purescript\ngroupAllBy (comparing Down) [1, 3, 2, 4, 3, 3]\n   = [NonEmptyArray [4], NonEmptyArray [3, 3, 3], NonEmptyArray [2], NonEmptyArray [1]]\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[277,1],"name":".spago/lists/v6.0.1/src/Data/List/NonEmpty.purs","end":[277,104]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"groupAllBy","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[638,1],"name":".spago/lists/v6.0.1/src/Data/List.purs","end":[638,92]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"groupAllBy","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Group equal elements of a list into lists, using the specified\nequivalence relation to determine equality.\n\nFor example,\n\n```purescript\ngroupAllBy (\\a b -> odd a && odd b) (1 : 3 : 2 : 4 : 3 : 3 : Nil) ==\n   (NonEmptyList (NonEmpty 1 Nil)) : (NonEmptyList (NonEmpty 2 Nil)) : (NonEmptyList (NonEmpty 3 (3 : 3 : Nil))) : (NonEmptyList (NonEmpty 4 Nil)) : Nil\n```\n"}],"tag":"SearchResult"}]],["groupby",[{"values":[{"sourceSpan":{"start":[439,1],"name":".spago/arrays/v6.0.1/src/Data/Array/NonEmpty.purs","end":[439,95]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"groupBy","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Group equal, consecutive elements of an array into arrays, using the\nspecified equivalence relation to determine equality.\n\n```purescript\ngroupBy (\\a b -> odd a && odd b) (NonEmptyArray [1, 3, 2, 4, 3, 3])\n   = NonEmptyArray [NonEmptyArray [1, 3], NonEmptyArray [2], NonEmptyArray [4], NonEmptyArray [3, 3]]\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[998,1],"name":".spago/arrays/v6.0.1/src/Data/Array.purs","end":[998,79]},"score":17,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"groupBy","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Group equal, consecutive elements of an array into arrays, using the\nspecified equivalence relation to determine equality.\n\n```purescript\ngroupBy (\\a b -> odd a && odd b) [1, 3, 2, 4, 3, 3]\n   = [NonEmptyArray [1, 3], NonEmptyArray [2], NonEmptyArray [4], NonEmptyArray [3, 3]]\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[573,1],"name":".spago/lists/v6.0.1/src/Data/List/Lazy.purs","end":[573,80]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"groupBy","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Group equal, consecutive elements of a list into lists, using the specified\nequivalence relation to determine equality.\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[274,1],"name":".spago/lists/v6.0.1/src/Data/List/NonEmpty.purs","end":[274,92]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"groupBy","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[624,1],"name":".spago/lists/v6.0.1/src/Data/List.purs","end":[624,80]},"score":17,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"groupBy","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Group equal, consecutive elements of a list into lists, using the specified\nequivalence relation to determine equality.\n\nFor example,\n\n```purescript\ngroupBy (\\a b -> odd a && odd b) (1 : 3 : 2 : 4 : 3 : 3 : Nil) ==\n  (NonEmptyList (NonEmpty 1 (3 : Nil))) : (NonEmptyList (NonEmpty 2 Nil)) : (NonEmptyList (NonEmpty 4 Nil)) : (NonEmptyList (NonEmpty 3 (3 : Nil))) : Nil\n```\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"}]],["fst",[{"values":[{"sourceSpan":{"start":[118,1],"name":".spago/tuples/v6.0.1/src/Data/Tuple.purs","end":[118,34]},"score":34,"packageInfo":{"values":["tuples"],"tag":"Package"},"name":"fst","moduleName":"Data.Tuple","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"a"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the first component of a tuple.\n"}],"tag":"SearchResult"}]],["dual",[{"values":[{"sourceSpan":{"start":[14,1],"name":".spago/prelude/v5.0.1/src/Data/Monoid/Dual.purs","end":[14,24]},"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Dual","moduleName":"Data.Monoid.Dual","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The dual of a monoid.\n\n``` purescript\nDual x <> Dual y == Dual (y <> x)\n(mempty :: Dual _) == Dual mempty\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":82,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Dual","moduleName":"Data.Monoid.Dual","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["dummysign",[{"values":[{"sourceSpan":{"start":[79,1],"name":"src/Wallet.purs","end":[79,40]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"dummySign","moduleName":"Wallet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Transaction"],"Transaction"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Transaction"],"Transaction"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["duplex",[{"values":[{"sourceSpan":{"start":[68,1],"name":".spago/node-streams/v5.0.0/src/Node/Stream.purs","end":[68,52]},"score":5,"packageInfo":{"values":["node-streams"],"tag":"Package"},"name":"Duplex","moduleName":"Node.Stream","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","Stream"],"Stream"]},{"tag":"RCons","contents":["read",{"tag":"TypeConstructor","contents":[["Node","Stream"],"Read"]},{"tag":"RCons","contents":["write",{"tag":"TypeConstructor","contents":[["Node","Stream"],"Write"]},{"tag":"REmpty","contents":{}}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A duplex (readable _and_ writable stream)\n"}],"tag":"SearchResult"}]],["duplicate",[{"values":[{"sourceSpan":{"start":[58,1],"name":".spago/control/v5.0.0/src/Control/Extend.purs","end":[58,52]},"score":25,"packageInfo":{"values":["control"],"tag":"Package"},"name":"duplicate","moduleName":"Control.Extend","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Extend"],"Extend"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Duplicate a comonadic context.\n\n`duplicate` is dual to `Control.Bind.join`.\n"}],"tag":"SearchResult"}]],["duplicatepropname",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"DuplicatePropName","moduleName":"Data.Medea.Analysis","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Data","Medea","Parser","Primitive"],"Identifier"]},{"tag":"TypeConstructor","contents":[["Data","Medea","Parser","Primitive"],"MedeaString"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["duplicateschemaname",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"DuplicateSchemaName","moduleName":"Data.Medea.Analysis","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Data","Medea","Parser","Primitive"],"Identifier"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["duration",[{"values":[{"sourceSpan":{"start":[19,1],"name":".spago/datetime/v5.0.2/src/Data/Interval/Duration.purs","end":[19,63]},"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"Duration","moduleName":"Data.Interval.Duration","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"Duration","moduleName":"Data.Interval.Duration","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeConstructor","contents":[["Data","Interval","Duration"],"DurationComponent"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[88,1],"name":".spago/datetime/v5.0.2/src/Data/Time/Duration.purs","end":[90,34]},"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"Duration","moduleName":"Data.Time.Duration","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A class for enabling conversions between duration types.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[157,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLMediaElement.purs","end":[157,61]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"duration","moduleName":"Web.HTML.HTMLMediaElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLMediaElement"],"HTMLMediaElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["durationcomponent",[{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/datetime/v5.0.2/src/Data/Interval/Duration.purs","end":[34,76]},"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"DurationComponent","moduleName":"Data.Interval.Duration","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["durationend",[{"values":[{"sourceSpan":null,"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"DurationEnd","moduleName":"Data.Interval","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["durationonly",[{"values":[{"sourceSpan":null,"score":8,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"DurationOnly","moduleName":"Data.Interval","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"d"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["ax",[{"values":[{"sourceSpan":null,"score":3,"packageInfo":{"values":["node-fs"],"tag":"Package"},"name":"AX","moduleName":"Node.FS","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["ax_plus",[{"values":[{"sourceSpan":null,"score":3,"packageInfo":{"values":["node-fs"],"tag":"Package"},"name":"AX_PLUS","moduleName":"Node.FS","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]]]